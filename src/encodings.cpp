/*
 * Copyright (C) 2017 zyx [@:] zyx gmx [dot] us
 *
 * The litePDF library is free software: you can redistribute it
 * and/or modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation, the version 3
 * of the License.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#ifdef _MSC_VER
#if _MSC_VER <= 1200 // Visual Studio 6
#pragma warning(disable: 4786)
#endif // _MSC_VER <= 1200
/* #ifdef _DEBUG
#define _CRTDBG_MAP_ALLOC
#include <stdlib.h>
#include <crtdbg.h>
#endif // _DEBUG */
#endif // _MSC_VER

#include <winsock2.h>
#include <windows.h>

#include "podofo/podofo.h"

using namespace PoDoFo;

#include "encodings.h"

namespace litePDF {

// http://msdn.microsoft.com/en-us/goglobal/bb964654

static const pdf_utf16be
   unicode_cp1250[256] =  // Central Europe
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0, // not set by windows
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x0, // not set by windows
      0x2030, // PER MILLE SIGN
      0x0160, // LATIN CAPITAL LETTER S WITH CARON
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x015A, // LATIN CAPITAL LETTER S WITH ACUTE
      0x0164, // LATIN CAPITAL LETTER T WITH CARON
      0x017D, // LATIN CAPITAL LETTER Z WITH CARON
      0x0179, // LATIN CAPITAL LETTER Z WITH ACUTE
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x0, // not set by windows
      0x2122, // TRADE MARK SIGN
      0x0161, // LATIN SMALL LETTER S WITH CARON
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x015B, // LATIN SMALL LETTER S WITH ACUTE
      0x0165, // LATIN SMALL LETTER T WITH CARON
      0x017E, // LATIN SMALL LETTER Z WITH CARON
      0x017A, // LATIN SMALL LETTER Z WITH ACUTE
      0x00A0, // NO-BREAK SPACE
      0x02C7, // CARON
      0x02D8, // BREVE
      0x0141, // LATIN CAPITAL LETTER L WITH STROKE
      0x00A4, // CURRENCY SIGN
      0x0104, // LATIN CAPITAL LETTER A WITH OGONEK
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x015E, // LATIN CAPITAL LETTER S WITH CEDILLA
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x017B, // LATIN CAPITAL LETTER Z WITH DOT ABOVE
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x02DB, // OGONEK
      0x0142, // LATIN SMALL LETTER L WITH STROKE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00B8, // CEDILLA
      0x0105, // LATIN SMALL LETTER A WITH OGONEK
      0x015F, // LATIN SMALL LETTER S WITH CEDILLA
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x013D, // LATIN CAPITAL LETTER L WITH CARON
      0x02DD, // DOUBLE ACUTE ACCENT
      0x013E, // LATIN SMALL LETTER L WITH CARON
      0x017C, // LATIN SMALL LETTER Z WITH DOT ABOVE
      0x0154, // LATIN CAPITAL LETTER R WITH ACUTE
      0x00C1, // LATIN CAPITAL LETTER A WITH ACUTE
      0x00C2, // LATIN CAPITAL LETTER A WITH CIRCUMFLEX
      0x0102, // LATIN CAPITAL LETTER A WITH BREVE
      0x00C4, // LATIN CAPITAL LETTER A WITH DIAERESIS
      0x0139, // LATIN CAPITAL LETTER L WITH ACUTE
      0x0106, // LATIN CAPITAL LETTER C WITH ACUTE
      0x00C7, // LATIN CAPITAL LETTER C WITH CEDILLA
      0x010C, // LATIN CAPITAL LETTER C WITH CARON
      0x00C9, // LATIN CAPITAL LETTER E WITH ACUTE
      0x0118, // LATIN CAPITAL LETTER E WITH OGONEK
      0x00CB, // LATIN CAPITAL LETTER E WITH DIAERESIS
      0x011A, // LATIN CAPITAL LETTER E WITH CARON
      0x00CD, // LATIN CAPITAL LETTER I WITH ACUTE
      0x00CE, // LATIN CAPITAL LETTER I WITH CIRCUMFLEX
      0x010E, // LATIN CAPITAL LETTER D WITH CARON
      0x0110, // LATIN CAPITAL LETTER D WITH STROKE
      0x0143, // LATIN CAPITAL LETTER N WITH ACUTE
      0x0147, // LATIN CAPITAL LETTER N WITH CARON
      0x00D3, // LATIN CAPITAL LETTER O WITH ACUTE
      0x00D4, // LATIN CAPITAL LETTER O WITH CIRCUMFLEX
      0x0150, // LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
      0x00D6, // LATIN CAPITAL LETTER O WITH DIAERESIS
      0x00D7, // MULTIPLICATION SIGN
      0x0158, // LATIN CAPITAL LETTER R WITH CARON
      0x016E, // LATIN CAPITAL LETTER U WITH RING ABOVE
      0x00DA, // LATIN CAPITAL LETTER U WITH ACUTE
      0x0170, // LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
      0x00DC, // LATIN CAPITAL LETTER U WITH DIAERESIS
      0x00DD, // LATIN CAPITAL LETTER Y WITH ACUTE
      0x0162, // LATIN CAPITAL LETTER T WITH CEDILLA
      0x00DF, // LATIN SMALL LETTER SHARP S
      0x0155, // LATIN SMALL LETTER R WITH ACUTE
      0x00E1, // LATIN SMALL LETTER A WITH ACUTE
      0x00E2, // LATIN SMALL LETTER A WITH CIRCUMFLEX
      0x0103, // LATIN SMALL LETTER A WITH BREVE
      0x00E4, // LATIN SMALL LETTER A WITH DIAERESIS
      0x013A, // LATIN SMALL LETTER L WITH ACUTE
      0x0107, // LATIN SMALL LETTER C WITH ACUTE
      0x00E7, // LATIN SMALL LETTER C WITH CEDILLA
      0x010D, // LATIN SMALL LETTER C WITH CARON
      0x00E9, // LATIN SMALL LETTER E WITH ACUTE
      0x0119, // LATIN SMALL LETTER E WITH OGONEK
      0x00EB, // LATIN SMALL LETTER E WITH DIAERESIS
      0x011B, // LATIN SMALL LETTER E WITH CARON
      0x00ED, // LATIN SMALL LETTER I WITH ACUTE
      0x00EE, // LATIN SMALL LETTER I WITH CIRCUMFLEX
      0x010F, // LATIN SMALL LETTER D WITH CARON
      0x0111, // LATIN SMALL LETTER D WITH STROKE
      0x0144, // LATIN SMALL LETTER N WITH ACUTE
      0x0148, // LATIN SMALL LETTER N WITH CARON
      0x00F3, // LATIN SMALL LETTER O WITH ACUTE
      0x00F4, // LATIN SMALL LETTER O WITH CIRCUMFLEX
      0x0151, // LATIN SMALL LETTER O WITH DOUBLE ACUTE
      0x00F6, // LATIN SMALL LETTER O WITH DIAERESIS
      0x00F7, // DIVISION SIGN
      0x0159, // LATIN SMALL LETTER R WITH CARON
      0x016F, // LATIN SMALL LETTER U WITH RING ABOVE
      0x00FA, // LATIN SMALL LETTER U WITH ACUTE
      0x0171, // LATIN SMALL LETTER U WITH DOUBLE ACUTE
      0x00FC, // LATIN SMALL LETTER U WITH DIAERESIS
      0x00FD, // LATIN SMALL LETTER Y WITH ACUTE
      0x0163, // LATIN SMALL LETTER T WITH CEDILLA
      0x02D9  // DOT ABOVE
   },

   unicode_cp1251[256] =  // Cyrillic
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x0402, // CYRILLIC CAPITAL LETTER DJE
      0x0403, // CYRILLIC CAPITAL LETTER GJE
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0453, // CYRILLIC SMALL LETTER GJE
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x20AC, // EURO SIGN
      0x2030, // PER MILLE SIGN
      0x0409, // CYRILLIC CAPITAL LETTER LJE
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x040A, // CYRILLIC CAPITAL LETTER NJE
      0x040C, // CYRILLIC CAPITAL LETTER KJE
      0x040B, // CYRILLIC CAPITAL LETTER TSHE
      0x040F, // CYRILLIC CAPITAL LETTER DZHE
      0x0452, // CYRILLIC SMALL LETTER DJE
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x0, // not set by windows
      0x2122, // TRADE MARK SIGN
      0x0459, // CYRILLIC SMALL LETTER LJE
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x045A, // CYRILLIC SMALL LETTER NJE
      0x045C, // CYRILLIC SMALL LETTER KJE
      0x045B, // CYRILLIC SMALL LETTER TSHE
      0x045F, // CYRILLIC SMALL LETTER DZHE
      0x00A0, // NO-BREAK SPACE
      0x040E, // CYRILLIC CAPITAL LETTER SHORT U
      0x045E, // CYRILLIC SMALL LETTER SHORT U
      0x0408, // CYRILLIC CAPITAL LETTER JE
      0x00A4, // CURRENCY SIGN
      0x0490, // CYRILLIC CAPITAL LETTER GHE WITH UPTURN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x0401, // CYRILLIC CAPITAL LETTER IO
      0x00A9, // COPYRIGHT SIGN
      0x0404, // CYRILLIC CAPITAL LETTER UKRAINIAN IE
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x0407, // CYRILLIC CAPITAL LETTER YI
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x0406, // CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
      0x0456, // CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
      0x0491, // CYRILLIC SMALL LETTER GHE WITH UPTURN
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x0451, // CYRILLIC SMALL LETTER IO
      0x2116, // NUMERO SIGN
      0x0454, // CYRILLIC SMALL LETTER UKRAINIAN IE
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x0458, // CYRILLIC SMALL LETTER JE
      0x0405, // CYRILLIC CAPITAL LETTER DZE
      0x0455, // CYRILLIC SMALL LETTER DZE
      0x0457, // CYRILLIC SMALL LETTER YI
      0x0410, // CYRILLIC CAPITAL LETTER A
      0x0411, // CYRILLIC CAPITAL LETTER BE
      0x0412, // CYRILLIC CAPITAL LETTER VE
      0x0413, // CYRILLIC CAPITAL LETTER GHE
      0x0414, // CYRILLIC CAPITAL LETTER DE
      0x0415, // CYRILLIC CAPITAL LETTER IE
      0x0416, // CYRILLIC CAPITAL LETTER ZHE
      0x0417, // CYRILLIC CAPITAL LETTER ZE
      0x0418, // CYRILLIC CAPITAL LETTER I
      0x0419, // CYRILLIC CAPITAL LETTER SHORT I
      0x041A, // CYRILLIC CAPITAL LETTER KA
      0x041B, // CYRILLIC CAPITAL LETTER EL
      0x041C, // CYRILLIC CAPITAL LETTER EM
      0x041D, // CYRILLIC CAPITAL LETTER EN
      0x041E, // CYRILLIC CAPITAL LETTER O
      0x041F, // CYRILLIC CAPITAL LETTER PE
      0x0420, // CYRILLIC CAPITAL LETTER ER
      0x0421, // CYRILLIC CAPITAL LETTER ES
      0x0422, // CYRILLIC CAPITAL LETTER TE
      0x0423, // CYRILLIC CAPITAL LETTER U
      0x0424, // CYRILLIC CAPITAL LETTER EF
      0x0425, // CYRILLIC CAPITAL LETTER HA
      0x0426, // CYRILLIC CAPITAL LETTER TSE
      0x0427, // CYRILLIC CAPITAL LETTER CHE
      0x0428, // CYRILLIC CAPITAL LETTER SHA
      0x0429, // CYRILLIC CAPITAL LETTER SHCHA
      0x042A, // CYRILLIC CAPITAL LETTER HARD SIGN
      0x042B, // CYRILLIC CAPITAL LETTER YERU
      0x042C, // CYRILLIC CAPITAL LETTER SOFT SIGN
      0x042D, // CYRILLIC CAPITAL LETTER E
      0x042E, // CYRILLIC CAPITAL LETTER YU
      0x042F, // CYRILLIC CAPITAL LETTER YA
      0x0430, // CYRILLIC SMALL LETTER A
      0x0431, // CYRILLIC SMALL LETTER BE
      0x0432, // CYRILLIC SMALL LETTER VE
      0x0433, // CYRILLIC SMALL LETTER GHE
      0x0434, // CYRILLIC SMALL LETTER DE
      0x0435, // CYRILLIC SMALL LETTER IE
      0x0436, // CYRILLIC SMALL LETTER ZHE
      0x0437, // CYRILLIC SMALL LETTER ZE
      0x0438, // CYRILLIC SMALL LETTER I
      0x0439, // CYRILLIC SMALL LETTER SHORT I
      0x043A, // CYRILLIC SMALL LETTER KA
      0x043B, // CYRILLIC SMALL LETTER EL
      0x043C, // CYRILLIC SMALL LETTER EM
      0x043D, // CYRILLIC SMALL LETTER EN
      0x043E, // CYRILLIC SMALL LETTER O
      0x043F, // CYRILLIC SMALL LETTER PE
      0x0440, // CYRILLIC SMALL LETTER ER
      0x0441, // CYRILLIC SMALL LETTER ES
      0x0442, // CYRILLIC SMALL LETTER TE
      0x0443, // CYRILLIC SMALL LETTER U
      0x0444, // CYRILLIC SMALL LETTER EF
      0x0445, // CYRILLIC SMALL LETTER HA
      0x0446, // CYRILLIC SMALL LETTER TSE
      0x0447, // CYRILLIC SMALL LETTER CHE
      0x0448, // CYRILLIC SMALL LETTER SHA
      0x0449, // CYRILLIC SMALL LETTER SHCHA
      0x044A, // CYRILLIC SMALL LETTER HARD SIGN
      0x044B, // CYRILLIC SMALL LETTER YERU
      0x044C, // CYRILLIC SMALL LETTER SOFT SIGN
      0x044D, // CYRILLIC SMALL LETTER E
      0x044E, // CYRILLIC SMALL LETTER YU
      0x044F  // CYRILLIC SMALL LETTER YA
   },

   unicode_cp1252[256] =  // Latin I - WinAnsiEncoding
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0192, // LATIN SMALL LETTER F WITH HOOK
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x02C6, // MODIFIER LETTER CIRCUMFLEX ACCENT
      0x2030, // PER MILLE SIGN
      0x0160, // LATIN CAPITAL LETTER S WITH CARON
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0152, // LATIN CAPITAL LIGATURE OE
      0x0, // not set by windows
      0x017D, // LATIN CAPITAL LETTER Z WITH CARON
      0x0, // not set by windows
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x02DC, // SMALL TILDE
      0x2122, // TRADE MARK SIGN
      0x0161, // LATIN SMALL LETTER S WITH CARON
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0153, // LATIN SMALL LIGATURE OE
      0x0, // not set by windows
      0x017E, // LATIN SMALL LETTER Z WITH CARON
      0x0178, // LATIN CAPITAL LETTER Y WITH DIAERESIS
      0x00A0, // NO-BREAK SPACE
      0x00A1, // INVERTED EXCLAMATION MARK
      0x00A2, // CENT SIGN
      0x00A3, // POUND SIGN
      0x00A4, // CURRENCY SIGN
      0x00A5, // YEN SIGN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x00AA, // FEMININE ORDINAL INDICATOR
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x00AF, // MACRON
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00B8, // CEDILLA
      0x00B9, // SUPERSCRIPT ONE
      0x00BA, // MASCULINE ORDINAL INDICATOR
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00BC, // VULGAR FRACTION ONE QUARTER
      0x00BD, // VULGAR FRACTION ONE HALF
      0x00BE, // VULGAR FRACTION THREE QUARTERS
      0x00BF, // INVERTED QUESTION MARK
      0x00C0, // LATIN CAPITAL LETTER A WITH GRAVE
      0x00C1, // LATIN CAPITAL LETTER A WITH ACUTE
      0x00C2, // LATIN CAPITAL LETTER A WITH CIRCUMFLEX
      0x00C3, // LATIN CAPITAL LETTER A WITH TILDE
      0x00C4, // LATIN CAPITAL LETTER A WITH DIAERESIS
      0x00C5, // LATIN CAPITAL LETTER A WITH RING ABOVE
      0x00C6, // LATIN CAPITAL LETTER AE
      0x00C7, // LATIN CAPITAL LETTER C WITH CEDILLA
      0x00C8, // LATIN CAPITAL LETTER E WITH GRAVE
      0x00C9, // LATIN CAPITAL LETTER E WITH ACUTE
      0x00CA, // LATIN CAPITAL LETTER E WITH CIRCUMFLEX
      0x00CB, // LATIN CAPITAL LETTER E WITH DIAERESIS
      0x00CC, // LATIN CAPITAL LETTER I WITH GRAVE
      0x00CD, // LATIN CAPITAL LETTER I WITH ACUTE
      0x00CE, // LATIN CAPITAL LETTER I WITH CIRCUMFLEX
      0x00CF, // LATIN CAPITAL LETTER I WITH DIAERESIS
      0x00D0, // LATIN CAPITAL LETTER ETH
      0x00D1, // LATIN CAPITAL LETTER N WITH TILDE
      0x00D2, // LATIN CAPITAL LETTER O WITH GRAVE
      0x00D3, // LATIN CAPITAL LETTER O WITH ACUTE
      0x00D4, // LATIN CAPITAL LETTER O WITH CIRCUMFLEX
      0x00D5, // LATIN CAPITAL LETTER O WITH TILDE
      0x00D6, // LATIN CAPITAL LETTER O WITH DIAERESIS
      0x00D7, // MULTIPLICATION SIGN
      0x00D8, // LATIN CAPITAL LETTER O WITH STROKE
      0x00D9, // LATIN CAPITAL LETTER U WITH GRAVE
      0x00DA, // LATIN CAPITAL LETTER U WITH ACUTE
      0x00DB, // LATIN CAPITAL LETTER U WITH CIRCUMFLEX
      0x00DC, // LATIN CAPITAL LETTER U WITH DIAERESIS
      0x00DD, // LATIN CAPITAL LETTER Y WITH ACUTE
      0x00DE, // LATIN CAPITAL LETTER THORN
      0x00DF, // LATIN SMALL LETTER SHARP S
      0x00E0, // LATIN SMALL LETTER A WITH GRAVE
      0x00E1, // LATIN SMALL LETTER A WITH ACUTE
      0x00E2, // LATIN SMALL LETTER A WITH CIRCUMFLEX
      0x00E3, // LATIN SMALL LETTER A WITH TILDE
      0x00E4, // LATIN SMALL LETTER A WITH DIAERESIS
      0x00E5, // LATIN SMALL LETTER A WITH RING ABOVE
      0x00E6, // LATIN SMALL LETTER AE
      0x00E7, // LATIN SMALL LETTER C WITH CEDILLA
      0x00E8, // LATIN SMALL LETTER E WITH GRAVE
      0x00E9, // LATIN SMALL LETTER E WITH ACUTE
      0x00EA, // LATIN SMALL LETTER E WITH CIRCUMFLEX
      0x00EB, // LATIN SMALL LETTER E WITH DIAERESIS
      0x00EC, // LATIN SMALL LETTER I WITH GRAVE
      0x00ED, // LATIN SMALL LETTER I WITH ACUTE
      0x00EE, // LATIN SMALL LETTER I WITH CIRCUMFLEX
      0x00EF, // LATIN SMALL LETTER I WITH DIAERESIS
      0x00F0, // LATIN SMALL LETTER ETH
      0x00F1, // LATIN SMALL LETTER N WITH TILDE
      0x00F2, // LATIN SMALL LETTER O WITH GRAVE
      0x00F3, // LATIN SMALL LETTER O WITH ACUTE
      0x00F4, // LATIN SMALL LETTER O WITH CIRCUMFLEX
      0x00F5, // LATIN SMALL LETTER O WITH TILDE
      0x00F6, // LATIN SMALL LETTER O WITH DIAERESIS
      0x00F7, // DIVISION SIGN
      0x00F8, // LATIN SMALL LETTER O WITH STROKE
      0x00F9, // LATIN SMALL LETTER U WITH GRAVE
      0x00FA, // LATIN SMALL LETTER U WITH ACUTE
      0x00FB, // LATIN SMALL LETTER U WITH CIRCUMFLEX
      0x00FC, // LATIN SMALL LETTER U WITH DIAERESIS
      0x00FD, // LATIN SMALL LETTER Y WITH ACUTE
      0x00FE, // LATIN SMALL LETTER THORN
      0x00FF  // LATIN SMALL LETTER Y WITH DIAERESIS
   },

   unicode_cp1253[256] =  // Greek
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0192, // LATIN SMALL LETTER F WITH HOOK
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x0, // not set by windows
      0x2030, // PER MILLE SIGN
      0x0, // not set by windows
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x0, // not set by windows
      0x2122, // TRADE MARK SIGN
      0x0, // not set by windows
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x00A0, // NO-BREAK SPACE
      0x0385, // GREEK DIALYTIKA TONOS
      0x0386, // GREEK CAPITAL LETTER ALPHA WITH TONOS
      0x00A3, // POUND SIGN
      0x00A4, // CURRENCY SIGN
      0x00A5, // YEN SIGN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x0, // not set by windows
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x2015, // HORIZONTAL BAR
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x0384, // GREEK TONOS
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x0388, // GREEK CAPITAL LETTER EPSILON WITH TONOS
      0x0389, // GREEK CAPITAL LETTER ETA WITH TONOS
      0x038A, // GREEK CAPITAL LETTER IOTA WITH TONOS
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x038C, // GREEK CAPITAL LETTER OMICRON WITH TONOS
      0x00BD, // VULGAR FRACTION ONE HALF
      0x038E, // GREEK CAPITAL LETTER UPSILON WITH TONOS
      0x038F, // GREEK CAPITAL LETTER OMEGA WITH TONOS
      0x0390, // GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
      0x0391, // GREEK CAPITAL LETTER ALPHA
      0x0392, // GREEK CAPITAL LETTER BETA
      0x0393, // GREEK CAPITAL LETTER GAMMA
      0x0394, // GREEK CAPITAL LETTER DELTA
      0x0395, // GREEK CAPITAL LETTER EPSILON
      0x0396, // GREEK CAPITAL LETTER ZETA
      0x0397, // GREEK CAPITAL LETTER ETA
      0x0398, // GREEK CAPITAL LETTER THETA
      0x0399, // GREEK CAPITAL LETTER IOTA
      0x039A, // GREEK CAPITAL LETTER KAPPA
      0x039B, // GREEK CAPITAL LETTER LAMDA
      0x039C, // GREEK CAPITAL LETTER MU
      0x039D, // GREEK CAPITAL LETTER NU
      0x039E, // GREEK CAPITAL LETTER XI
      0x039F, // GREEK CAPITAL LETTER OMICRON
      0x03A0, // GREEK CAPITAL LETTER PI
      0x03A1, // GREEK CAPITAL LETTER RHO
      0x0, // not set by windows
      0x03A3, // GREEK CAPITAL LETTER SIGMA
      0x03A4, // GREEK CAPITAL LETTER TAU
      0x03A5, // GREEK CAPITAL LETTER UPSILON
      0x03A6, // GREEK CAPITAL LETTER PHI
      0x03A7, // GREEK CAPITAL LETTER CHI
      0x03A8, // GREEK CAPITAL LETTER PSI
      0x03A9, // GREEK CAPITAL LETTER OMEGA
      0x03AA, // GREEK CAPITAL LETTER IOTA WITH DIALYTIKA
      0x03AB, // GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA
      0x03AC, // GREEK SMALL LETTER ALPHA WITH TONOS
      0x03AD, // GREEK SMALL LETTER EPSILON WITH TONOS
      0x03AE, // GREEK SMALL LETTER ETA WITH TONOS
      0x03AF, // GREEK SMALL LETTER IOTA WITH TONOS
      0x03B0, // GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
      0x03B1, // GREEK SMALL LETTER ALPHA
      0x03B2, // GREEK SMALL LETTER BETA
      0x03B3, // GREEK SMALL LETTER GAMMA
      0x03B4, // GREEK SMALL LETTER DELTA
      0x03B5, // GREEK SMALL LETTER EPSILON
      0x03B6, // GREEK SMALL LETTER ZETA
      0x03B7, // GREEK SMALL LETTER ETA
      0x03B8, // GREEK SMALL LETTER THETA
      0x03B9, // GREEK SMALL LETTER IOTA
      0x03BA, // GREEK SMALL LETTER KAPPA
      0x03BB, // GREEK SMALL LETTER LAMDA
      0x03BC, // GREEK SMALL LETTER MU
      0x03BD, // GREEK SMALL LETTER NU
      0x03BE, // GREEK SMALL LETTER XI
      0x03BF, // GREEK SMALL LETTER OMICRON
      0x03C0, // GREEK SMALL LETTER PI
      0x03C1, // GREEK SMALL LETTER RHO
      0x03C2, // GREEK SMALL LETTER FINAL SIGMA
      0x03C3, // GREEK SMALL LETTER SIGMA
      0x03C4, // GREEK SMALL LETTER TAU
      0x03C5, // GREEK SMALL LETTER UPSILON
      0x03C6, // GREEK SMALL LETTER PHI
      0x03C7, // GREEK SMALL LETTER CHI
      0x03C8, // GREEK SMALL LETTER PSI
      0x03C9, // GREEK SMALL LETTER OMEGA
      0x03CA, // GREEK SMALL LETTER IOTA WITH DIALYTIKA
      0x03CB, // GREEK SMALL LETTER UPSILON WITH DIALYTIKA
      0x03CC, // GREEK SMALL LETTER OMICRON WITH TONOS
      0x03CD, // GREEK SMALL LETTER UPSILON WITH TONOS
      0x03CE, // GREEK SMALL LETTER OMEGA WITH TONOS
      0x0  // not set by windows
   },

   unicode_cp1254[256] =  // Turkish
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0192, // LATIN SMALL LETTER F WITH HOOK
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x02C6, // MODIFIER LETTER CIRCUMFLEX ACCENT
      0x2030, // PER MILLE SIGN
      0x0160, // LATIN CAPITAL LETTER S WITH CARON
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0152, // LATIN CAPITAL LIGATURE OE
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x02DC, // SMALL TILDE
      0x2122, // TRADE MARK SIGN
      0x0161, // LATIN SMALL LETTER S WITH CARON
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0153, // LATIN SMALL LIGATURE OE
      0x0, // not set by windows
      0x0, // not set by windows
      0x0178, // LATIN CAPITAL LETTER Y WITH DIAERESIS
      0x00A0, // NO-BREAK SPACE
      0x00A1, // INVERTED EXCLAMATION MARK
      0x00A2, // CENT SIGN
      0x00A3, // POUND SIGN
      0x00A4, // CURRENCY SIGN
      0x00A5, // YEN SIGN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x00AA, // FEMININE ORDINAL INDICATOR
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x00AF, // MACRON
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00B8, // CEDILLA
      0x00B9, // SUPERSCRIPT ONE
      0x00BA, // MASCULINE ORDINAL INDICATOR
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00BC, // VULGAR FRACTION ONE QUARTER
      0x00BD, // VULGAR FRACTION ONE HALF
      0x00BE, // VULGAR FRACTION THREE QUARTERS
      0x00BF, // INVERTED QUESTION MARK
      0x00C0, // LATIN CAPITAL LETTER A WITH GRAVE
      0x00C1, // LATIN CAPITAL LETTER A WITH ACUTE
      0x00C2, // LATIN CAPITAL LETTER A WITH CIRCUMFLEX
      0x00C3, // LATIN CAPITAL LETTER A WITH TILDE
      0x00C4, // LATIN CAPITAL LETTER A WITH DIAERESIS
      0x00C5, // LATIN CAPITAL LETTER A WITH RING ABOVE
      0x00C6, // LATIN CAPITAL LETTER AE
      0x00C7, // LATIN CAPITAL LETTER C WITH CEDILLA
      0x00C8, // LATIN CAPITAL LETTER E WITH GRAVE
      0x00C9, // LATIN CAPITAL LETTER E WITH ACUTE
      0x00CA, // LATIN CAPITAL LETTER E WITH CIRCUMFLEX
      0x00CB, // LATIN CAPITAL LETTER E WITH DIAERESIS
      0x00CC, // LATIN CAPITAL LETTER I WITH GRAVE
      0x00CD, // LATIN CAPITAL LETTER I WITH ACUTE
      0x00CE, // LATIN CAPITAL LETTER I WITH CIRCUMFLEX
      0x00CF, // LATIN CAPITAL LETTER I WITH DIAERESIS
      0x011E, // LATIN CAPITAL LETTER G WITH BREVE
      0x00D1, // LATIN CAPITAL LETTER N WITH TILDE
      0x00D2, // LATIN CAPITAL LETTER O WITH GRAVE
      0x00D3, // LATIN CAPITAL LETTER O WITH ACUTE
      0x00D4, // LATIN CAPITAL LETTER O WITH CIRCUMFLEX
      0x00D5, // LATIN CAPITAL LETTER O WITH TILDE
      0x00D6, // LATIN CAPITAL LETTER O WITH DIAERESIS
      0x00D7, // MULTIPLICATION SIGN
      0x00D8, // LATIN CAPITAL LETTER O WITH STROKE
      0x00D9, // LATIN CAPITAL LETTER U WITH GRAVE
      0x00DA, // LATIN CAPITAL LETTER U WITH ACUTE
      0x00DB, // LATIN CAPITAL LETTER U WITH CIRCUMFLEX
      0x00DC, // LATIN CAPITAL LETTER U WITH DIAERESIS
      0x0130, // LATIN CAPITAL LETTER I WITH DOT ABOVE
      0x015E, // LATIN CAPITAL LETTER S WITH CEDILLA
      0x00DF, // LATIN SMALL LETTER SHARP S
      0x00E0, // LATIN SMALL LETTER A WITH GRAVE
      0x00E1, // LATIN SMALL LETTER A WITH ACUTE
      0x00E2, // LATIN SMALL LETTER A WITH CIRCUMFLEX
      0x00E3, // LATIN SMALL LETTER A WITH TILDE
      0x00E4, // LATIN SMALL LETTER A WITH DIAERESIS
      0x00E5, // LATIN SMALL LETTER A WITH RING ABOVE
      0x00E6, // LATIN SMALL LETTER AE
      0x00E7, // LATIN SMALL LETTER C WITH CEDILLA
      0x00E8, // LATIN SMALL LETTER E WITH GRAVE
      0x00E9, // LATIN SMALL LETTER E WITH ACUTE
      0x00EA, // LATIN SMALL LETTER E WITH CIRCUMFLEX
      0x00EB, // LATIN SMALL LETTER E WITH DIAERESIS
      0x00EC, // LATIN SMALL LETTER I WITH GRAVE
      0x00ED, // LATIN SMALL LETTER I WITH ACUTE
      0x00EE, // LATIN SMALL LETTER I WITH CIRCUMFLEX
      0x00EF, // LATIN SMALL LETTER I WITH DIAERESIS
      0x011F, // LATIN SMALL LETTER G WITH BREVE
      0x00F1, // LATIN SMALL LETTER N WITH TILDE
      0x00F2, // LATIN SMALL LETTER O WITH GRAVE
      0x00F3, // LATIN SMALL LETTER O WITH ACUTE
      0x00F4, // LATIN SMALL LETTER O WITH CIRCUMFLEX
      0x00F5, // LATIN SMALL LETTER O WITH TILDE
      0x00F6, // LATIN SMALL LETTER O WITH DIAERESIS
      0x00F7, // DIVISION SIGN
      0x00F8, // LATIN SMALL LETTER O WITH STROKE
      0x00F9, // LATIN SMALL LETTER U WITH GRAVE
      0x00FA, // LATIN SMALL LETTER U WITH ACUTE
      0x00FB, // LATIN SMALL LETTER U WITH CIRCUMFLEX
      0x00FC, // LATIN SMALL LETTER U WITH DIAERESIS
      0x0131, // LATIN SMALL LETTER DOTLESS I
      0x015F, // LATIN SMALL LETTER S WITH CEDILLA
      0x00FF  // LATIN SMALL LETTER Y WITH DIAERESIS
   },

   unicode_cp1255[256] =  // Hebrew
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0192, // LATIN SMALL LETTER F WITH HOOK
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x02C6, // MODIFIER LETTER CIRCUMFLEX ACCENT
      0x2030, // PER MILLE SIGN
      0x0, // not set by windows
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x02DC, // SMALL TILDE
      0x2122, // TRADE MARK SIGN
      0x0, // not set by windows
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x00A0, // NO-BREAK SPACE
      0x00A1, // INVERTED EXCLAMATION MARK
      0x00A2, // CENT SIGN
      0x00A3, // POUND SIGN
      0x20AA, // NEW SHEQEL SIGN
      0x00A5, // YEN SIGN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x00D7, // MULTIPLICATION SIGN
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x00AF, // MACRON
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00B8, // CEDILLA
      0x00B9, // SUPERSCRIPT ONE
      0x00F7, // DIVISION SIGN
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00BC, // VULGAR FRACTION ONE QUARTER
      0x00BD, // VULGAR FRACTION ONE HALF
      0x00BE, // VULGAR FRACTION THREE QUARTERS
      0x00BF, // INVERTED QUESTION MARK
      0x05B0, // HEBREW POINT SHEVA
      0x05B1, // HEBREW POINT HATAF SEGOL
      0x05B2, // HEBREW POINT HATAF PATAH
      0x05B3, // HEBREW POINT HATAF QAMATS
      0x05B4, // HEBREW POINT HIRIQ
      0x05B5, // HEBREW POINT TSERE
      0x05B6, // HEBREW POINT SEGOL
      0x05B7, // HEBREW POINT PATAH
      0x05B8, // HEBREW POINT QAMATS
      0x05B9, // HEBREW POINT HOLAM
      0x0, // not set by windows
      0x05BB, // HEBREW POINT QUBUTS
      0x05BC, // HEBREW POINT DAGESH OR MAPIQ
      0x05BD, // HEBREW POINT METEG
      0x05BE, // HEBREW PUNCTUATION MAQAF
      0x05BF, // HEBREW POINT RAFE
      0x05C0, // HEBREW PUNCTUATION PASEQ
      0x05C1, // HEBREW POINT SHIN DOT
      0x05C2, // HEBREW POINT SIN DOT
      0x05C3, // HEBREW PUNCTUATION SOF PASUQ
      0x05F0, // HEBREW LIGATURE YIDDISH DOUBLE VAV
      0x05F1, // HEBREW LIGATURE YIDDISH VAV YOD
      0x05F2, // HEBREW LIGATURE YIDDISH DOUBLE YOD
      0x05F3, // HEBREW PUNCTUATION GERESH
      0x05F4, // HEBREW PUNCTUATION GERSHAYIM
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x05D0, // HEBREW LETTER ALEF
      0x05D1, // HEBREW LETTER BET
      0x05D2, // HEBREW LETTER GIMEL
      0x05D3, // HEBREW LETTER DALET
      0x05D4, // HEBREW LETTER HE
      0x05D5, // HEBREW LETTER VAV
      0x05D6, // HEBREW LETTER ZAYIN
      0x05D7, // HEBREW LETTER HET
      0x05D8, // HEBREW LETTER TET
      0x05D9, // HEBREW LETTER YOD
      0x05DA, // HEBREW LETTER FINAL KAF
      0x05DB, // HEBREW LETTER KAF
      0x05DC, // HEBREW LETTER LAMED
      0x05DD, // HEBREW LETTER FINAL MEM
      0x05DE, // HEBREW LETTER MEM
      0x05DF, // HEBREW LETTER FINAL NUN
      0x05E0, // HEBREW LETTER NUN
      0x05E1, // HEBREW LETTER SAMEKH
      0x05E2, // HEBREW LETTER AYIN
      0x05E3, // HEBREW LETTER FINAL PE
      0x05E4, // HEBREW LETTER PE
      0x05E5, // HEBREW LETTER FINAL TSADI
      0x05E6, // HEBREW LETTER TSADI
      0x05E7, // HEBREW LETTER QOF
      0x05E8, // HEBREW LETTER RESH
      0x05E9, // HEBREW LETTER SHIN
      0x05EA, // HEBREW LETTER TAV
      0x0, // not set by windows
      0x0, // not set by windows
      0x200E, // LEFT-TO-RIGHT MARK
      0x200F, // RIGHT-TO-LEFT MARK
      0x0  // not set by windows
   },

   unicode_cp1256[256] =  // Arabic
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x067E, // ARABIC LETTER PEH
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0192, // LATIN SMALL LETTER F WITH HOOK
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x02C6, // MODIFIER LETTER CIRCUMFLEX ACCENT
      0x2030, // PER MILLE SIGN
      0x0679, // ARABIC LETTER TTEH
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0152, // LATIN CAPITAL LIGATURE OE
      0x0686, // ARABIC LETTER TCHEH
      0x0698, // ARABIC LETTER JEH
      0x0688, // ARABIC LETTER DDAL
      0x06AF, // ARABIC LETTER GAF
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x06A9, // ARABIC LETTER KEHEH
      0x2122, // TRADE MARK SIGN
      0x0691, // ARABIC LETTER RREH
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0153, // LATIN SMALL LIGATURE OE
      0x200C, // ZERO WIDTH NON-JOINER
      0x200D, // ZERO WIDTH JOINER
      0x06BA, // ARABIC LETTER NOON GHUNNA
      0x00A0, // NO-BREAK SPACE
      0x060C, // ARABIC COMMA
      0x00A2, // CENT SIGN
      0x00A3, // POUND SIGN
      0x00A4, // CURRENCY SIGN
      0x00A5, // YEN SIGN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x06BE, // ARABIC LETTER HEH DOACHASHMEE
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x00AF, // MACRON
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00B8, // CEDILLA
      0x00B9, // SUPERSCRIPT ONE
      0x061B, // ARABIC SEMICOLON
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00BC, // VULGAR FRACTION ONE QUARTER
      0x00BD, // VULGAR FRACTION ONE HALF
      0x00BE, // VULGAR FRACTION THREE QUARTERS
      0x061F, // ARABIC QUESTION MARK
      0x06C1, // ARABIC LETTER HEH GOAL
      0x0621, // ARABIC LETTER HAMZA
      0x0622, // ARABIC LETTER ALEF WITH MADDA ABOVE
      0x0623, // ARABIC LETTER ALEF WITH HAMZA ABOVE
      0x0624, // ARABIC LETTER WAW WITH HAMZA ABOVE
      0x0625, // ARABIC LETTER ALEF WITH HAMZA BELOW
      0x0626, // ARABIC LETTER YEH WITH HAMZA ABOVE
      0x0627, // ARABIC LETTER ALEF
      0x0628, // ARABIC LETTER BEH
      0x0629, // ARABIC LETTER TEH MARBUTA
      0x062A, // ARABIC LETTER TEH
      0x062B, // ARABIC LETTER THEH
      0x062C, // ARABIC LETTER JEEM
      0x062D, // ARABIC LETTER HAH
      0x062E, // ARABIC LETTER KHAH
      0x062F, // ARABIC LETTER DAL
      0x0630, // ARABIC LETTER THAL
      0x0631, // ARABIC LETTER REH
      0x0632, // ARABIC LETTER ZAIN
      0x0633, // ARABIC LETTER SEEN
      0x0634, // ARABIC LETTER SHEEN
      0x0635, // ARABIC LETTER SAD
      0x0636, // ARABIC LETTER DAD
      0x00D7, // MULTIPLICATION SIGN
      0x0637, // ARABIC LETTER TAH
      0x0638, // ARABIC LETTER ZAH
      0x0639, // ARABIC LETTER AIN
      0x063A, // ARABIC LETTER GHAIN
      0x0640, // ARABIC TATWEEL
      0x0641, // ARABIC LETTER FEH
      0x0642, // ARABIC LETTER QAF
      0x0643, // ARABIC LETTER KAF
      0x00E0, // LATIN SMALL LETTER A WITH GRAVE
      0x0644, // ARABIC LETTER LAM
      0x00E2, // LATIN SMALL LETTER A WITH CIRCUMFLEX
      0x0645, // ARABIC LETTER MEEM
      0x0646, // ARABIC LETTER NOON
      0x0647, // ARABIC LETTER HEH
      0x0648, // ARABIC LETTER WAW
      0x00E7, // LATIN SMALL LETTER C WITH CEDILLA
      0x00E8, // LATIN SMALL LETTER E WITH GRAVE
      0x00E9, // LATIN SMALL LETTER E WITH ACUTE
      0x00EA, // LATIN SMALL LETTER E WITH CIRCUMFLEX
      0x00EB, // LATIN SMALL LETTER E WITH DIAERESIS
      0x0649, // ARABIC LETTER ALEF MAKSURA
      0x064A, // ARABIC LETTER YEH
      0x00EE, // LATIN SMALL LETTER I WITH CIRCUMFLEX
      0x00EF, // LATIN SMALL LETTER I WITH DIAERESIS
      0x064B, // ARABIC FATHATAN
      0x064C, // ARABIC DAMMATAN
      0x064D, // ARABIC KASRATAN
      0x064E, // ARABIC FATHA
      0x00F4, // LATIN SMALL LETTER O WITH CIRCUMFLEX
      0x064F, // ARABIC DAMMA
      0x0650, // ARABIC KASRA
      0x00F7, // DIVISION SIGN
      0x0651, // ARABIC SHADDA
      0x00F9, // LATIN SMALL LETTER U WITH GRAVE
      0x0652, // ARABIC SUKUN
      0x00FB, // LATIN SMALL LETTER U WITH CIRCUMFLEX
      0x00FC, // LATIN SMALL LETTER U WITH DIAERESIS
      0x200E, // LEFT-TO-RIGHT MARK
      0x200F, // RIGHT-TO-LEFT MARK
      0x06D2  // ARABIC LETTER YEH BARREE
   },

   unicode_cp1257[256] =  // Baltic
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0, // not set by windows
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x0, // not set by windows
      0x2030, // PER MILLE SIGN
      0x0, // not set by windows
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0, // not set by windows
      0x00A8, // DIAERESIS
      0x02C7, // CARON
      0x00B8, // CEDILLA
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x0, // not set by windows
      0x2122, // TRADE MARK SIGN
      0x0, // not set by windows
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0, // not set by windows
      0x00AF, // MACRON
      0x02DB, // OGONEK
      0x0, // not set by windows
      0x00A0, // NO-BREAK SPACE
      0x0, // not set by windows
      0x00A2, // CENT SIGN
      0x00A3, // POUND SIGN
      0x00A4, // CURRENCY SIGN
      0x0, // not set by windows
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00D8, // LATIN CAPITAL LETTER O WITH STROKE
      0x00A9, // COPYRIGHT SIGN
      0x0156, // LATIN CAPITAL LETTER R WITH CEDILLA
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x00C6, // LATIN CAPITAL LETTER AE
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00F8, // LATIN SMALL LETTER O WITH STROKE
      0x00B9, // SUPERSCRIPT ONE
      0x0157, // LATIN SMALL LETTER R WITH CEDILLA
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00BC, // VULGAR FRACTION ONE QUARTER
      0x00BD, // VULGAR FRACTION ONE HALF
      0x00BE, // VULGAR FRACTION THREE QUARTERS
      0x00E6, // LATIN SMALL LETTER AE
      0x0104, // LATIN CAPITAL LETTER A WITH OGONEK
      0x012E, // LATIN CAPITAL LETTER I WITH OGONEK
      0x0100, // LATIN CAPITAL LETTER A WITH MACRON
      0x0106, // LATIN CAPITAL LETTER C WITH ACUTE
      0x00C4, // LATIN CAPITAL LETTER A WITH DIAERESIS
      0x00C5, // LATIN CAPITAL LETTER A WITH RING ABOVE
      0x0118, // LATIN CAPITAL LETTER E WITH OGONEK
      0x0112, // LATIN CAPITAL LETTER E WITH MACRON
      0x010C, // LATIN CAPITAL LETTER C WITH CARON
      0x00C9, // LATIN CAPITAL LETTER E WITH ACUTE
      0x0179, // LATIN CAPITAL LETTER Z WITH ACUTE
      0x0116, // LATIN CAPITAL LETTER E WITH DOT ABOVE
      0x0122, // LATIN CAPITAL LETTER G WITH CEDILLA
      0x0136, // LATIN CAPITAL LETTER K WITH CEDILLA
      0x012A, // LATIN CAPITAL LETTER I WITH MACRON
      0x013B, // LATIN CAPITAL LETTER L WITH CEDILLA
      0x0160, // LATIN CAPITAL LETTER S WITH CARON
      0x0143, // LATIN CAPITAL LETTER N WITH ACUTE
      0x0145, // LATIN CAPITAL LETTER N WITH CEDILLA
      0x00D3, // LATIN CAPITAL LETTER O WITH ACUTE
      0x014C, // LATIN CAPITAL LETTER O WITH MACRON
      0x00D5, // LATIN CAPITAL LETTER O WITH TILDE
      0x00D6, // LATIN CAPITAL LETTER O WITH DIAERESIS
      0x00D7, // MULTIPLICATION SIGN
      0x0172, // LATIN CAPITAL LETTER U WITH OGONEK
      0x0141, // LATIN CAPITAL LETTER L WITH STROKE
      0x015A, // LATIN CAPITAL LETTER S WITH ACUTE
      0x016A, // LATIN CAPITAL LETTER U WITH MACRON
      0x00DC, // LATIN CAPITAL LETTER U WITH DIAERESIS
      0x017B, // LATIN CAPITAL LETTER Z WITH DOT ABOVE
      0x017D, // LATIN CAPITAL LETTER Z WITH CARON
      0x00DF, // LATIN SMALL LETTER SHARP S
      0x0105, // LATIN SMALL LETTER A WITH OGONEK
      0x012F, // LATIN SMALL LETTER I WITH OGONEK
      0x0101, // LATIN SMALL LETTER A WITH MACRON
      0x0107, // LATIN SMALL LETTER C WITH ACUTE
      0x00E4, // LATIN SMALL LETTER A WITH DIAERESIS
      0x00E5, // LATIN SMALL LETTER A WITH RING ABOVE
      0x0119, // LATIN SMALL LETTER E WITH OGONEK
      0x0113, // LATIN SMALL LETTER E WITH MACRON
      0x010D, // LATIN SMALL LETTER C WITH CARON
      0x00E9, // LATIN SMALL LETTER E WITH ACUTE
      0x017A, // LATIN SMALL LETTER Z WITH ACUTE
      0x0117, // LATIN SMALL LETTER E WITH DOT ABOVE
      0x0123, // LATIN SMALL LETTER G WITH CEDILLA
      0x0137, // LATIN SMALL LETTER K WITH CEDILLA
      0x012B, // LATIN SMALL LETTER I WITH MACRON
      0x013C, // LATIN SMALL LETTER L WITH CEDILLA
      0x0161, // LATIN SMALL LETTER S WITH CARON
      0x0144, // LATIN SMALL LETTER N WITH ACUTE
      0x0146, // LATIN SMALL LETTER N WITH CEDILLA
      0x00F3, // LATIN SMALL LETTER O WITH ACUTE
      0x014D, // LATIN SMALL LETTER O WITH MACRON
      0x00F5, // LATIN SMALL LETTER O WITH TILDE
      0x00F6, // LATIN SMALL LETTER O WITH DIAERESIS
      0x00F7, // DIVISION SIGN
      0x0173, // LATIN SMALL LETTER U WITH OGONEK
      0x0142, // LATIN SMALL LETTER L WITH STROKE
      0x015B, // LATIN SMALL LETTER S WITH ACUTE
      0x016B, // LATIN SMALL LETTER U WITH MACRON
      0x00FC, // LATIN SMALL LETTER U WITH DIAERESIS
      0x017C, // LATIN SMALL LETTER Z WITH DOT ABOVE
      0x017E, // LATIN SMALL LETTER Z WITH CARON
      0x02D9  // DOT ABOVE
   },

   unicode_cp1258[256] =  // Vietnam
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x201A, // SINGLE LOW-9 QUOTATION MARK
      0x0192, // LATIN SMALL LETTER F WITH HOOK
      0x201E, // DOUBLE LOW-9 QUOTATION MARK
      0x2026, // HORIZONTAL ELLIPSIS
      0x2020, // DAGGER
      0x2021, // DOUBLE DAGGER
      0x02C6, // MODIFIER LETTER CIRCUMFLEX ACCENT
      0x2030, // PER MILLE SIGN
      0x0, // not set by windows
      0x2039, // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
      0x0152, // LATIN CAPITAL LIGATURE OE
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x02DC, // SMALL TILDE
      0x2122, // TRADE MARK SIGN
      0x0, // not set by windows
      0x203A, // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
      0x0153, // LATIN SMALL LIGATURE OE
      0x0, // not set by windows
      0x0, // not set by windows
      0x0178, // LATIN CAPITAL LETTER Y WITH DIAERESIS
      0x00A0, // NO-BREAK SPACE
      0x00A1, // INVERTED EXCLAMATION MARK
      0x00A2, // CENT SIGN
      0x00A3, // POUND SIGN
      0x00A4, // CURRENCY SIGN
      0x00A5, // YEN SIGN
      0x00A6, // BROKEN BAR
      0x00A7, // SECTION SIGN
      0x00A8, // DIAERESIS
      0x00A9, // COPYRIGHT SIGN
      0x00AA, // FEMININE ORDINAL INDICATOR
      0x00AB, // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00AC, // NOT SIGN
      0x00AD, // SOFT HYPHEN
      0x00AE, // REGISTERED SIGN
      0x00AF, // MACRON
      0x00B0, // DEGREE SIGN
      0x00B1, // PLUS-MINUS SIGN
      0x00B2, // SUPERSCRIPT TWO
      0x00B3, // SUPERSCRIPT THREE
      0x00B4, // ACUTE ACCENT
      0x00B5, // MICRO SIGN
      0x00B6, // PILCROW SIGN
      0x00B7, // MIDDLE DOT
      0x00B8, // CEDILLA
      0x00B9, // SUPERSCRIPT ONE
      0x00BA, // MASCULINE ORDINAL INDICATOR
      0x00BB, // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
      0x00BC, // VULGAR FRACTION ONE QUARTER
      0x00BD, // VULGAR FRACTION ONE HALF
      0x00BE, // VULGAR FRACTION THREE QUARTERS
      0x00BF, // INVERTED QUESTION MARK
      0x00C0, // LATIN CAPITAL LETTER A WITH GRAVE
      0x00C1, // LATIN CAPITAL LETTER A WITH ACUTE
      0x00C2, // LATIN CAPITAL LETTER A WITH CIRCUMFLEX
      0x0102, // LATIN CAPITAL LETTER A WITH BREVE
      0x00C4, // LATIN CAPITAL LETTER A WITH DIAERESIS
      0x00C5, // LATIN CAPITAL LETTER A WITH RING ABOVE
      0x00C6, // LATIN CAPITAL LETTER AE
      0x00C7, // LATIN CAPITAL LETTER C WITH CEDILLA
      0x00C8, // LATIN CAPITAL LETTER E WITH GRAVE
      0x00C9, // LATIN CAPITAL LETTER E WITH ACUTE
      0x00CA, // LATIN CAPITAL LETTER E WITH CIRCUMFLEX
      0x00CB, // LATIN CAPITAL LETTER E WITH DIAERESIS
      0x0300, // COMBINING GRAVE ACCENT
      0x00CD, // LATIN CAPITAL LETTER I WITH ACUTE
      0x00CE, // LATIN CAPITAL LETTER I WITH CIRCUMFLEX
      0x00CF, // LATIN CAPITAL LETTER I WITH DIAERESIS
      0x0110, // LATIN CAPITAL LETTER D WITH STROKE
      0x00D1, // LATIN CAPITAL LETTER N WITH TILDE
      0x0309, // COMBINING HOOK ABOVE
      0x00D3, // LATIN CAPITAL LETTER O WITH ACUTE
      0x00D4, // LATIN CAPITAL LETTER O WITH CIRCUMFLEX
      0x01A0, // LATIN CAPITAL LETTER O WITH HORN
      0x00D6, // LATIN CAPITAL LETTER O WITH DIAERESIS
      0x00D7, // MULTIPLICATION SIGN
      0x00D8, // LATIN CAPITAL LETTER O WITH STROKE
      0x00D9, // LATIN CAPITAL LETTER U WITH GRAVE
      0x00DA, // LATIN CAPITAL LETTER U WITH ACUTE
      0x00DB, // LATIN CAPITAL LETTER U WITH CIRCUMFLEX
      0x00DC, // LATIN CAPITAL LETTER U WITH DIAERESIS
      0x01AF, // LATIN CAPITAL LETTER U WITH HORN
      0x0303, // COMBINING TILDE
      0x00DF, // LATIN SMALL LETTER SHARP S
      0x00E0, // LATIN SMALL LETTER A WITH GRAVE
      0x00E1, // LATIN SMALL LETTER A WITH ACUTE
      0x00E2, // LATIN SMALL LETTER A WITH CIRCUMFLEX
      0x0103, // LATIN SMALL LETTER A WITH BREVE
      0x00E4, // LATIN SMALL LETTER A WITH DIAERESIS
      0x00E5, // LATIN SMALL LETTER A WITH RING ABOVE
      0x00E6, // LATIN SMALL LETTER AE
      0x00E7, // LATIN SMALL LETTER C WITH CEDILLA
      0x00E8, // LATIN SMALL LETTER E WITH GRAVE
      0x00E9, // LATIN SMALL LETTER E WITH ACUTE
      0x00EA, // LATIN SMALL LETTER E WITH CIRCUMFLEX
      0x00EB, // LATIN SMALL LETTER E WITH DIAERESIS
      0x0301, // COMBINING ACUTE ACCENT
      0x00ED, // LATIN SMALL LETTER I WITH ACUTE
      0x00EE, // LATIN SMALL LETTER I WITH CIRCUMFLEX
      0x00EF, // LATIN SMALL LETTER I WITH DIAERESIS
      0x0111, // LATIN SMALL LETTER D WITH STROKE
      0x00F1, // LATIN SMALL LETTER N WITH TILDE
      0x0323, // COMBINING DOT BELOW
      0x00F3, // LATIN SMALL LETTER O WITH ACUTE
      0x00F4, // LATIN SMALL LETTER O WITH CIRCUMFLEX
      0x01A1, // LATIN SMALL LETTER O WITH HORN
      0x00F6, // LATIN SMALL LETTER O WITH DIAERESIS
      0x00F7, // DIVISION SIGN
      0x00F8, // LATIN SMALL LETTER O WITH STROKE
      0x00F9, // LATIN SMALL LETTER U WITH GRAVE
      0x00FA, // LATIN SMALL LETTER U WITH ACUTE
      0x00FB, // LATIN SMALL LETTER U WITH CIRCUMFLEX
      0x00FC, // LATIN SMALL LETTER U WITH DIAERESIS
      0x01B0, // LATIN SMALL LETTER U WITH HORN
      0x20AB, // DONG SIGN
      0x00FF  // LATIN SMALL LETTER Y WITH DIAERESIS
   },

   unicode_cp874[256] =  // Thai
   {
      0x0000, // NULL
      0x0001, // START OF HEADING
      0x0002, // START OF TEXT
      0x0003, // END OF TEXT
      0x0004, // END OF TRANSMISSION
      0x0005, // ENQUIRY
      0x0006, // ACKNOWLEDGE
      0x0007, // BELL
      0x0008, // BACKSPACE
      0x0009, // HORIZONTAL TABULATION
      0x000A, // LINE FEED
      0x000B, // VERTICAL TABULATION
      0x000C, // FORM FEED
      0x000D, // CARRIAGE RETURN
      0x000E, // SHIFT OUT
      0x000F, // SHIFT IN
      0x0010, // DATA LINK ESCAPE
      0x0011, // DEVICE CONTROL ONE
      0x0012, // DEVICE CONTROL TWO
      0x0013, // DEVICE CONTROL THREE
      0x0014, // DEVICE CONTROL FOUR
      0x0015, // NEGATIVE ACKNOWLEDGE
      0x0016, // SYNCHRONOUS IDLE
      0x0017, // END OF TRANSMISSION BLOCK
      0x0018, // CANCEL
      0x0019, // END OF MEDIUM
      0x001A, // SUBSTITUTE
      0x001B, // ESCAPE
      0x001C, // FILE SEPARATOR
      0x001D, // GROUP SEPARATOR
      0x001E, // RECORD SEPARATOR
      0x001F, // UNIT SEPARATOR
      0x0020, // SPACE
      0x0021, // EXCLAMATION MARK
      0x0022, // QUOTATION MARK
      0x0023, // NUMBER SIGN
      0x0024, // DOLLAR SIGN
      0x0025, // PERCENT SIGN
      0x0026, // AMPERSAND
      0x0027, // APOSTROPHE
      0x0028, // LEFT PARENTHESIS
      0x0029, // RIGHT PARENTHESIS
      0x002A, // ASTERISK
      0x002B, // PLUS SIGN
      0x002C, // COMMA
      0x002D, // HYPHEN-MINUS
      0x002E, // FULL STOP
      0x002F, // SOLIDUS
      0x0030, // DIGIT ZERO
      0x0031, // DIGIT ONE
      0x0032, // DIGIT TWO
      0x0033, // DIGIT THREE
      0x0034, // DIGIT FOUR
      0x0035, // DIGIT FIVE
      0x0036, // DIGIT SIX
      0x0037, // DIGIT SEVEN
      0x0038, // DIGIT EIGHT
      0x0039, // DIGIT NINE
      0x003A, // COLON
      0x003B, // SEMICOLON
      0x003C, // LESS-THAN SIGN
      0x003D, // EQUALS SIGN
      0x003E, // GREATER-THAN SIGN
      0x003F, // QUESTION MARK
      0x0040, // COMMERCIAL AT
      0x0041, // LATIN CAPITAL LETTER A
      0x0042, // LATIN CAPITAL LETTER B
      0x0043, // LATIN CAPITAL LETTER C
      0x0044, // LATIN CAPITAL LETTER D
      0x0045, // LATIN CAPITAL LETTER E
      0x0046, // LATIN CAPITAL LETTER F
      0x0047, // LATIN CAPITAL LETTER G
      0x0048, // LATIN CAPITAL LETTER H
      0x0049, // LATIN CAPITAL LETTER I
      0x004A, // LATIN CAPITAL LETTER J
      0x004B, // LATIN CAPITAL LETTER K
      0x004C, // LATIN CAPITAL LETTER L
      0x004D, // LATIN CAPITAL LETTER M
      0x004E, // LATIN CAPITAL LETTER N
      0x004F, // LATIN CAPITAL LETTER O
      0x0050, // LATIN CAPITAL LETTER P
      0x0051, // LATIN CAPITAL LETTER Q
      0x0052, // LATIN CAPITAL LETTER R
      0x0053, // LATIN CAPITAL LETTER S
      0x0054, // LATIN CAPITAL LETTER T
      0x0055, // LATIN CAPITAL LETTER U
      0x0056, // LATIN CAPITAL LETTER V
      0x0057, // LATIN CAPITAL LETTER W
      0x0058, // LATIN CAPITAL LETTER X
      0x0059, // LATIN CAPITAL LETTER Y
      0x005A, // LATIN CAPITAL LETTER Z
      0x005B, // LEFT SQUARE BRACKET
      0x005C, // REVERSE SOLIDUS
      0x005D, // RIGHT SQUARE BRACKET
      0x005E, // CIRCUMFLEX ACCENT
      0x005F, // LOW LINE
      0x0060, // GRAVE ACCENT
      0x0061, // LATIN SMALL LETTER A
      0x0062, // LATIN SMALL LETTER B
      0x0063, // LATIN SMALL LETTER C
      0x0064, // LATIN SMALL LETTER D
      0x0065, // LATIN SMALL LETTER E
      0x0066, // LATIN SMALL LETTER F
      0x0067, // LATIN SMALL LETTER G
      0x0068, // LATIN SMALL LETTER H
      0x0069, // LATIN SMALL LETTER I
      0x006A, // LATIN SMALL LETTER J
      0x006B, // LATIN SMALL LETTER K
      0x006C, // LATIN SMALL LETTER L
      0x006D, // LATIN SMALL LETTER M
      0x006E, // LATIN SMALL LETTER N
      0x006F, // LATIN SMALL LETTER O
      0x0070, // LATIN SMALL LETTER P
      0x0071, // LATIN SMALL LETTER Q
      0x0072, // LATIN SMALL LETTER R
      0x0073, // LATIN SMALL LETTER S
      0x0074, // LATIN SMALL LETTER T
      0x0075, // LATIN SMALL LETTER U
      0x0076, // LATIN SMALL LETTER V
      0x0077, // LATIN SMALL LETTER W
      0x0078, // LATIN SMALL LETTER X
      0x0079, // LATIN SMALL LETTER Y
      0x007A, // LATIN SMALL LETTER Z
      0x007B, // LEFT CURLY BRACKET
      0x007C, // VERTICAL LINE
      0x007D, // RIGHT CURLY BRACKET
      0x007E, // TILDE
      0x007F, // DELETE
      0x20AC, // EURO SIGN
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x2026, // HORIZONTAL ELLIPSIS
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x2018, // LEFT SINGLE QUOTATION MARK
      0x2019, // RIGHT SINGLE QUOTATION MARK
      0x201C, // LEFT DOUBLE QUOTATION MARK
      0x201D, // RIGHT DOUBLE QUOTATION MARK
      0x2022, // BULLET
      0x2013, // EN DASH
      0x2014, // EM DASH
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x00A0, // NO-BREAK SPACE
      0x0E01, // THAI CHARACTER KO KAI
      0x0E02, // THAI CHARACTER KHO KHAI
      0x0E03, // THAI CHARACTER KHO KHUAT
      0x0E04, // THAI CHARACTER KHO KHWAI
      0x0E05, // THAI CHARACTER KHO KHON
      0x0E06, // THAI CHARACTER KHO RAKHANG
      0x0E07, // THAI CHARACTER NGO NGU
      0x0E08, // THAI CHARACTER CHO CHAN
      0x0E09, // THAI CHARACTER CHO CHING
      0x0E0A, // THAI CHARACTER CHO CHANG
      0x0E0B, // THAI CHARACTER SO SO
      0x0E0C, // THAI CHARACTER CHO CHOE
      0x0E0D, // THAI CHARACTER YO YING
      0x0E0E, // THAI CHARACTER DO CHADA
      0x0E0F, // THAI CHARACTER TO PATAK
      0x0E10, // THAI CHARACTER THO THAN
      0x0E11, // THAI CHARACTER THO NANGMONTHO
      0x0E12, // THAI CHARACTER THO PHUTHAO
      0x0E13, // THAI CHARACTER NO NEN
      0x0E14, // THAI CHARACTER DO DEK
      0x0E15, // THAI CHARACTER TO TAO
      0x0E16, // THAI CHARACTER THO THUNG
      0x0E17, // THAI CHARACTER THO THAHAN
      0x0E18, // THAI CHARACTER THO THONG
      0x0E19, // THAI CHARACTER NO NU
      0x0E1A, // THAI CHARACTER BO BAIMAI
      0x0E1B, // THAI CHARACTER PO PLA
      0x0E1C, // THAI CHARACTER PHO PHUNG
      0x0E1D, // THAI CHARACTER FO FA
      0x0E1E, // THAI CHARACTER PHO PHAN
      0x0E1F, // THAI CHARACTER FO FAN
      0x0E20, // THAI CHARACTER PHO SAMPHAO
      0x0E21, // THAI CHARACTER MO MA
      0x0E22, // THAI CHARACTER YO YAK
      0x0E23, // THAI CHARACTER RO RUA
      0x0E24, // THAI CHARACTER RU
      0x0E25, // THAI CHARACTER LO LING
      0x0E26, // THAI CHARACTER LU
      0x0E27, // THAI CHARACTER WO WAEN
      0x0E28, // THAI CHARACTER SO SALA
      0x0E29, // THAI CHARACTER SO RUSI
      0x0E2A, // THAI CHARACTER SO SUA
      0x0E2B, // THAI CHARACTER HO HIP
      0x0E2C, // THAI CHARACTER LO CHULA
      0x0E2D, // THAI CHARACTER O ANG
      0x0E2E, // THAI CHARACTER HO NOKHUK
      0x0E2F, // THAI CHARACTER PAIYANNOI
      0x0E30, // THAI CHARACTER SARA A
      0x0E31, // THAI CHARACTER MAI HAN-AKAT
      0x0E32, // THAI CHARACTER SARA AA
      0x0E33, // THAI CHARACTER SARA AM
      0x0E34, // THAI CHARACTER SARA I
      0x0E35, // THAI CHARACTER SARA II
      0x0E36, // THAI CHARACTER SARA UE
      0x0E37, // THAI CHARACTER SARA UEE
      0x0E38, // THAI CHARACTER SARA U
      0x0E39, // THAI CHARACTER SARA UU
      0x0E3A, // THAI CHARACTER PHINTHU
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0E3F, // THAI CURRENCY SYMBOL BAHT
      0x0E40, // THAI CHARACTER SARA E
      0x0E41, // THAI CHARACTER SARA AE
      0x0E42, // THAI CHARACTER SARA O
      0x0E43, // THAI CHARACTER SARA AI MAIMUAN
      0x0E44, // THAI CHARACTER SARA AI MAIMALAI
      0x0E45, // THAI CHARACTER LAKKHANGYAO
      0x0E46, // THAI CHARACTER MAIYAMOK
      0x0E47, // THAI CHARACTER MAITAIKHU
      0x0E48, // THAI CHARACTER MAI EK
      0x0E49, // THAI CHARACTER MAI THO
      0x0E4A, // THAI CHARACTER MAI TRI
      0x0E4B, // THAI CHARACTER MAI CHATTAWA
      0x0E4C, // THAI CHARACTER THANTHAKHAT
      0x0E4D, // THAI CHARACTER NIKHAHIT
      0x0E4E, // THAI CHARACTER YAMAKKAN
      0x0E4F, // THAI CHARACTER FONGMAN
      0x0E50, // THAI DIGIT ZERO
      0x0E51, // THAI DIGIT ONE
      0x0E52, // THAI DIGIT TWO
      0x0E53, // THAI DIGIT THREE
      0x0E54, // THAI DIGIT FOUR
      0x0E55, // THAI DIGIT FIVE
      0x0E56, // THAI DIGIT SIX
      0x0E57, // THAI DIGIT SEVEN
      0x0E58, // THAI DIGIT EIGHT
      0x0E59, // THAI DIGIT NINE
      0x0E5A, // THAI CHARACTER ANGKHANKHU
      0x0E5B, // THAI CHARACTER KHOMUT
      0x0, // not set by windows
      0x0, // not set by windows
      0x0, // not set by windows
      0x0  // not set by windows
   };

static const unsigned short baseCourierWidths[256 - 32] = {
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 0, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 0, 600, 0,
   0, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 0, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
   600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600};

static const unsigned short baseHelveticaWidths[256 - 32] = {
   278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278,
   556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556,
   1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778,
   667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556,
   333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556,
   556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 278,
   556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0, 611, 0,
   0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0, 500, 667,
   278, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 333, 737, 333,
   400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611,
   667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278,
   722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611,
   556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278,
   556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500, 556, 500};

static const unsigned short baseHelveticaBoldWidths[256 - 32] = {
   278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278,
   556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611,
   975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778,
   667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556,
   333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611,
   611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 278,
   556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0, 611, 0,
   0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0, 500, 667,
   278, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 333, 737, 333,
   400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611,
   722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278,
   722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611,
   556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278,
   611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556, 611, 556};

static const unsigned short baseHelveticaBoldObliqueWidths[256 - 32] = {
   278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278,
   556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611,
   975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778,
   667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556,
   333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611,
   611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 278,
   556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0, 611, 0,
   0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0, 500, 667,
   278, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 333, 737, 333,
   400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611,
   722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278,
   722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611,
   556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278,
   611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556, 611, 556};

static const unsigned short baseHelveticaObliqueWidths[256 - 32] = {
   278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278,
   556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556,
   1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778,
   667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556,
   333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556,
   556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 278,
   556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0, 611, 0,
   0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0, 500, 667,
   278, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 333, 737, 333,
   400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611,
   667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278,
   722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611,
   556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278,
   556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500, 556, 500};

static const unsigned short baseTimesBoldWidths[256 - 32] = {
   250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333, 250, 278,
   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570, 570, 500,
   930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944, 722, 778,
   611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333, 581, 500,
   333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833, 556, 500,
   556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394, 520, 250,
   500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0, 667, 0,
   0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0, 444, 722,
   250, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 333, 747, 333,
   400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750, 750, 500,
   722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389, 389, 389,
   722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722, 611, 556,
   500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278, 278, 278,
   500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500, 556, 500};

static const unsigned short baseTimesBoldItalicWidths[256 - 32] = {
   250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333, 250, 278,
   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570, 570, 500,
   832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889, 722, 722,
   611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333, 570, 500,
   333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778, 556, 500,
   500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348, 570, 250,
   500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0, 611, 0,
   0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0, 389, 611,
   250, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 333, 747, 333,
   400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750, 750, 500,
   667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389, 389, 389,
   722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611, 611, 500,
   500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278, 278, 278,
   500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444, 500, 444};

static const unsigned short baseTimesItalicWidths[256 - 32] = {
   250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333, 250, 278,
   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675, 675, 500,
   920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833, 667, 722,
   611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389, 422, 500,
   333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722, 500, 500,
   500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400, 541, 250,
   500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0, 556, 0,
   0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0, 389, 556,
   250, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 333, 760, 333,
   400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750, 750, 500,
   611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333, 333, 333,
   722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556, 611, 500,
   500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278, 278, 278,
   500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444, 500, 444};

static const unsigned short baseTimesRomanWidths[256 - 32] = {
   250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333, 250, 278,
   500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564, 564, 444,
   921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889, 722, 722,
   556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333, 469, 500,
   333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778, 500, 500,
   500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480, 541, 250,
   500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0, 611, 0,
   0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0, 444, 722,
   250, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 333, 760, 333,
   400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750, 750, 444,
   722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333, 333, 333,
   722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722, 556, 500,
   444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278, 278, 278,
   500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500, 500, 500};

typedef struct _MSubstituteWidthsArray
{
   unsigned char index;
   /* unsigned short unicode; */
   unsigned short width;
} MSubstituteWidthsArray;

static const MSubstituteWidthsArray

   substituteWidths_cp1250_Helvetica[] = { // Helvetica
      { 0x8c /* 0x015a */, 667 }, { 0x8d /* 0x0164 */, 611 }, { 0x8f /* 0x0179 */, 611 }, { 0x9c /* 0x015b */, 500 }, { 0x9d /* 0x0165 */, 317 },
      { 0x9f /* 0x017a */, 500 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 556 }, { 0xa5 /* 0x0104 */, 667 },
      { 0xaa /* 0x015e */, 667 }, { 0xaf /* 0x017b */, 611 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 222 }, { 0xb9 /* 0x0105 */, 556 },
      { 0xba /* 0x015f */, 500 }, { 0xbc /* 0x013d */, 556 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 299 }, { 0xbf /* 0x017c */, 500 },
      { 0xc0 /* 0x0154 */, 722 }, { 0xc3 /* 0x0102 */, 667 }, { 0xc5 /* 0x0139 */, 556 }, { 0xc6 /* 0x0106 */, 722 }, { 0xc8 /* 0x010c */, 722 },
      { 0xca /* 0x0118 */, 667 }, { 0xcc /* 0x011a */, 667 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 778 }, { 0xd8 /* 0x0158 */, 722 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 611 }, { 0xe0 /* 0x0155 */, 333 }, { 0xe3 /* 0x0103 */, 556 }, { 0xe5 /* 0x013a */, 222 }, { 0xe6 /* 0x0107 */, 500 },
      { 0xe8 /* 0x010d */, 500 }, { 0xea /* 0x0119 */, 556 }, { 0xec /* 0x011b */, 556 }, { 0xef /* 0x010f */, 643 }, { 0xf0 /* 0x0111 */, 556 },
      { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0148 */, 556 }, { 0xf5 /* 0x0151 */, 556 }, { 0xf8 /* 0x0159 */, 333 }, { 0xf9 /* 0x016f */, 556 },
      { 0xfb /* 0x0171 */, 556 }, { 0xfe /* 0x0163 */, 278 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1250_HelveticaBold[] = { // Helvetica-Bold
      { 0x8c /* 0x015a */, 667 }, { 0x8d /* 0x0164 */, 611 }, { 0x8f /* 0x0179 */, 611 }, { 0x9c /* 0x015b */, 556 }, { 0x9d /* 0x0165 */, 389 },
      { 0x9f /* 0x017a */, 500 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 611 }, { 0xa5 /* 0x0104 */, 722 },
      { 0xaa /* 0x015e */, 667 }, { 0xaf /* 0x017b */, 611 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 278 }, { 0xb9 /* 0x0105 */, 556 },
      { 0xba /* 0x015f */, 556 }, { 0xbc /* 0x013d */, 611 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 400 }, { 0xbf /* 0x017c */, 500 },
      { 0xc0 /* 0x0154 */, 722 }, { 0xc3 /* 0x0102 */, 722 }, { 0xc5 /* 0x0139 */, 611 }, { 0xc6 /* 0x0106 */, 722 }, { 0xc8 /* 0x010c */, 722 },
      { 0xca /* 0x0118 */, 667 }, { 0xcc /* 0x011a */, 667 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 778 }, { 0xd8 /* 0x0158 */, 722 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 611 }, { 0xe0 /* 0x0155 */, 389 }, { 0xe3 /* 0x0103 */, 556 }, { 0xe5 /* 0x013a */, 278 }, { 0xe6 /* 0x0107 */, 556 },
      { 0xe8 /* 0x010d */, 556 }, { 0xea /* 0x0119 */, 556 }, { 0xec /* 0x011b */, 556 }, { 0xef /* 0x010f */, 743 }, { 0xf0 /* 0x0111 */, 611 },
      { 0xf1 /* 0x0144 */, 611 }, { 0xf2 /* 0x0148 */, 611 }, { 0xf5 /* 0x0151 */, 611 }, { 0xf8 /* 0x0159 */, 389 }, { 0xf9 /* 0x016f */, 611 },
      { 0xfb /* 0x0171 */, 611 }, { 0xfe /* 0x0163 */, 333 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1250_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0x8c /* 0x015a */, 667 }, { 0x8d /* 0x0164 */, 611 }, { 0x8f /* 0x0179 */, 611 }, { 0x9c /* 0x015b */, 556 }, { 0x9d /* 0x0165 */, 389 },
      { 0x9f /* 0x017a */, 500 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 611 }, { 0xa5 /* 0x0104 */, 722 },
      { 0xaa /* 0x015e */, 667 }, { 0xaf /* 0x017b */, 611 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 278 }, { 0xb9 /* 0x0105 */, 556 },
      { 0xba /* 0x015f */, 556 }, { 0xbc /* 0x013d */, 611 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 400 }, { 0xbf /* 0x017c */, 500 },
      { 0xc0 /* 0x0154 */, 722 }, { 0xc3 /* 0x0102 */, 722 }, { 0xc5 /* 0x0139 */, 611 }, { 0xc6 /* 0x0106 */, 722 }, { 0xc8 /* 0x010c */, 722 },
      { 0xca /* 0x0118 */, 667 }, { 0xcc /* 0x011a */, 667 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 778 }, { 0xd8 /* 0x0158 */, 722 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 611 }, { 0xe0 /* 0x0155 */, 389 }, { 0xe3 /* 0x0103 */, 556 }, { 0xe5 /* 0x013a */, 278 }, { 0xe6 /* 0x0107 */, 556 },
      { 0xe8 /* 0x010d */, 556 }, { 0xea /* 0x0119 */, 556 }, { 0xec /* 0x011b */, 556 }, { 0xef /* 0x010f */, 743 }, { 0xf0 /* 0x0111 */, 611 },
      { 0xf1 /* 0x0144 */, 611 }, { 0xf2 /* 0x0148 */, 611 }, { 0xf5 /* 0x0151 */, 611 }, { 0xf8 /* 0x0159 */, 389 }, { 0xf9 /* 0x016f */, 611 },
      { 0xfb /* 0x0171 */, 611 }, { 0xfe /* 0x0163 */, 333 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1250_HelveticaOblique[] = { // Helvetica-Oblique
      { 0x8c /* 0x015a */, 667 }, { 0x8d /* 0x0164 */, 611 }, { 0x8f /* 0x0179 */, 611 }, { 0x9c /* 0x015b */, 500 }, { 0x9d /* 0x0165 */, 317 },
      { 0x9f /* 0x017a */, 500 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 556 }, { 0xa5 /* 0x0104 */, 667 },
      { 0xaa /* 0x015e */, 667 }, { 0xaf /* 0x017b */, 611 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 222 }, { 0xb9 /* 0x0105 */, 556 },
      { 0xba /* 0x015f */, 500 }, { 0xbc /* 0x013d */, 556 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 299 }, { 0xbf /* 0x017c */, 500 },
      { 0xc0 /* 0x0154 */, 722 }, { 0xc3 /* 0x0102 */, 667 }, { 0xc5 /* 0x0139 */, 556 }, { 0xc6 /* 0x0106 */, 722 }, { 0xc8 /* 0x010c */, 722 },
      { 0xca /* 0x0118 */, 667 }, { 0xcc /* 0x011a */, 667 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 778 }, { 0xd8 /* 0x0158 */, 722 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 611 }, { 0xe0 /* 0x0155 */, 333 }, { 0xe3 /* 0x0103 */, 556 }, { 0xe5 /* 0x013a */, 222 }, { 0xe6 /* 0x0107 */, 500 },
      { 0xe8 /* 0x010d */, 500 }, { 0xea /* 0x0119 */, 556 }, { 0xec /* 0x011b */, 556 }, { 0xef /* 0x010f */, 643 }, { 0xf0 /* 0x0111 */, 556 },
      { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0148 */, 556 }, { 0xf5 /* 0x0151 */, 556 }, { 0xf8 /* 0x0159 */, 333 }, { 0xf9 /* 0x016f */, 556 },
      { 0xfb /* 0x0171 */, 556 }, { 0xfe /* 0x0163 */, 278 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1250_TimesRoman[] = { // Times-Roman
      { 0x8c /* 0x015a */, 556 }, { 0x8d /* 0x0164 */, 611 }, { 0x8f /* 0x0179 */, 611 }, { 0x9c /* 0x015b */, 389 }, { 0x9d /* 0x0165 */, 326 },
      { 0x9f /* 0x017a */, 444 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 611 }, { 0xa5 /* 0x0104 */, 722 },
      { 0xaa /* 0x015e */, 556 }, { 0xaf /* 0x017b */, 611 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 278 }, { 0xb9 /* 0x0105 */, 444 },
      { 0xba /* 0x015f */, 389 }, { 0xbc /* 0x013d */, 611 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 344 }, { 0xbf /* 0x017c */, 444 },
      { 0xc0 /* 0x0154 */, 667 }, { 0xc3 /* 0x0102 */, 722 }, { 0xc5 /* 0x0139 */, 611 }, { 0xc6 /* 0x0106 */, 667 }, { 0xc8 /* 0x010c */, 667 },
      { 0xca /* 0x0118 */, 611 }, { 0xcc /* 0x011a */, 611 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 722 }, { 0xd8 /* 0x0158 */, 667 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 611 }, { 0xe0 /* 0x0155 */, 333 }, { 0xe3 /* 0x0103 */, 444 }, { 0xe5 /* 0x013a */, 278 }, { 0xe6 /* 0x0107 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x0119 */, 444 }, { 0xec /* 0x011b */, 444 }, { 0xef /* 0x010f */, 588 }, { 0xf0 /* 0x0111 */, 500 },
      { 0xf1 /* 0x0144 */, 500 }, { 0xf2 /* 0x0148 */, 500 }, { 0xf5 /* 0x0151 */, 500 }, { 0xf8 /* 0x0159 */, 333 }, { 0xf9 /* 0x016f */, 500 },
      { 0xfb /* 0x0171 */, 500 }, { 0xfe /* 0x0163 */, 278 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1250_TimesBold[] = { // Times-Bold
      { 0x8c /* 0x015a */, 556 }, { 0x8d /* 0x0164 */, 667 }, { 0x8f /* 0x0179 */, 667 }, { 0x9c /* 0x015b */, 389 }, { 0x9d /* 0x0165 */, 416 },
      { 0x9f /* 0x017a */, 444 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 667 }, { 0xa5 /* 0x0104 */, 722 },
      { 0xaa /* 0x015e */, 556 }, { 0xaf /* 0x017b */, 667 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 278 }, { 0xb9 /* 0x0105 */, 500 },
      { 0xba /* 0x015f */, 389 }, { 0xbc /* 0x013d */, 667 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 394 }, { 0xbf /* 0x017c */, 444 },
      { 0xc0 /* 0x0154 */, 722 }, { 0xc3 /* 0x0102 */, 722 }, { 0xc5 /* 0x0139 */, 667 }, { 0xc6 /* 0x0106 */, 722 }, { 0xc8 /* 0x010c */, 722 },
      { 0xca /* 0x0118 */, 667 }, { 0xcc /* 0x011a */, 667 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 778 }, { 0xd8 /* 0x0158 */, 722 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 667 }, { 0xe0 /* 0x0155 */, 444 }, { 0xe3 /* 0x0103 */, 500 }, { 0xe5 /* 0x013a */, 278 }, { 0xe6 /* 0x0107 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x0119 */, 444 }, { 0xec /* 0x011b */, 444 }, { 0xef /* 0x010f */, 672 }, { 0xf0 /* 0x0111 */, 556 },
      { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0148 */, 556 }, { 0xf5 /* 0x0151 */, 500 }, { 0xf8 /* 0x0159 */, 444 }, { 0xf9 /* 0x016f */, 556 },
      { 0xfb /* 0x0171 */, 556 }, { 0xfe /* 0x0163 */, 333 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1250_TimesBoldItalic[] = { // Times-BoldItalic
      { 0x8c /* 0x015a */, 556 }, { 0x8d /* 0x0164 */, 611 }, { 0x8f /* 0x0179 */, 611 }, { 0x9c /* 0x015b */, 389 }, { 0x9d /* 0x0165 */, 366 },
      { 0x9f /* 0x017a */, 389 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 611 }, { 0xa5 /* 0x0104 */, 667 },
      { 0xaa /* 0x015e */, 556 }, { 0xaf /* 0x017b */, 611 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 278 }, { 0xb9 /* 0x0105 */, 500 },
      { 0xba /* 0x015f */, 389 }, { 0xbc /* 0x013d */, 611 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 382 }, { 0xbf /* 0x017c */, 389 },
      { 0xc0 /* 0x0154 */, 667 }, { 0xc3 /* 0x0102 */, 667 }, { 0xc5 /* 0x0139 */, 611 }, { 0xc6 /* 0x0106 */, 667 }, { 0xc8 /* 0x010c */, 667 },
      { 0xca /* 0x0118 */, 667 }, { 0xcc /* 0x011a */, 667 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 722 },
      { 0xd2 /* 0x0147 */, 722 }, { 0xd5 /* 0x0150 */, 722 }, { 0xd8 /* 0x0158 */, 667 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 611 }, { 0xe0 /* 0x0155 */, 389 }, { 0xe3 /* 0x0103 */, 500 }, { 0xe5 /* 0x013a */, 278 }, { 0xe6 /* 0x0107 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x0119 */, 444 }, { 0xec /* 0x011b */, 444 }, { 0xef /* 0x010f */, 608 }, { 0xf0 /* 0x0111 */, 500 },
      { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0148 */, 556 }, { 0xf5 /* 0x0151 */, 500 }, { 0xf8 /* 0x0159 */, 389 }, { 0xf9 /* 0x016f */, 556 },
      { 0xfb /* 0x0171 */, 556 }, { 0xfe /* 0x0163 */, 278 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1250_TimesItalic[] = { // Times-Italic
      { 0x8c /* 0x015a */, 500 }, { 0x8d /* 0x0164 */, 556 }, { 0x8f /* 0x0179 */, 556 }, { 0x9c /* 0x015b */, 389 }, { 0x9d /* 0x0165 */, 300 },
      { 0x9f /* 0x017a */, 389 }, { 0xa1 /* 0x02c7 */, 333 }, { 0xa2 /* 0x02d8 */, 333 }, { 0xa3 /* 0x0141 */, 556 }, { 0xa5 /* 0x0104 */, 611 },
      { 0xaa /* 0x015e */, 500 }, { 0xaf /* 0x017b */, 556 }, { 0xb2 /* 0x02db */, 333 }, { 0xb3 /* 0x0142 */, 278 }, { 0xb9 /* 0x0105 */, 500 },
      { 0xba /* 0x015f */, 389 }, { 0xbc /* 0x013d */, 611 }, { 0xbd /* 0x02dd */, 333 }, { 0xbe /* 0x013e */, 300 }, { 0xbf /* 0x017c */, 389 },
      { 0xc0 /* 0x0154 */, 611 }, { 0xc3 /* 0x0102 */, 611 }, { 0xc5 /* 0x0139 */, 556 }, { 0xc6 /* 0x0106 */, 667 }, { 0xc8 /* 0x010c */, 667 },
      { 0xca /* 0x0118 */, 611 }, { 0xcc /* 0x011a */, 611 }, { 0xcf /* 0x010e */, 722 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd1 /* 0x0143 */, 667 },
      { 0xd2 /* 0x0147 */, 667 }, { 0xd5 /* 0x0150 */, 722 }, { 0xd8 /* 0x0158 */, 611 }, { 0xd9 /* 0x016e */, 722 }, { 0xdb /* 0x0170 */, 722 },
      { 0xde /* 0x0162 */, 556 }, { 0xe0 /* 0x0155 */, 389 }, { 0xe3 /* 0x0103 */, 500 }, { 0xe5 /* 0x013a */, 278 }, { 0xe6 /* 0x0107 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x0119 */, 444 }, { 0xec /* 0x011b */, 444 }, { 0xef /* 0x010f */, 544 }, { 0xf0 /* 0x0111 */, 500 },
      { 0xf1 /* 0x0144 */, 500 }, { 0xf2 /* 0x0148 */, 500 }, { 0xf5 /* 0x0151 */, 500 }, { 0xf8 /* 0x0159 */, 389 }, { 0xf9 /* 0x016f */, 500 },
      { 0xfb /* 0x0171 */, 500 }, { 0xfe /* 0x0163 */, 278 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1251_Helvetica[] = { // Helvetica
      { 0x80 /* 0x0402 */, 667 }, { 0x81 /* 0x0403 */, 667 }, { 0x83 /* 0x0453 */, 278 }, { 0x88 /* 0x20ac */, 556 }, { 0x8a /* 0x0409 */, 833 },
      { 0x8c /* 0x040a */, 833 }, { 0x8d /* 0x040c */, 667 }, { 0x8e /* 0x040b */, 944 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 556 },
      { 0x9a /* 0x0459 */, 556 }, { 0x9c /* 0x045a */, 833 }, { 0x9d /* 0x045c */, 500 }, { 0x9e /* 0x045b */, 556 }, { 0x9f /* 0x045f */, 556 },
      { 0xa1 /* 0x040e */, 500 }, { 0xa2 /* 0x045e */, 500 }, { 0xa3 /* 0x0408 */, 500 }, { 0xa5 /* 0x0490 */, 278 }, { 0xa8 /* 0x0401 */, 667 },
      { 0xaa /* 0x0404 */, 667 }, { 0xaf /* 0x0407 */, 278 }, { 0xb2 /* 0x0406 */, 278 }, { 0xb3 /* 0x0456 */, 222 }, { 0xb4 /* 0x0491 */, 556 },
      { 0xb8 /* 0x0451 */, 556 }, { 0xb9 /* 0x2116 */, 833 }, { 0xba /* 0x0454 */, 556 }, { 0xbc /* 0x0458 */, 222 }, { 0xbd /* 0x0405 */, 667 },
      { 0xbe /* 0x0455 */, 500 }, { 0xbf /* 0x0457 */, 222 }, { 0xc0 /* 0x0410 */, 667 }, { 0xc1 /* 0x0411 */, 667 }, { 0xc2 /* 0x0412 */, 667 },
      { 0xc3 /* 0x0413 */, 667 }, { 0xc4 /* 0x0414 */, 833 }, { 0xc5 /* 0x0415 */, 667 }, { 0xc6 /* 0x0416 */, 944 }, { 0xc7 /* 0x0417 */, 556 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 667 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 833 },
      { 0xcd /* 0x041d */, 722 }, { 0xce /* 0x041e */, 778 }, { 0xcf /* 0x041f */, 722 }, { 0xd0 /* 0x0420 */, 667 }, { 0xd1 /* 0x0421 */, 722 },
      { 0xd2 /* 0x0422 */, 611 }, { 0xd3 /* 0x0423 */, 500 }, { 0xd4 /* 0x0424 */, 556 }, { 0xd5 /* 0x0425 */, 667 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 667 }, { 0xd8 /* 0x0428 */, 833 }, { 0xd9 /* 0x0429 */, 833 }, { 0xda /* 0x042a */, 944 }, { 0xdb /* 0x042b */, 944 },
      { 0xdc /* 0x042c */, 556 }, { 0xdd /* 0x042d */, 556 }, { 0xde /* 0x042e */, 722 }, { 0xdf /* 0x042f */, 722 }, { 0xe0 /* 0x0430 */, 556 },
      { 0xe1 /* 0x0431 */, 778 }, { 0xe2 /* 0x0432 */, 667 }, { 0xe3 /* 0x0433 */, 611 }, { 0xe4 /* 0x0434 */, 667 }, { 0xe5 /* 0x0435 */, 556 },
      { 0xe6 /* 0x0436 */, 500 }, { 0xe7 /* 0x0437 */, 556 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 667 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 833 }, { 0xed /* 0x043d */, 722 }, { 0xee /* 0x043e */, 556 }, { 0xef /* 0x043f */, 556 },
      { 0xf0 /* 0x0440 */, 556 }, { 0xf1 /* 0x0441 */, 500 }, { 0xf2 /* 0x0442 */, 278 }, { 0xf3 /* 0x0443 */, 500 }, { 0xf4 /* 0x0444 */, 556 },
      { 0xf5 /* 0x0445 */, 500 }, { 0xf6 /* 0x0446 */, 556 }, { 0xf7 /* 0x0447 */, 556 }, { 0xf8 /* 0x0448 */, 833 }, { 0xf9 /* 0x0449 */, 833 },
      { 0xfa /* 0x044a */, 944 }, { 0xfb /* 0x044b */, 944 }, { 0xfc /* 0x044c */, 556 }, { 0xfd /* 0x044d */, 556 }, { 0xfe /* 0x044e */, 722 },
      { 0xff /* 0x044f */, 333 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1251_HelveticaBold[] = { // Helvetica-Bold
      { 0x80 /* 0x0402 */, 722 }, { 0x81 /* 0x0403 */, 722 }, { 0x83 /* 0x0453 */, 333 }, { 0x88 /* 0x20ac */, 556 }, { 0x8a /* 0x0409 */, 833 },
      { 0x8c /* 0x040a */, 833 }, { 0x8d /* 0x040c */, 722 }, { 0x8e /* 0x040b */, 944 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 611 },
      { 0x9a /* 0x0459 */, 611 }, { 0x9c /* 0x045a */, 889 }, { 0x9d /* 0x045c */, 556 }, { 0x9e /* 0x045b */, 611 }, { 0x9f /* 0x045f */, 611 },
      { 0xa1 /* 0x040e */, 556 }, { 0xa2 /* 0x045e */, 556 }, { 0xa3 /* 0x0408 */, 556 }, { 0xa5 /* 0x0490 */, 278 }, { 0xa8 /* 0x0401 */, 667 },
      { 0xaa /* 0x0404 */, 667 }, { 0xaf /* 0x0407 */, 278 }, { 0xb2 /* 0x0406 */, 278 }, { 0xb3 /* 0x0456 */, 278 }, { 0xb4 /* 0x0491 */, 611 },
      { 0xb8 /* 0x0451 */, 556 }, { 0xb9 /* 0x2116 */, 833 }, { 0xba /* 0x0454 */, 556 }, { 0xbc /* 0x0458 */, 278 }, { 0xbd /* 0x0405 */, 667 },
      { 0xbe /* 0x0455 */, 556 }, { 0xbf /* 0x0457 */, 278 }, { 0xc0 /* 0x0410 */, 722 }, { 0xc1 /* 0x0411 */, 722 }, { 0xc2 /* 0x0412 */, 722 },
      { 0xc3 /* 0x0413 */, 722 }, { 0xc4 /* 0x0414 */, 833 }, { 0xc5 /* 0x0415 */, 667 }, { 0xc6 /* 0x0416 */, 944 }, { 0xc7 /* 0x0417 */, 556 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 722 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 833 },
      { 0xcd /* 0x041d */, 722 }, { 0xce /* 0x041e */, 778 }, { 0xcf /* 0x041f */, 722 }, { 0xd0 /* 0x0420 */, 667 }, { 0xd1 /* 0x0421 */, 722 },
      { 0xd2 /* 0x0422 */, 611 }, { 0xd3 /* 0x0423 */, 556 }, { 0xd4 /* 0x0424 */, 611 }, { 0xd5 /* 0x0425 */, 667 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 667 }, { 0xd8 /* 0x0428 */, 833 }, { 0xd9 /* 0x0429 */, 833 }, { 0xda /* 0x042a */, 944 }, { 0xdb /* 0x042b */, 944 },
      { 0xdc /* 0x042c */, 611 }, { 0xdd /* 0x042d */, 556 }, { 0xde /* 0x042e */, 722 }, { 0xdf /* 0x042f */, 722 }, { 0xe0 /* 0x0430 */, 556 },
      { 0xe1 /* 0x0431 */, 778 }, { 0xe2 /* 0x0432 */, 722 }, { 0xe3 /* 0x0433 */, 611 }, { 0xe4 /* 0x0434 */, 722 }, { 0xe5 /* 0x0435 */, 556 },
      { 0xe6 /* 0x0436 */, 556 }, { 0xe7 /* 0x0437 */, 556 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 722 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 833 }, { 0xed /* 0x043d */, 722 }, { 0xee /* 0x043e */, 611 }, { 0xef /* 0x043f */, 611 },
      { 0xf0 /* 0x0440 */, 611 }, { 0xf1 /* 0x0441 */, 556 }, { 0xf2 /* 0x0442 */, 333 }, { 0xf3 /* 0x0443 */, 556 }, { 0xf4 /* 0x0444 */, 611 },
      { 0xf5 /* 0x0445 */, 556 }, { 0xf6 /* 0x0446 */, 611 }, { 0xf7 /* 0x0447 */, 611 }, { 0xf8 /* 0x0448 */, 889 }, { 0xf9 /* 0x0449 */, 889 },
      { 0xfa /* 0x044a */, 944 }, { 0xfb /* 0x044b */, 944 }, { 0xfc /* 0x044c */, 611 }, { 0xfd /* 0x044d */, 556 }, { 0xfe /* 0x044e */, 722 },
      { 0xff /* 0x044f */, 389 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1251_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0x80 /* 0x0402 */, 722 }, { 0x81 /* 0x0403 */, 722 }, { 0x83 /* 0x0453 */, 333 }, { 0x88 /* 0x20ac */, 556 }, { 0x8a /* 0x0409 */, 833 },
      { 0x8c /* 0x040a */, 833 }, { 0x8d /* 0x040c */, 722 }, { 0x8e /* 0x040b */, 944 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 611 },
      { 0x9a /* 0x0459 */, 611 }, { 0x9c /* 0x045a */, 889 }, { 0x9d /* 0x045c */, 556 }, { 0x9e /* 0x045b */, 611 }, { 0x9f /* 0x045f */, 611 },
      { 0xa1 /* 0x040e */, 556 }, { 0xa2 /* 0x045e */, 556 }, { 0xa3 /* 0x0408 */, 556 }, { 0xa5 /* 0x0490 */, 278 }, { 0xa8 /* 0x0401 */, 667 },
      { 0xaa /* 0x0404 */, 667 }, { 0xaf /* 0x0407 */, 278 }, { 0xb2 /* 0x0406 */, 278 }, { 0xb3 /* 0x0456 */, 278 }, { 0xb4 /* 0x0491 */, 611 },
      { 0xb8 /* 0x0451 */, 556 }, { 0xb9 /* 0x2116 */, 833 }, { 0xba /* 0x0454 */, 556 }, { 0xbc /* 0x0458 */, 278 }, { 0xbd /* 0x0405 */, 667 },
      { 0xbe /* 0x0455 */, 556 }, { 0xbf /* 0x0457 */, 278 }, { 0xc0 /* 0x0410 */, 722 }, { 0xc1 /* 0x0411 */, 722 }, { 0xc2 /* 0x0412 */, 722 },
      { 0xc3 /* 0x0413 */, 722 }, { 0xc4 /* 0x0414 */, 833 }, { 0xc5 /* 0x0415 */, 667 }, { 0xc6 /* 0x0416 */, 944 }, { 0xc7 /* 0x0417 */, 556 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 722 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 833 },
      { 0xcd /* 0x041d */, 722 }, { 0xce /* 0x041e */, 778 }, { 0xcf /* 0x041f */, 722 }, { 0xd0 /* 0x0420 */, 667 }, { 0xd1 /* 0x0421 */, 722 },
      { 0xd2 /* 0x0422 */, 611 }, { 0xd3 /* 0x0423 */, 556 }, { 0xd4 /* 0x0424 */, 611 }, { 0xd5 /* 0x0425 */, 667 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 667 }, { 0xd8 /* 0x0428 */, 833 }, { 0xd9 /* 0x0429 */, 833 }, { 0xda /* 0x042a */, 944 }, { 0xdb /* 0x042b */, 944 },
      { 0xdc /* 0x042c */, 611 }, { 0xdd /* 0x042d */, 556 }, { 0xde /* 0x042e */, 722 }, { 0xdf /* 0x042f */, 722 }, { 0xe0 /* 0x0430 */, 556 },
      { 0xe1 /* 0x0431 */, 778 }, { 0xe2 /* 0x0432 */, 722 }, { 0xe3 /* 0x0433 */, 611 }, { 0xe4 /* 0x0434 */, 722 }, { 0xe5 /* 0x0435 */, 556 },
      { 0xe6 /* 0x0436 */, 556 }, { 0xe7 /* 0x0437 */, 556 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 722 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 833 }, { 0xed /* 0x043d */, 722 }, { 0xee /* 0x043e */, 611 }, { 0xef /* 0x043f */, 611 },
      { 0xf0 /* 0x0440 */, 611 }, { 0xf1 /* 0x0441 */, 556 }, { 0xf2 /* 0x0442 */, 333 }, { 0xf3 /* 0x0443 */, 556 }, { 0xf4 /* 0x0444 */, 611 },
      { 0xf5 /* 0x0445 */, 556 }, { 0xf6 /* 0x0446 */, 611 }, { 0xf7 /* 0x0447 */, 611 }, { 0xf8 /* 0x0448 */, 889 }, { 0xf9 /* 0x0449 */, 889 },
      { 0xfa /* 0x044a */, 944 }, { 0xfb /* 0x044b */, 944 }, { 0xfc /* 0x044c */, 611 }, { 0xfd /* 0x044d */, 556 }, { 0xfe /* 0x044e */, 722 },
      { 0xff /* 0x044f */, 389 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1251_HelveticaOblique[] = { // Helvetica-Oblique
      { 0x80 /* 0x0402 */, 667 }, { 0x81 /* 0x0403 */, 667 }, { 0x83 /* 0x0453 */, 278 }, { 0x88 /* 0x20ac */, 556 }, { 0x8a /* 0x0409 */, 833 },
      { 0x8c /* 0x040a */, 833 }, { 0x8d /* 0x040c */, 667 }, { 0x8e /* 0x040b */, 944 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 556 },
      { 0x9a /* 0x0459 */, 556 }, { 0x9c /* 0x045a */, 833 }, { 0x9d /* 0x045c */, 500 }, { 0x9e /* 0x045b */, 556 }, { 0x9f /* 0x045f */, 556 },
      { 0xa1 /* 0x040e */, 500 }, { 0xa2 /* 0x045e */, 500 }, { 0xa3 /* 0x0408 */, 500 }, { 0xa5 /* 0x0490 */, 278 }, { 0xa8 /* 0x0401 */, 667 },
      { 0xaa /* 0x0404 */, 667 }, { 0xaf /* 0x0407 */, 278 }, { 0xb2 /* 0x0406 */, 278 }, { 0xb3 /* 0x0456 */, 222 }, { 0xb4 /* 0x0491 */, 556 },
      { 0xb8 /* 0x0451 */, 556 }, { 0xb9 /* 0x2116 */, 833 }, { 0xba /* 0x0454 */, 556 }, { 0xbc /* 0x0458 */, 222 }, { 0xbd /* 0x0405 */, 667 },
      { 0xbe /* 0x0455 */, 500 }, { 0xbf /* 0x0457 */, 222 }, { 0xc0 /* 0x0410 */, 667 }, { 0xc1 /* 0x0411 */, 667 }, { 0xc2 /* 0x0412 */, 667 },
      { 0xc3 /* 0x0413 */, 667 }, { 0xc4 /* 0x0414 */, 833 }, { 0xc5 /* 0x0415 */, 667 }, { 0xc6 /* 0x0416 */, 944 }, { 0xc7 /* 0x0417 */, 556 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 667 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 833 },
      { 0xcd /* 0x041d */, 722 }, { 0xce /* 0x041e */, 778 }, { 0xcf /* 0x041f */, 722 }, { 0xd0 /* 0x0420 */, 667 }, { 0xd1 /* 0x0421 */, 722 },
      { 0xd2 /* 0x0422 */, 611 }, { 0xd3 /* 0x0423 */, 500 }, { 0xd4 /* 0x0424 */, 556 }, { 0xd5 /* 0x0425 */, 667 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 667 }, { 0xd8 /* 0x0428 */, 833 }, { 0xd9 /* 0x0429 */, 833 }, { 0xda /* 0x042a */, 944 }, { 0xdb /* 0x042b */, 944 },
      { 0xdc /* 0x042c */, 556 }, { 0xdd /* 0x042d */, 556 }, { 0xde /* 0x042e */, 722 }, { 0xdf /* 0x042f */, 722 }, { 0xe0 /* 0x0430 */, 556 },
      { 0xe1 /* 0x0431 */, 778 }, { 0xe2 /* 0x0432 */, 667 }, { 0xe3 /* 0x0433 */, 611 }, { 0xe4 /* 0x0434 */, 667 }, { 0xe5 /* 0x0435 */, 556 },
      { 0xe6 /* 0x0436 */, 500 }, { 0xe7 /* 0x0437 */, 556 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 667 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 833 }, { 0xed /* 0x043d */, 722 }, { 0xee /* 0x043e */, 556 }, { 0xef /* 0x043f */, 556 },
      { 0xf0 /* 0x0440 */, 556 }, { 0xf1 /* 0x0441 */, 500 }, { 0xf2 /* 0x0442 */, 278 }, { 0xf3 /* 0x0443 */, 500 }, { 0xf4 /* 0x0444 */, 556 },
      { 0xf5 /* 0x0445 */, 500 }, { 0xf6 /* 0x0446 */, 556 }, { 0xf7 /* 0x0447 */, 556 }, { 0xf8 /* 0x0448 */, 833 }, { 0xf9 /* 0x0449 */, 833 },
      { 0xfa /* 0x044a */, 944 }, { 0xfb /* 0x044b */, 944 }, { 0xfc /* 0x044c */, 556 }, { 0xfd /* 0x044d */, 556 }, { 0xfe /* 0x044e */, 722 },
      { 0xff /* 0x044f */, 333 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1251_TimesRoman[] = { // Times-Roman
      { 0x80 /* 0x0402 */, 667 }, { 0x81 /* 0x0403 */, 667 }, { 0x83 /* 0x0453 */, 278 }, { 0x88 /* 0x20ac */, 500 }, { 0x8a /* 0x0409 */, 889 },
      { 0x8c /* 0x040a */, 889 }, { 0x8d /* 0x040c */, 722 }, { 0x8e /* 0x040b */, 944 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 500 },
      { 0x9a /* 0x0459 */, 500 }, { 0x9c /* 0x045a */, 778 }, { 0x9d /* 0x045c */, 500 }, { 0x9e /* 0x045b */, 500 }, { 0x9f /* 0x045f */, 500 },
      { 0xa1 /* 0x040e */, 500 }, { 0xa2 /* 0x045e */, 500 }, { 0xa3 /* 0x0408 */, 389 }, { 0xa5 /* 0x0490 */, 333 }, { 0xa8 /* 0x0401 */, 611 },
      { 0xaa /* 0x0404 */, 611 }, { 0xaf /* 0x0407 */, 333 }, { 0xb2 /* 0x0406 */, 333 }, { 0xb3 /* 0x0456 */, 278 }, { 0xb4 /* 0x0491 */, 500 },
      { 0xb8 /* 0x0451 */, 444 }, { 0xb9 /* 0x2116 */, 889 }, { 0xba /* 0x0454 */, 444 }, { 0xbc /* 0x0458 */, 278 }, { 0xbd /* 0x0405 */, 556 },
      { 0xbe /* 0x0455 */, 389 }, { 0xbf /* 0x0457 */, 278 }, { 0xc0 /* 0x0410 */, 722 }, { 0xc1 /* 0x0411 */, 667 }, { 0xc2 /* 0x0412 */, 667 },
      { 0xc3 /* 0x0413 */, 667 }, { 0xc4 /* 0x0414 */, 889 }, { 0xc5 /* 0x0415 */, 611 }, { 0xc6 /* 0x0416 */, 944 }, { 0xc7 /* 0x0417 */, 500 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 722 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 889 },
      { 0xcd /* 0x041d */, 722 }, { 0xce /* 0x041e */, 722 }, { 0xcf /* 0x041f */, 722 }, { 0xd0 /* 0x0420 */, 556 }, { 0xd1 /* 0x0421 */, 667 },
      { 0xd2 /* 0x0422 */, 611 }, { 0xd3 /* 0x0423 */, 500 }, { 0xd4 /* 0x0424 */, 500 }, { 0xd5 /* 0x0425 */, 722 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 722 }, { 0xd8 /* 0x0428 */, 889 }, { 0xd9 /* 0x0429 */, 889 }, { 0xda /* 0x042a */, 944 }, { 0xdb /* 0x042b */, 944 },
      { 0xdc /* 0x042c */, 500 }, { 0xdd /* 0x042d */, 500 }, { 0xde /* 0x042e */, 722 }, { 0xdf /* 0x042f */, 667 }, { 0xe0 /* 0x0430 */, 444 },
      { 0xe1 /* 0x0431 */, 722 }, { 0xe2 /* 0x0432 */, 667 }, { 0xe3 /* 0x0433 */, 611 }, { 0xe4 /* 0x0434 */, 722 }, { 0xe5 /* 0x0435 */, 444 },
      { 0xe6 /* 0x0436 */, 500 }, { 0xe7 /* 0x0437 */, 500 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 722 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 889 }, { 0xed /* 0x043d */, 722 }, { 0xee /* 0x043e */, 500 }, { 0xef /* 0x043f */, 500 },
      { 0xf0 /* 0x0440 */, 500 }, { 0xf1 /* 0x0441 */, 444 }, { 0xf2 /* 0x0442 */, 278 }, { 0xf3 /* 0x0443 */, 500 }, { 0xf4 /* 0x0444 */, 500 },
      { 0xf5 /* 0x0445 */, 500 }, { 0xf6 /* 0x0446 */, 500 }, { 0xf7 /* 0x0447 */, 500 }, { 0xf8 /* 0x0448 */, 778 }, { 0xf9 /* 0x0449 */, 778 },
      { 0xfa /* 0x044a */, 944 }, { 0xfb /* 0x044b */, 944 }, { 0xfc /* 0x044c */, 500 }, { 0xfd /* 0x044d */, 500 }, { 0xfe /* 0x044e */, 722 },
      { 0xff /* 0x044f */, 333 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1251_TimesBold[] = { // Times-Bold
      { 0x80 /* 0x0402 */, 667 }, { 0x81 /* 0x0403 */, 667 }, { 0x83 /* 0x0453 */, 333 }, { 0x88 /* 0x20ac */, 500 }, { 0x8a /* 0x0409 */, 944 },
      { 0x8c /* 0x040a */, 944 }, { 0x8d /* 0x040c */, 778 }, { 0x8e /* 0x040b */, 1000 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 556 },
      { 0x9a /* 0x0459 */, 556 }, { 0x9c /* 0x045a */, 833 }, { 0x9d /* 0x045c */, 556 }, { 0x9e /* 0x045b */, 556 }, { 0x9f /* 0x045f */, 556 },
      { 0xa1 /* 0x040e */, 500 }, { 0xa2 /* 0x045e */, 500 }, { 0xa3 /* 0x0408 */, 500 }, { 0xa5 /* 0x0490 */, 389 }, { 0xa8 /* 0x0401 */, 667 },
      { 0xaa /* 0x0404 */, 667 }, { 0xaf /* 0x0407 */, 389 }, { 0xb2 /* 0x0406 */, 389 }, { 0xb3 /* 0x0456 */, 278 }, { 0xb4 /* 0x0491 */, 556 },
      { 0xb8 /* 0x0451 */, 444 }, { 0xb9 /* 0x2116 */, 944 }, { 0xba /* 0x0454 */, 444 }, { 0xbc /* 0x0458 */, 333 }, { 0xbd /* 0x0405 */, 556 },
      { 0xbe /* 0x0455 */, 389 }, { 0xbf /* 0x0457 */, 278 }, { 0xc0 /* 0x0410 */, 722 }, { 0xc1 /* 0x0411 */, 667 }, { 0xc2 /* 0x0412 */, 667 },
      { 0xc3 /* 0x0413 */, 667 }, { 0xc4 /* 0x0414 */, 944 }, { 0xc5 /* 0x0415 */, 667 }, { 0xc6 /* 0x0416 */, 1000 }, { 0xc7 /* 0x0417 */, 500 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 778 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 944 },
      { 0xcd /* 0x041d */, 778 }, { 0xce /* 0x041e */, 778 }, { 0xcf /* 0x041f */, 778 }, { 0xd0 /* 0x0420 */, 611 }, { 0xd1 /* 0x0421 */, 722 },
      { 0xd2 /* 0x0422 */, 667 }, { 0xd3 /* 0x0423 */, 500 }, { 0xd4 /* 0x0424 */, 500 }, { 0xd5 /* 0x0425 */, 722 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 722 }, { 0xd8 /* 0x0428 */, 944 }, { 0xd9 /* 0x0429 */, 944 }, { 0xda /* 0x042a */, 1000 }, { 0xdb /* 0x042b */, 1000 },
      { 0xdc /* 0x042c */, 556 }, { 0xdd /* 0x042d */, 500 }, { 0xde /* 0x042e */, 778 }, { 0xdf /* 0x042f */, 722 }, { 0xe0 /* 0x0430 */, 500 },
      { 0xe1 /* 0x0431 */, 778 }, { 0xe2 /* 0x0432 */, 667 }, { 0xe3 /* 0x0433 */, 667 }, { 0xe4 /* 0x0434 */, 722 }, { 0xe5 /* 0x0435 */, 444 },
      { 0xe6 /* 0x0436 */, 500 }, { 0xe7 /* 0x0437 */, 500 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 778 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 944 }, { 0xed /* 0x043d */, 778 }, { 0xee /* 0x043e */, 500 }, { 0xef /* 0x043f */, 556 },
      { 0xf0 /* 0x0440 */, 556 }, { 0xf1 /* 0x0441 */, 444 }, { 0xf2 /* 0x0442 */, 333 }, { 0xf3 /* 0x0443 */, 500 }, { 0xf4 /* 0x0444 */, 500 },
      { 0xf5 /* 0x0445 */, 500 }, { 0xf6 /* 0x0446 */, 556 }, { 0xf7 /* 0x0447 */, 556 }, { 0xf8 /* 0x0448 */, 833 }, { 0xf9 /* 0x0449 */, 833 },
      { 0xfa /* 0x044a */, 1000 }, { 0xfb /* 0x044b */, 1000 }, { 0xfc /* 0x044c */, 556 }, { 0xfd /* 0x044d */, 500 }, { 0xfe /* 0x044e */, 778 },
      { 0xff /* 0x044f */, 444 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1251_TimesBoldItalic[] = { // Times-BoldItalic
      { 0x80 /* 0x0402 */, 667 }, { 0x81 /* 0x0403 */, 667 }, { 0x83 /* 0x0453 */, 278 }, { 0x88 /* 0x20ac */, 500 }, { 0x8a /* 0x0409 */, 889 },
      { 0x8c /* 0x040a */, 889 }, { 0x8d /* 0x040c */, 667 }, { 0x8e /* 0x040b */, 889 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 556 },
      { 0x9a /* 0x0459 */, 556 }, { 0x9c /* 0x045a */, 778 }, { 0x9d /* 0x045c */, 500 }, { 0x9e /* 0x045b */, 556 }, { 0x9f /* 0x045f */, 556 },
      { 0xa1 /* 0x040e */, 444 }, { 0xa2 /* 0x045e */, 444 }, { 0xa3 /* 0x0408 */, 500 }, { 0xa5 /* 0x0490 */, 389 }, { 0xa8 /* 0x0401 */, 667 },
      { 0xaa /* 0x0404 */, 667 }, { 0xaf /* 0x0407 */, 389 }, { 0xb2 /* 0x0406 */, 389 }, { 0xb3 /* 0x0456 */, 278 }, { 0xb4 /* 0x0491 */, 556 },
      { 0xb8 /* 0x0451 */, 444 }, { 0xb9 /* 0x2116 */, 889 }, { 0xba /* 0x0454 */, 444 }, { 0xbc /* 0x0458 */, 278 }, { 0xbd /* 0x0405 */, 556 },
      { 0xbe /* 0x0455 */, 389 }, { 0xbf /* 0x0457 */, 278 }, { 0xc0 /* 0x0410 */, 667 }, { 0xc1 /* 0x0411 */, 667 }, { 0xc2 /* 0x0412 */, 667 },
      { 0xc3 /* 0x0413 */, 667 }, { 0xc4 /* 0x0414 */, 889 }, { 0xc5 /* 0x0415 */, 667 }, { 0xc6 /* 0x0416 */, 889 }, { 0xc7 /* 0x0417 */, 500 },
      { 0xc8 /* 0x0418 */, 722 }, { 0xc9 /* 0x0419 */, 722 }, { 0xca /* 0x041a */, 667 }, { 0xcb /* 0x041b */, 722 }, { 0xcc /* 0x041c */, 889 },
      { 0xcd /* 0x041d */, 778 }, { 0xce /* 0x041e */, 722 }, { 0xcf /* 0x041f */, 778 }, { 0xd0 /* 0x0420 */, 611 }, { 0xd1 /* 0x0421 */, 667 },
      { 0xd2 /* 0x0422 */, 611 }, { 0xd3 /* 0x0423 */, 444 }, { 0xd4 /* 0x0424 */, 500 }, { 0xd5 /* 0x0425 */, 667 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 611 }, { 0xd8 /* 0x0428 */, 889 }, { 0xd9 /* 0x0429 */, 889 }, { 0xda /* 0x042a */, 889 }, { 0xdb /* 0x042b */, 889 },
      { 0xdc /* 0x042c */, 500 }, { 0xdd /* 0x042d */, 500 }, { 0xde /* 0x042e */, 778 }, { 0xdf /* 0x042f */, 667 }, { 0xe0 /* 0x0430 */, 500 },
      { 0xe1 /* 0x0431 */, 722 }, { 0xe2 /* 0x0432 */, 667 }, { 0xe3 /* 0x0433 */, 611 }, { 0xe4 /* 0x0434 */, 667 }, { 0xe5 /* 0x0435 */, 444 },
      { 0xe6 /* 0x0436 */, 500 }, { 0xe7 /* 0x0437 */, 500 }, { 0xe8 /* 0x0438 */, 722 }, { 0xe9 /* 0x0439 */, 722 }, { 0xea /* 0x043a */, 667 },
      { 0xeb /* 0x043b */, 722 }, { 0xec /* 0x043c */, 889 }, { 0xed /* 0x043d */, 778 }, { 0xee /* 0x043e */, 500 }, { 0xef /* 0x043f */, 556 },
      { 0xf0 /* 0x0440 */, 500 }, { 0xf1 /* 0x0441 */, 444 }, { 0xf2 /* 0x0442 */, 278 }, { 0xf3 /* 0x0443 */, 444 }, { 0xf4 /* 0x0444 */, 500 },
      { 0xf5 /* 0x0445 */, 500 }, { 0xf6 /* 0x0446 */, 556 }, { 0xf7 /* 0x0447 */, 556 }, { 0xf8 /* 0x0448 */, 778 }, { 0xf9 /* 0x0449 */, 778 },
      { 0xfa /* 0x044a */, 889 }, { 0xfb /* 0x044b */, 889 }, { 0xfc /* 0x044c */, 500 }, { 0xfd /* 0x044d */, 500 }, { 0xfe /* 0x044e */, 778 },
      { 0xff /* 0x044f */, 389 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1251_TimesItalic[] = { // Times-Italic
      { 0x80 /* 0x0402 */, 611 }, { 0x81 /* 0x0403 */, 611 }, { 0x83 /* 0x0453 */, 278 }, { 0x88 /* 0x20ac */, 500 }, { 0x8a /* 0x0409 */, 833 },
      { 0x8c /* 0x040a */, 833 }, { 0x8d /* 0x040c */, 667 }, { 0x8e /* 0x040b */, 833 }, { 0x8f /* 0x040f */, 722 }, { 0x90 /* 0x0452 */, 500 },
      { 0x9a /* 0x0459 */, 500 }, { 0x9c /* 0x045a */, 722 }, { 0x9d /* 0x045c */, 444 }, { 0x9e /* 0x045b */, 500 }, { 0x9f /* 0x045f */, 500 },
      { 0xa1 /* 0x040e */, 444 }, { 0xa2 /* 0x045e */, 444 }, { 0xa3 /* 0x0408 */, 444 }, { 0xa5 /* 0x0490 */, 333 }, { 0xa8 /* 0x0401 */, 611 },
      { 0xaa /* 0x0404 */, 611 }, { 0xaf /* 0x0407 */, 333 }, { 0xb2 /* 0x0406 */, 333 }, { 0xb3 /* 0x0456 */, 278 }, { 0xb4 /* 0x0491 */, 500 },
      { 0xb8 /* 0x0451 */, 444 }, { 0xb9 /* 0x2116 */, 833 }, { 0xba /* 0x0454 */, 444 }, { 0xbc /* 0x0458 */, 278 }, { 0xbd /* 0x0405 */, 500 },
      { 0xbe /* 0x0455 */, 389 }, { 0xbf /* 0x0457 */, 278 }, { 0xc0 /* 0x0410 */, 611 }, { 0xc1 /* 0x0411 */, 611 }, { 0xc2 /* 0x0412 */, 611 },
      { 0xc3 /* 0x0413 */, 611 }, { 0xc4 /* 0x0414 */, 833 }, { 0xc5 /* 0x0415 */, 611 }, { 0xc6 /* 0x0416 */, 833 }, { 0xc7 /* 0x0417 */, 500 },
      { 0xc8 /* 0x0418 */, 667 }, { 0xc9 /* 0x0419 */, 667 }, { 0xca /* 0x041a */, 667 }, { 0xcb /* 0x041b */, 667 }, { 0xcc /* 0x041c */, 833 },
      { 0xcd /* 0x041d */, 722 }, { 0xce /* 0x041e */, 722 }, { 0xcf /* 0x041f */, 722 }, { 0xd0 /* 0x0420 */, 611 }, { 0xd1 /* 0x0421 */, 667 },
      { 0xd2 /* 0x0422 */, 556 }, { 0xd3 /* 0x0423 */, 444 }, { 0xd4 /* 0x0424 */, 500 }, { 0xd5 /* 0x0425 */, 611 }, { 0xd6 /* 0x0426 */, 722 },
      { 0xd7 /* 0x0427 */, 556 }, { 0xd8 /* 0x0428 */, 833 }, { 0xd9 /* 0x0429 */, 833 }, { 0xda /* 0x042a */, 833 }, { 0xdb /* 0x042b */, 833 },
      { 0xdc /* 0x042c */, 500 }, { 0xdd /* 0x042d */, 500 }, { 0xde /* 0x042e */, 722 }, { 0xdf /* 0x042f */, 611 }, { 0xe0 /* 0x0430 */, 500 },
      { 0xe1 /* 0x0431 */, 722 }, { 0xe2 /* 0x0432 */, 611 }, { 0xe3 /* 0x0433 */, 556 }, { 0xe4 /* 0x0434 */, 611 }, { 0xe5 /* 0x0435 */, 444 },
      { 0xe6 /* 0x0436 */, 444 }, { 0xe7 /* 0x0437 */, 500 }, { 0xe8 /* 0x0438 */, 667 }, { 0xe9 /* 0x0439 */, 667 }, { 0xea /* 0x043a */, 667 },
      { 0xeb /* 0x043b */, 667 }, { 0xec /* 0x043c */, 833 }, { 0xed /* 0x043d */, 722 }, { 0xee /* 0x043e */, 500 }, { 0xef /* 0x043f */, 500 },
      { 0xf0 /* 0x0440 */, 500 }, { 0xf1 /* 0x0441 */, 444 }, { 0xf2 /* 0x0442 */, 278 }, { 0xf3 /* 0x0443 */, 444 }, { 0xf4 /* 0x0444 */, 500 },
      { 0xf5 /* 0x0445 */, 444 }, { 0xf6 /* 0x0446 */, 500 }, { 0xf7 /* 0x0447 */, 500 }, { 0xf8 /* 0x0448 */, 722 }, { 0xf9 /* 0x0449 */, 722 },
      { 0xfa /* 0x044a */, 833 }, { 0xfb /* 0x044b */, 833 }, { 0xfc /* 0x044c */, 500 }, { 0xfd /* 0x044d */, 500 }, { 0xfe /* 0x044e */, 722 },
      { 0xff /* 0x044f */, 389 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1253_Helvetica[] = { // Helvetica
      { 0xa1 /* 0x0385 */, 333 }, { 0xa2 /* 0x0386 */, 667 }, { 0xaf /* 0x2015 */, 556 }, { 0xb4 /* 0x0384 */, 222 }, { 0xb8 /* 0x0388 */, 667 },
      { 0xb9 /* 0x0389 */, 722 }, { 0xba /* 0x038a */, 278 }, { 0xbc /* 0x038c */, 778 }, { 0xbe /* 0x038e */, 667 }, { 0xbf /* 0x038f */, 778 },
      { 0xc0 /* 0x0390 */, 556 }, { 0xc1 /* 0x0391 */, 667 }, { 0xc2 /* 0x0392 */, 667 }, { 0xc3 /* 0x0393 */, 722 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 667 }, { 0xc6 /* 0x0396 */, 611 }, { 0xc7 /* 0x0397 */, 722 }, { 0xc8 /* 0x0398 */, 778 }, { 0xc9 /* 0x0399 */, 278 },
      { 0xca /* 0x039a */, 667 }, { 0xcb /* 0x039b */, 667 }, { 0xcc /* 0x039c */, 833 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 778 },
      { 0xcf /* 0x039f */, 778 }, { 0xd0 /* 0x03a0 */, 556 }, { 0xd1 /* 0x03a1 */, 667 }, { 0xd3 /* 0x03a3 */, 667 }, { 0xd4 /* 0x03a4 */, 611 },
      { 0xd5 /* 0x03a5 */, 667 }, { 0xd6 /* 0x03a6 */, 778 }, { 0xd7 /* 0x03a7 */, 667 }, { 0xd8 /* 0x03a8 */, 944 }, { 0xd9 /* 0x03a9 */, 833 },
      { 0xda /* 0x03aa */, 278 }, { 0xdb /* 0x03ab */, 667 }, { 0xdc /* 0x03ac */, 667 }, { 0xdd /* 0x03ad */, 667 }, { 0xde /* 0x03ae */, 556 },
      { 0xdf /* 0x03af */, 222 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 556 }, { 0xe2 /* 0x03b2 */, 556 }, { 0xe3 /* 0x03b3 */, 500 },
      { 0xe4 /* 0x03b4 */, 556 }, { 0xe5 /* 0x03b5 */, 556 }, { 0xe6 /* 0x03b6 */, 278 }, { 0xe7 /* 0x03b7 */, 556 }, { 0xe8 /* 0x03b8 */, 556 },
      { 0xe9 /* 0x03b9 */, 222 }, { 0xea /* 0x03ba */, 500 }, { 0xeb /* 0x03bb */, 833 }, { 0xec /* 0x03bc */, 556 }, { 0xed /* 0x03bd */, 500 },
      { 0xee /* 0x03be */, 278 }, { 0xef /* 0x03bf */, 556 }, { 0xf0 /* 0x03c0 */, 556 }, { 0xf1 /* 0x03c1 */, 556 }, { 0xf2 /* 0x03c2 */, 556 },
      { 0xf3 /* 0x03c3 */, 556 }, { 0xf4 /* 0x03c4 */, 278 }, { 0xf5 /* 0x03c5 */, 556 }, { 0xf6 /* 0x03c6 */, 556 }, { 0xf7 /* 0x03c7 */, 500 },
      { 0xf8 /* 0x03c8 */, 722 }, { 0xf9 /* 0x03c9 */, 722 }, { 0xfa /* 0x03ca */, 222 }, { 0xfb /* 0x03cb */, 556 }, { 0xfc /* 0x03cc */, 556 },
      { 0xfd /* 0x03cd */, 556 }, { 0xfe /* 0x03ce */, 722 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1253_HelveticaBold[] = { // Helvetica-Bold
      { 0xa1 /* 0x0385 */, 500 }, { 0xa2 /* 0x0386 */, 722 }, { 0xaf /* 0x2015 */, 556 }, { 0xb4 /* 0x0384 */, 278 }, { 0xb8 /* 0x0388 */, 667 },
      { 0xb9 /* 0x0389 */, 722 }, { 0xba /* 0x038a */, 278 }, { 0xbc /* 0x038c */, 778 }, { 0xbe /* 0x038e */, 667 }, { 0xbf /* 0x038f */, 778 },
      { 0xc0 /* 0x0390 */, 611 }, { 0xc1 /* 0x0391 */, 722 }, { 0xc2 /* 0x0392 */, 722 }, { 0xc3 /* 0x0393 */, 722 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 667 }, { 0xc6 /* 0x0396 */, 611 }, { 0xc7 /* 0x0397 */, 722 }, { 0xc8 /* 0x0398 */, 778 }, { 0xc9 /* 0x0399 */, 278 },
      { 0xca /* 0x039a */, 722 }, { 0xcb /* 0x039b */, 722 }, { 0xcc /* 0x039c */, 833 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 778 },
      { 0xcf /* 0x039f */, 778 }, { 0xd0 /* 0x03a0 */, 611 }, { 0xd1 /* 0x03a1 */, 667 }, { 0xd3 /* 0x03a3 */, 667 }, { 0xd4 /* 0x03a4 */, 611 },
      { 0xd5 /* 0x03a5 */, 667 }, { 0xd6 /* 0x03a6 */, 778 }, { 0xd7 /* 0x03a7 */, 667 }, { 0xd8 /* 0x03a8 */, 944 }, { 0xd9 /* 0x03a9 */, 833 },
      { 0xda /* 0x03aa */, 278 }, { 0xdb /* 0x03ab */, 667 }, { 0xdc /* 0x03ac */, 722 }, { 0xdd /* 0x03ad */, 667 }, { 0xde /* 0x03ae */, 611 },
      { 0xdf /* 0x03af */, 278 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 556 }, { 0xe2 /* 0x03b2 */, 611 }, { 0xe3 /* 0x03b3 */, 556 },
      { 0xe4 /* 0x03b4 */, 611 }, { 0xe5 /* 0x03b5 */, 556 }, { 0xe6 /* 0x03b6 */, 333 }, { 0xe7 /* 0x03b7 */, 611 }, { 0xe8 /* 0x03b8 */, 611 },
      { 0xe9 /* 0x03b9 */, 278 }, { 0xea /* 0x03ba */, 556 }, { 0xeb /* 0x03bb */, 889 }, { 0xec /* 0x03bc */, 611 }, { 0xed /* 0x03bd */, 556 },
      { 0xee /* 0x03be */, 333 }, { 0xef /* 0x03bf */, 611 }, { 0xf0 /* 0x03c0 */, 611 }, { 0xf1 /* 0x03c1 */, 611 }, { 0xf2 /* 0x03c2 */, 611 },
      { 0xf3 /* 0x03c3 */, 611 }, { 0xf4 /* 0x03c4 */, 333 }, { 0xf5 /* 0x03c5 */, 611 }, { 0xf6 /* 0x03c6 */, 611 }, { 0xf7 /* 0x03c7 */, 556 },
      { 0xf8 /* 0x03c8 */, 778 }, { 0xf9 /* 0x03c9 */, 778 }, { 0xfa /* 0x03ca */, 278 }, { 0xfb /* 0x03cb */, 611 }, { 0xfc /* 0x03cc */, 611 },
      { 0xfd /* 0x03cd */, 611 }, { 0xfe /* 0x03ce */, 778 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1253_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0xa1 /* 0x0385 */, 500 }, { 0xa2 /* 0x0386 */, 722 }, { 0xaf /* 0x2015 */, 556 }, { 0xb4 /* 0x0384 */, 278 }, { 0xb8 /* 0x0388 */, 667 },
      { 0xb9 /* 0x0389 */, 722 }, { 0xba /* 0x038a */, 278 }, { 0xbc /* 0x038c */, 778 }, { 0xbe /* 0x038e */, 667 }, { 0xbf /* 0x038f */, 778 },
      { 0xc0 /* 0x0390 */, 611 }, { 0xc1 /* 0x0391 */, 722 }, { 0xc2 /* 0x0392 */, 722 }, { 0xc3 /* 0x0393 */, 722 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 667 }, { 0xc6 /* 0x0396 */, 611 }, { 0xc7 /* 0x0397 */, 722 }, { 0xc8 /* 0x0398 */, 778 }, { 0xc9 /* 0x0399 */, 278 },
      { 0xca /* 0x039a */, 722 }, { 0xcb /* 0x039b */, 722 }, { 0xcc /* 0x039c */, 833 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 778 },
      { 0xcf /* 0x039f */, 778 }, { 0xd0 /* 0x03a0 */, 611 }, { 0xd1 /* 0x03a1 */, 667 }, { 0xd3 /* 0x03a3 */, 667 }, { 0xd4 /* 0x03a4 */, 611 },
      { 0xd5 /* 0x03a5 */, 667 }, { 0xd6 /* 0x03a6 */, 778 }, { 0xd7 /* 0x03a7 */, 667 }, { 0xd8 /* 0x03a8 */, 944 }, { 0xd9 /* 0x03a9 */, 833 },
      { 0xda /* 0x03aa */, 278 }, { 0xdb /* 0x03ab */, 667 }, { 0xdc /* 0x03ac */, 722 }, { 0xdd /* 0x03ad */, 667 }, { 0xde /* 0x03ae */, 611 },
      { 0xdf /* 0x03af */, 278 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 556 }, { 0xe2 /* 0x03b2 */, 611 }, { 0xe3 /* 0x03b3 */, 556 },
      { 0xe4 /* 0x03b4 */, 611 }, { 0xe5 /* 0x03b5 */, 556 }, { 0xe6 /* 0x03b6 */, 333 }, { 0xe7 /* 0x03b7 */, 611 }, { 0xe8 /* 0x03b8 */, 611 },
      { 0xe9 /* 0x03b9 */, 278 }, { 0xea /* 0x03ba */, 556 }, { 0xeb /* 0x03bb */, 889 }, { 0xec /* 0x03bc */, 611 }, { 0xed /* 0x03bd */, 556 },
      { 0xee /* 0x03be */, 333 }, { 0xef /* 0x03bf */, 611 }, { 0xf0 /* 0x03c0 */, 611 }, { 0xf1 /* 0x03c1 */, 611 }, { 0xf2 /* 0x03c2 */, 611 },
      { 0xf3 /* 0x03c3 */, 611 }, { 0xf4 /* 0x03c4 */, 333 }, { 0xf5 /* 0x03c5 */, 611 }, { 0xf6 /* 0x03c6 */, 611 }, { 0xf7 /* 0x03c7 */, 556 },
      { 0xf8 /* 0x03c8 */, 778 }, { 0xf9 /* 0x03c9 */, 778 }, { 0xfa /* 0x03ca */, 278 }, { 0xfb /* 0x03cb */, 611 }, { 0xfc /* 0x03cc */, 611 },
      { 0xfd /* 0x03cd */, 611 }, { 0xfe /* 0x03ce */, 778 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1253_HelveticaOblique[] = { // Helvetica-Oblique
      { 0xa1 /* 0x0385 */, 333 }, { 0xa2 /* 0x0386 */, 667 }, { 0xaf /* 0x2015 */, 556 }, { 0xb4 /* 0x0384 */, 222 }, { 0xb8 /* 0x0388 */, 667 },
      { 0xb9 /* 0x0389 */, 722 }, { 0xba /* 0x038a */, 278 }, { 0xbc /* 0x038c */, 778 }, { 0xbe /* 0x038e */, 667 }, { 0xbf /* 0x038f */, 778 },
      { 0xc0 /* 0x0390 */, 556 }, { 0xc1 /* 0x0391 */, 667 }, { 0xc2 /* 0x0392 */, 667 }, { 0xc3 /* 0x0393 */, 722 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 667 }, { 0xc6 /* 0x0396 */, 611 }, { 0xc7 /* 0x0397 */, 722 }, { 0xc8 /* 0x0398 */, 778 }, { 0xc9 /* 0x0399 */, 278 },
      { 0xca /* 0x039a */, 667 }, { 0xcb /* 0x039b */, 667 }, { 0xcc /* 0x039c */, 833 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 778 },
      { 0xcf /* 0x039f */, 778 }, { 0xd0 /* 0x03a0 */, 556 }, { 0xd1 /* 0x03a1 */, 667 }, { 0xd3 /* 0x03a3 */, 667 }, { 0xd4 /* 0x03a4 */, 611 },
      { 0xd5 /* 0x03a5 */, 667 }, { 0xd6 /* 0x03a6 */, 778 }, { 0xd7 /* 0x03a7 */, 667 }, { 0xd8 /* 0x03a8 */, 944 }, { 0xd9 /* 0x03a9 */, 833 },
      { 0xda /* 0x03aa */, 278 }, { 0xdb /* 0x03ab */, 667 }, { 0xdc /* 0x03ac */, 667 }, { 0xdd /* 0x03ad */, 667 }, { 0xde /* 0x03ae */, 556 },
      { 0xdf /* 0x03af */, 222 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 556 }, { 0xe2 /* 0x03b2 */, 556 }, { 0xe3 /* 0x03b3 */, 500 },
      { 0xe4 /* 0x03b4 */, 556 }, { 0xe5 /* 0x03b5 */, 556 }, { 0xe6 /* 0x03b6 */, 278 }, { 0xe7 /* 0x03b7 */, 556 }, { 0xe8 /* 0x03b8 */, 556 },
      { 0xe9 /* 0x03b9 */, 222 }, { 0xea /* 0x03ba */, 500 }, { 0xeb /* 0x03bb */, 833 }, { 0xec /* 0x03bc */, 556 }, { 0xed /* 0x03bd */, 500 },
      { 0xee /* 0x03be */, 278 }, { 0xef /* 0x03bf */, 556 }, { 0xf0 /* 0x03c0 */, 556 }, { 0xf1 /* 0x03c1 */, 556 }, { 0xf2 /* 0x03c2 */, 556 },
      { 0xf3 /* 0x03c3 */, 556 }, { 0xf4 /* 0x03c4 */, 278 }, { 0xf5 /* 0x03c5 */, 556 }, { 0xf6 /* 0x03c6 */, 556 }, { 0xf7 /* 0x03c7 */, 500 },
      { 0xf8 /* 0x03c8 */, 722 }, { 0xf9 /* 0x03c9 */, 722 }, { 0xfa /* 0x03ca */, 222 }, { 0xfb /* 0x03cb */, 556 }, { 0xfc /* 0x03cc */, 556 },
      { 0xfd /* 0x03cd */, 556 }, { 0xfe /* 0x03ce */, 722 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1253_TimesRoman[] = { // Times-Roman
      { 0xa1 /* 0x0385 */, 444 }, { 0xa2 /* 0x0386 */, 722 }, { 0xaf /* 0x2015 */, 500 }, { 0xb4 /* 0x0384 */, 333 }, { 0xb8 /* 0x0388 */, 611 },
      { 0xb9 /* 0x0389 */, 722 }, { 0xba /* 0x038a */, 333 }, { 0xbc /* 0x038c */, 722 }, { 0xbe /* 0x038e */, 722 }, { 0xbf /* 0x038f */, 722 },
      { 0xc0 /* 0x0390 */, 500 }, { 0xc1 /* 0x0391 */, 722 }, { 0xc2 /* 0x0392 */, 667 }, { 0xc3 /* 0x0393 */, 667 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 611 }, { 0xc6 /* 0x0396 */, 611 }, { 0xc7 /* 0x0397 */, 722 }, { 0xc8 /* 0x0398 */, 722 }, { 0xc9 /* 0x0399 */, 333 },
      { 0xca /* 0x039a */, 722 }, { 0xcb /* 0x039b */, 722 }, { 0xcc /* 0x039c */, 889 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 722 },
      { 0xcf /* 0x039f */, 722 }, { 0xd0 /* 0x03a0 */, 500 }, { 0xd1 /* 0x03a1 */, 556 }, { 0xd3 /* 0x03a3 */, 611 }, { 0xd4 /* 0x03a4 */, 611 },
      { 0xd5 /* 0x03a5 */, 722 }, { 0xd6 /* 0x03a6 */, 722 }, { 0xd7 /* 0x03a7 */, 722 }, { 0xd8 /* 0x03a8 */, 944 }, { 0xd9 /* 0x03a9 */, 889 },
      { 0xda /* 0x03aa */, 333 }, { 0xdb /* 0x03ab */, 722 }, { 0xdc /* 0x03ac */, 722 }, { 0xdd /* 0x03ad */, 611 }, { 0xde /* 0x03ae */, 500 },
      { 0xdf /* 0x03af */, 278 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 444 }, { 0xe2 /* 0x03b2 */, 500 }, { 0xe3 /* 0x03b3 */, 444 },
      { 0xe4 /* 0x03b4 */, 500 }, { 0xe5 /* 0x03b5 */, 444 }, { 0xe6 /* 0x03b6 */, 333 }, { 0xe7 /* 0x03b7 */, 500 }, { 0xe8 /* 0x03b8 */, 500 },
      { 0xe9 /* 0x03b9 */, 278 }, { 0xea /* 0x03ba */, 500 }, { 0xeb /* 0x03bb */, 778 }, { 0xec /* 0x03bc */, 500 }, { 0xed /* 0x03bd */, 500 },
      { 0xee /* 0x03be */, 278 }, { 0xef /* 0x03bf */, 500 }, { 0xf0 /* 0x03c0 */, 500 }, { 0xf1 /* 0x03c1 */, 500 }, { 0xf2 /* 0x03c2 */, 500 },
      { 0xf3 /* 0x03c3 */, 500 }, { 0xf4 /* 0x03c4 */, 278 }, { 0xf5 /* 0x03c5 */, 500 }, { 0xf6 /* 0x03c6 */, 500 }, { 0xf7 /* 0x03c7 */, 500 },
      { 0xf8 /* 0x03c8 */, 722 }, { 0xf9 /* 0x03c9 */, 722 }, { 0xfa /* 0x03ca */, 278 }, { 0xfb /* 0x03cb */, 500 }, { 0xfc /* 0x03cc */, 500 },
      { 0xfd /* 0x03cd */, 500 }, { 0xfe /* 0x03ce */, 722 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1253_TimesBold[] = { // Times-Bold
      { 0xa1 /* 0x0385 */, 500 }, { 0xa2 /* 0x0386 */, 722 }, { 0xaf /* 0x2015 */, 500 }, { 0xb4 /* 0x0384 */, 333 }, { 0xb8 /* 0x0388 */, 667 },
      { 0xb9 /* 0x0389 */, 778 }, { 0xba /* 0x038a */, 389 }, { 0xbc /* 0x038c */, 778 }, { 0xbe /* 0x038e */, 722 }, { 0xbf /* 0x038f */, 778 },
      { 0xc0 /* 0x0390 */, 556 }, { 0xc1 /* 0x0391 */, 722 }, { 0xc2 /* 0x0392 */, 667 }, { 0xc3 /* 0x0393 */, 722 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 667 }, { 0xc6 /* 0x0396 */, 667 }, { 0xc7 /* 0x0397 */, 778 }, { 0xc8 /* 0x0398 */, 778 }, { 0xc9 /* 0x0399 */, 389 },
      { 0xca /* 0x039a */, 778 }, { 0xcb /* 0x039b */, 722 }, { 0xcc /* 0x039c */, 944 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 778 },
      { 0xcf /* 0x039f */, 778 }, { 0xd0 /* 0x03a0 */, 556 }, { 0xd1 /* 0x03a1 */, 611 }, { 0xd3 /* 0x03a3 */, 667 }, { 0xd4 /* 0x03a4 */, 667 },
      { 0xd5 /* 0x03a5 */, 722 }, { 0xd6 /* 0x03a6 */, 778 }, { 0xd7 /* 0x03a7 */, 722 }, { 0xd8 /* 0x03a8 */, 1000 }, { 0xd9 /* 0x03a9 */, 944 },
      { 0xda /* 0x03aa */, 389 }, { 0xdb /* 0x03ab */, 722 }, { 0xdc /* 0x03ac */, 722 }, { 0xdd /* 0x03ad */, 667 }, { 0xde /* 0x03ae */, 556 },
      { 0xdf /* 0x03af */, 278 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 500 }, { 0xe2 /* 0x03b2 */, 556 }, { 0xe3 /* 0x03b3 */, 444 },
      { 0xe4 /* 0x03b4 */, 556 }, { 0xe5 /* 0x03b5 */, 444 }, { 0xe6 /* 0x03b6 */, 333 }, { 0xe7 /* 0x03b7 */, 500 }, { 0xe8 /* 0x03b8 */, 556 },
      { 0xe9 /* 0x03b9 */, 278 }, { 0xea /* 0x03ba */, 556 }, { 0xeb /* 0x03bb */, 833 }, { 0xec /* 0x03bc */, 556 }, { 0xed /* 0x03bd */, 500 },
      { 0xee /* 0x03be */, 333 }, { 0xef /* 0x03bf */, 500 }, { 0xf0 /* 0x03c0 */, 556 }, { 0xf1 /* 0x03c1 */, 556 }, { 0xf2 /* 0x03c2 */, 556 },
      { 0xf3 /* 0x03c3 */, 556 }, { 0xf4 /* 0x03c4 */, 333 }, { 0xf5 /* 0x03c5 */, 556 }, { 0xf6 /* 0x03c6 */, 556 }, { 0xf7 /* 0x03c7 */, 500 },
      { 0xf8 /* 0x03c8 */, 722 }, { 0xf9 /* 0x03c9 */, 722 }, { 0xfa /* 0x03ca */, 278 }, { 0xfb /* 0x03cb */, 556 }, { 0xfc /* 0x03cc */, 500 },
      { 0xfd /* 0x03cd */, 556 }, { 0xfe /* 0x03ce */, 722 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1253_TimesBoldItalic[] = { // Times-BoldItalic
      { 0xa1 /* 0x0385 */, 500 }, { 0xa2 /* 0x0386 */, 667 }, { 0xaf /* 0x2015 */, 500 }, { 0xb4 /* 0x0384 */, 333 }, { 0xb8 /* 0x0388 */, 667 },
      { 0xb9 /* 0x0389 */, 778 }, { 0xba /* 0x038a */, 389 }, { 0xbc /* 0x038c */, 722 }, { 0xbe /* 0x038e */, 611 }, { 0xbf /* 0x038f */, 722 },
      { 0xc0 /* 0x0390 */, 576 }, { 0xc1 /* 0x0391 */, 667 }, { 0xc2 /* 0x0392 */, 667 }, { 0xc3 /* 0x0393 */, 667 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 667 }, { 0xc6 /* 0x0396 */, 611 }, { 0xc7 /* 0x0397 */, 778 }, { 0xc8 /* 0x0398 */, 722 }, { 0xc9 /* 0x0399 */, 389 },
      { 0xca /* 0x039a */, 667 }, { 0xcb /* 0x039b */, 667 }, { 0xcc /* 0x039c */, 889 }, { 0xcd /* 0x039d */, 722 }, { 0xce /* 0x039e */, 722 },
      { 0xcf /* 0x039f */, 722 }, { 0xd0 /* 0x03a0 */, 576 }, { 0xd1 /* 0x03a1 */, 611 }, { 0xd3 /* 0x03a3 */, 667 }, { 0xd4 /* 0x03a4 */, 611 },
      { 0xd5 /* 0x03a5 */, 611 }, { 0xd6 /* 0x03a6 */, 722 }, { 0xd7 /* 0x03a7 */, 667 }, { 0xd8 /* 0x03a8 */, 889 }, { 0xd9 /* 0x03a9 */, 889 },
      { 0xda /* 0x03aa */, 389 }, { 0xdb /* 0x03ab */, 611 }, { 0xdc /* 0x03ac */, 667 }, { 0xdd /* 0x03ad */, 667 }, { 0xde /* 0x03ae */, 556 },
      { 0xdf /* 0x03af */, 278 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 500 }, { 0xe2 /* 0x03b2 */, 500 }, { 0xe3 /* 0x03b3 */, 444 },
      { 0xe4 /* 0x03b4 */, 500 }, { 0xe5 /* 0x03b5 */, 444 }, { 0xe6 /* 0x03b6 */, 333 }, { 0xe7 /* 0x03b7 */, 500 }, { 0xe8 /* 0x03b8 */, 556 },
      { 0xe9 /* 0x03b9 */, 278 }, { 0xea /* 0x03ba */, 500 }, { 0xeb /* 0x03bb */, 778 }, { 0xec /* 0x03bc */, 576 }, { 0xed /* 0x03bd */, 444 },
      { 0xee /* 0x03be */, 278 }, { 0xef /* 0x03bf */, 500 }, { 0xf0 /* 0x03c0 */, 556 }, { 0xf1 /* 0x03c1 */, 500 }, { 0xf2 /* 0x03c2 */, 500 },
      { 0xf3 /* 0x03c3 */, 500 }, { 0xf4 /* 0x03c4 */, 278 }, { 0xf5 /* 0x03c5 */, 556 }, { 0xf6 /* 0x03c6 */, 500 }, { 0xf7 /* 0x03c7 */, 500 },
      { 0xf8 /* 0x03c8 */, 667 }, { 0xf9 /* 0x03c9 */, 667 }, { 0xfa /* 0x03ca */, 278 }, { 0xfb /* 0x03cb */, 556 }, { 0xfc /* 0x03cc */, 500 },
      { 0xfd /* 0x03cd */, 556 }, { 0xfe /* 0x03ce */, 667 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1253_TimesItalic[] = { // Times-Italic
      { 0xa1 /* 0x0385 */, 556 }, { 0xa2 /* 0x0386 */, 611 }, { 0xaf /* 0x2015 */, 500 }, { 0xb4 /* 0x0384 */, 333 }, { 0xb8 /* 0x0388 */, 611 },
      { 0xb9 /* 0x0389 */, 722 }, { 0xba /* 0x038a */, 333 }, { 0xbc /* 0x038c */, 722 }, { 0xbe /* 0x038e */, 556 }, { 0xbf /* 0x038f */, 722 },
      { 0xc0 /* 0x0390 */, 500 }, { 0xc1 /* 0x0391 */, 611 }, { 0xc2 /* 0x0392 */, 611 }, { 0xc3 /* 0x0393 */, 667 }, { 0xc4 /* 0x0394 */, 612 },
      { 0xc5 /* 0x0395 */, 611 }, { 0xc6 /* 0x0396 */, 556 }, { 0xc7 /* 0x0397 */, 722 }, { 0xc8 /* 0x0398 */, 722 }, { 0xc9 /* 0x0399 */, 333 },
      { 0xca /* 0x039a */, 667 }, { 0xcb /* 0x039b */, 611 }, { 0xcc /* 0x039c */, 833 }, { 0xcd /* 0x039d */, 667 }, { 0xce /* 0x039e */, 722 },
      { 0xcf /* 0x039f */, 722 }, { 0xd0 /* 0x03a0 */, 500 }, { 0xd1 /* 0x03a1 */, 611 }, { 0xd3 /* 0x03a3 */, 611 }, { 0xd4 /* 0x03a4 */, 556 },
      { 0xd5 /* 0x03a5 */, 556 }, { 0xd6 /* 0x03a6 */, 722 }, { 0xd7 /* 0x03a7 */, 611 }, { 0xd8 /* 0x03a8 */, 833 }, { 0xd9 /* 0x03a9 */, 833 },
      { 0xda /* 0x03aa */, 333 }, { 0xdb /* 0x03ab */, 556 }, { 0xdc /* 0x03ac */, 611 }, { 0xdd /* 0x03ad */, 611 }, { 0xde /* 0x03ae */, 500 },
      { 0xdf /* 0x03af */, 278 }, { 0xe0 /* 0x03b0 */, 722 }, { 0xe1 /* 0x03b1 */, 500 }, { 0xe2 /* 0x03b2 */, 500 }, { 0xe3 /* 0x03b3 */, 444 },
      { 0xe4 /* 0x03b4 */, 500 }, { 0xe5 /* 0x03b5 */, 444 }, { 0xe6 /* 0x03b6 */, 278 }, { 0xe7 /* 0x03b7 */, 500 }, { 0xe8 /* 0x03b8 */, 500 },
      { 0xe9 /* 0x03b9 */, 278 }, { 0xea /* 0x03ba */, 444 }, { 0xeb /* 0x03bb */, 722 }, { 0xec /* 0x03bc */, 500 }, { 0xed /* 0x03bd */, 444 },
      { 0xee /* 0x03be */, 278 }, { 0xef /* 0x03bf */, 500 }, { 0xf0 /* 0x03c0 */, 500 }, { 0xf1 /* 0x03c1 */, 500 }, { 0xf2 /* 0x03c2 */, 500 },
      { 0xf3 /* 0x03c3 */, 500 }, { 0xf4 /* 0x03c4 */, 278 }, { 0xf5 /* 0x03c5 */, 500 }, { 0xf6 /* 0x03c6 */, 500 }, { 0xf7 /* 0x03c7 */, 444 },
      { 0xf8 /* 0x03c8 */, 667 }, { 0xf9 /* 0x03c9 */, 667 }, { 0xfa /* 0x03ca */, 278 }, { 0xfb /* 0x03cb */, 500 }, { 0xfc /* 0x03cc */, 500 },
      { 0xfd /* 0x03cd */, 500 }, { 0xfe /* 0x03ce */, 667 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1254_Helvetica[] = { // Helvetica
      { 0xd0 /* 0x011e */, 778 }, { 0xdd /* 0x0130 */, 278 }, { 0xde /* 0x015e */, 667 }, { 0xf0 /* 0x011f */, 556 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 500 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1254_HelveticaBold[] = { // Helvetica-Bold
      { 0xd0 /* 0x011e */, 778 }, { 0xdd /* 0x0130 */, 278 }, { 0xde /* 0x015e */, 667 }, { 0xf0 /* 0x011f */, 611 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 556 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1254_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0xd0 /* 0x011e */, 778 }, { 0xdd /* 0x0130 */, 278 }, { 0xde /* 0x015e */, 667 }, { 0xf0 /* 0x011f */, 611 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 556 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1254_HelveticaOblique[] = { // Helvetica-Oblique
      { 0xd0 /* 0x011e */, 778 }, { 0xdd /* 0x0130 */, 278 }, { 0xde /* 0x015e */, 667 }, { 0xf0 /* 0x011f */, 556 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 500 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1254_TimesRoman[] = { // Times-Roman
      { 0xd0 /* 0x011e */, 722 }, { 0xdd /* 0x0130 */, 333 }, { 0xde /* 0x015e */, 556 }, { 0xf0 /* 0x011f */, 500 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 389 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1254_TimesBold[] = { // Times-Bold
      { 0xd0 /* 0x011e */, 778 }, { 0xdd /* 0x0130 */, 389 }, { 0xde /* 0x015e */, 556 }, { 0xf0 /* 0x011f */, 500 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 389 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1254_TimesBoldItalic[] = { // Times-BoldItalic
      { 0xd0 /* 0x011e */, 722 }, { 0xdd /* 0x0130 */, 389 }, { 0xde /* 0x015e */, 556 }, { 0xf0 /* 0x011f */, 500 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 389 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1254_TimesItalic[] = { // Times-Italic
      { 0xd0 /* 0x011e */, 722 }, { 0xdd /* 0x0130 */, 333 }, { 0xde /* 0x015e */, 500 }, { 0xf0 /* 0x011f */, 500 }, { 0xfd /* 0x0131 */, 278 },
      { 0xfe /* 0x015f */, 389 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1255_Helvetica[] = { // Helvetica
      { 0xa4 /* 0x20aa */, 944 }, { 0xaa /* 0x00d7 */, 584 }, { 0xba /* 0x00f7 */, 584 }, { 0xc0 /* 0x05b0 */, 222 }, { 0xc1 /* 0x05b1 */, 333 },
      { 0xc2 /* 0x05b2 */, 333 }, { 0xc3 /* 0x05b3 */, 333 }, { 0xc4 /* 0x05b4 */, 222 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 222 }, { 0xcb /* 0x05bb */, 333 }, { 0xcc /* 0x05bc */, 222 },
      { 0xcd /* 0x05bd */, 222 }, { 0xce /* 0x05be */, 556 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 333 }, { 0xd1 /* 0x05c1 */, 222 },
      { 0xd2 /* 0x05c2 */, 222 }, { 0xd3 /* 0x05c3 */, 278 }, { 0xd4 /* 0x05f0 */, 944 }, { 0xd5 /* 0x05f1 */, 944 }, { 0xd6 /* 0x05f2 */, 944 },
      { 0xd7 /* 0x05f3 */, 222 }, { 0xd8 /* 0x05f4 */, 333 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 611 }, { 0xe2 /* 0x05d2 */, 500 },
      { 0xe3 /* 0x05d3 */, 611 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 278 }, { 0xe6 /* 0x05d6 */, 278 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 611 }, { 0xeb /* 0x05db */, 778 }, { 0xec /* 0x05dc */, 500 },
      { 0xed /* 0x05dd */, 556 }, { 0xee /* 0x05de */, 556 }, { 0xef /* 0x05df */, 222 }, { 0xf0 /* 0x05e0 */, 222 }, { 0xf1 /* 0x05e1 */, 556 },
      { 0xf2 /* 0x05e2 */, 556 }, { 0xf3 /* 0x05e3 */, 556 }, { 0xf4 /* 0x05e4 */, 556 }, { 0xf5 /* 0x05e5 */, 500 }, { 0xf6 /* 0x05e6 */, 500 },
      { 0xf7 /* 0x05e7 */, 556 }, { 0xf8 /* 0x05e8 */, 556 }, { 0xf9 /* 0x05e9 */, 722 }, { 0xfa /* 0x05ea */, 556 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1255_HelveticaBold[] = { // Helvetica-Bold
      { 0xa4 /* 0x20aa */, 944 }, { 0xaa /* 0x00d7 */, 584 }, { 0xba /* 0x00f7 */, 584 }, { 0xc0 /* 0x05b0 */, 278 }, { 0xc1 /* 0x05b1 */, 500 },
      { 0xc2 /* 0x05b2 */, 500 }, { 0xc3 /* 0x05b3 */, 500 }, { 0xc4 /* 0x05b4 */, 278 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 278 }, { 0xcb /* 0x05bb */, 500 }, { 0xcc /* 0x05bc */, 278 },
      { 0xcd /* 0x05bd */, 278 }, { 0xce /* 0x05be */, 556 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 333 }, { 0xd1 /* 0x05c1 */, 278 },
      { 0xd2 /* 0x05c2 */, 278 }, { 0xd3 /* 0x05c3 */, 333 }, { 0xd4 /* 0x05f0 */, 944 }, { 0xd5 /* 0x05f1 */, 944 }, { 0xd6 /* 0x05f2 */, 944 },
      { 0xd7 /* 0x05f3 */, 278 }, { 0xd8 /* 0x05f4 */, 500 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 611 }, { 0xe2 /* 0x05d2 */, 556 },
      { 0xe3 /* 0x05d3 */, 611 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 278 }, { 0xe6 /* 0x05d6 */, 333 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 611 }, { 0xeb /* 0x05db */, 778 }, { 0xec /* 0x05dc */, 556 },
      { 0xed /* 0x05dd */, 611 }, { 0xee /* 0x05de */, 611 }, { 0xef /* 0x05df */, 278 }, { 0xf0 /* 0x05e0 */, 278 }, { 0xf1 /* 0x05e1 */, 611 },
      { 0xf2 /* 0x05e2 */, 611 }, { 0xf3 /* 0x05e3 */, 611 }, { 0xf4 /* 0x05e4 */, 611 }, { 0xf5 /* 0x05e5 */, 556 }, { 0xf6 /* 0x05e6 */, 556 },
      { 0xf7 /* 0x05e7 */, 611 }, { 0xf8 /* 0x05e8 */, 611 }, { 0xf9 /* 0x05e9 */, 778 }, { 0xfa /* 0x05ea */, 611 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1255_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0xa4 /* 0x20aa */, 944 }, { 0xaa /* 0x00d7 */, 584 }, { 0xba /* 0x00f7 */, 584 }, { 0xc0 /* 0x05b0 */, 278 }, { 0xc1 /* 0x05b1 */, 500 },
      { 0xc2 /* 0x05b2 */, 500 }, { 0xc3 /* 0x05b3 */, 500 }, { 0xc4 /* 0x05b4 */, 278 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 278 }, { 0xcb /* 0x05bb */, 500 }, { 0xcc /* 0x05bc */, 278 },
      { 0xcd /* 0x05bd */, 278 }, { 0xce /* 0x05be */, 556 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 333 }, { 0xd1 /* 0x05c1 */, 278 },
      { 0xd2 /* 0x05c2 */, 278 }, { 0xd3 /* 0x05c3 */, 333 }, { 0xd4 /* 0x05f0 */, 944 }, { 0xd5 /* 0x05f1 */, 944 }, { 0xd6 /* 0x05f2 */, 944 },
      { 0xd7 /* 0x05f3 */, 278 }, { 0xd8 /* 0x05f4 */, 500 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 611 }, { 0xe2 /* 0x05d2 */, 556 },
      { 0xe3 /* 0x05d3 */, 611 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 278 }, { 0xe6 /* 0x05d6 */, 333 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 611 }, { 0xeb /* 0x05db */, 778 }, { 0xec /* 0x05dc */, 556 },
      { 0xed /* 0x05dd */, 611 }, { 0xee /* 0x05de */, 611 }, { 0xef /* 0x05df */, 278 }, { 0xf0 /* 0x05e0 */, 278 }, { 0xf1 /* 0x05e1 */, 611 },
      { 0xf2 /* 0x05e2 */, 611 }, { 0xf3 /* 0x05e3 */, 611 }, { 0xf4 /* 0x05e4 */, 611 }, { 0xf5 /* 0x05e5 */, 556 }, { 0xf6 /* 0x05e6 */, 556 },
      { 0xf7 /* 0x05e7 */, 611 }, { 0xf8 /* 0x05e8 */, 611 }, { 0xf9 /* 0x05e9 */, 778 }, { 0xfa /* 0x05ea */, 611 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1255_HelveticaOblique[] = { // Helvetica-Oblique
      { 0xa4 /* 0x20aa */, 944 }, { 0xaa /* 0x00d7 */, 584 }, { 0xba /* 0x00f7 */, 584 }, { 0xc0 /* 0x05b0 */, 222 }, { 0xc1 /* 0x05b1 */, 333 },
      { 0xc2 /* 0x05b2 */, 333 }, { 0xc3 /* 0x05b3 */, 333 }, { 0xc4 /* 0x05b4 */, 222 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 222 }, { 0xcb /* 0x05bb */, 333 }, { 0xcc /* 0x05bc */, 222 },
      { 0xcd /* 0x05bd */, 222 }, { 0xce /* 0x05be */, 556 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 333 }, { 0xd1 /* 0x05c1 */, 222 },
      { 0xd2 /* 0x05c2 */, 222 }, { 0xd3 /* 0x05c3 */, 278 }, { 0xd4 /* 0x05f0 */, 944 }, { 0xd5 /* 0x05f1 */, 944 }, { 0xd6 /* 0x05f2 */, 944 },
      { 0xd7 /* 0x05f3 */, 222 }, { 0xd8 /* 0x05f4 */, 333 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 611 }, { 0xe2 /* 0x05d2 */, 500 },
      { 0xe3 /* 0x05d3 */, 611 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 278 }, { 0xe6 /* 0x05d6 */, 278 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 611 }, { 0xeb /* 0x05db */, 778 }, { 0xec /* 0x05dc */, 500 },
      { 0xed /* 0x05dd */, 556 }, { 0xee /* 0x05de */, 556 }, { 0xef /* 0x05df */, 222 }, { 0xf0 /* 0x05e0 */, 222 }, { 0xf1 /* 0x05e1 */, 556 },
      { 0xf2 /* 0x05e2 */, 556 }, { 0xf3 /* 0x05e3 */, 556 }, { 0xf4 /* 0x05e4 */, 556 }, { 0xf5 /* 0x05e5 */, 500 }, { 0xf6 /* 0x05e6 */, 500 },
      { 0xf7 /* 0x05e7 */, 556 }, { 0xf8 /* 0x05e8 */, 556 }, { 0xf9 /* 0x05e9 */, 722 }, { 0xfa /* 0x05ea */, 556 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1255_TimesRoman[] = { // Times-Roman
      { 0xa4 /* 0x20aa */, 944 }, { 0xaa /* 0x00d7 */, 564 }, { 0xba /* 0x00f7 */, 564 }, { 0xc0 /* 0x05b0 */, 333 }, { 0xc1 /* 0x05b1 */, 444 },
      { 0xc2 /* 0x05b2 */, 444 }, { 0xc3 /* 0x05b3 */, 444 }, { 0xc4 /* 0x05b4 */, 333 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 333 }, { 0xcb /* 0x05bb */, 444 }, { 0xcc /* 0x05bc */, 333 },
      { 0xcd /* 0x05bd */, 333 }, { 0xce /* 0x05be */, 500 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 333 }, { 0xd1 /* 0x05c1 */, 333 },
      { 0xd2 /* 0x05c2 */, 333 }, { 0xd3 /* 0x05c3 */, 278 }, { 0xd4 /* 0x05f0 */, 944 }, { 0xd5 /* 0x05f1 */, 944 }, { 0xd6 /* 0x05f2 */, 944 },
      { 0xd7 /* 0x05f3 */, 333 }, { 0xd8 /* 0x05f4 */, 444 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 611 }, { 0xe2 /* 0x05d2 */, 389 },
      { 0xe3 /* 0x05d3 */, 611 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 333 }, { 0xe6 /* 0x05d6 */, 278 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 611 }, { 0xeb /* 0x05db */, 722 }, { 0xec /* 0x05dc */, 500 },
      { 0xed /* 0x05dd */, 500 }, { 0xee /* 0x05de */, 500 }, { 0xef /* 0x05df */, 278 }, { 0xf0 /* 0x05e0 */, 278 }, { 0xf1 /* 0x05e1 */, 500 },
      { 0xf2 /* 0x05e2 */, 500 }, { 0xf3 /* 0x05e3 */, 500 }, { 0xf4 /* 0x05e4 */, 500 }, { 0xf5 /* 0x05e5 */, 500 }, { 0xf6 /* 0x05e6 */, 500 },
      { 0xf7 /* 0x05e7 */, 500 }, { 0xf8 /* 0x05e8 */, 500 }, { 0xf9 /* 0x05e9 */, 722 }, { 0xfa /* 0x05ea */, 500 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1255_TimesBold[] = { // Times-Bold
      { 0xa4 /* 0x20aa */, 1000 }, { 0xaa /* 0x00d7 */, 570 }, { 0xba /* 0x00f7 */, 570 }, { 0xc0 /* 0x05b0 */, 333 }, { 0xc1 /* 0x05b1 */, 500 },
      { 0xc2 /* 0x05b2 */, 500 }, { 0xc3 /* 0x05b3 */, 500 }, { 0xc4 /* 0x05b4 */, 333 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 333 }, { 0xcb /* 0x05bb */, 500 }, { 0xcc /* 0x05bc */, 333 },
      { 0xcd /* 0x05bd */, 333 }, { 0xce /* 0x05be */, 500 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 333 }, { 0xd1 /* 0x05c1 */, 333 },
      { 0xd2 /* 0x05c2 */, 333 }, { 0xd3 /* 0x05c3 */, 333 }, { 0xd4 /* 0x05f0 */, 1000 }, { 0xd5 /* 0x05f1 */, 1000 }, { 0xd6 /* 0x05f2 */, 1000 },
      { 0xd7 /* 0x05f3 */, 333 }, { 0xd8 /* 0x05f4 */, 500 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 667 }, { 0xe2 /* 0x05d2 */, 500 },
      { 0xe3 /* 0x05d3 */, 667 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 389 }, { 0xe6 /* 0x05d6 */, 333 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 667 }, { 0xeb /* 0x05db */, 778 }, { 0xec /* 0x05dc */, 556 },
      { 0xed /* 0x05dd */, 500 }, { 0xee /* 0x05de */, 556 }, { 0xef /* 0x05df */, 278 }, { 0xf0 /* 0x05e0 */, 333 }, { 0xf1 /* 0x05e1 */, 556 },
      { 0xf2 /* 0x05e2 */, 556 }, { 0xf3 /* 0x05e3 */, 556 }, { 0xf4 /* 0x05e4 */, 556 }, { 0xf5 /* 0x05e5 */, 500 }, { 0xf6 /* 0x05e6 */, 500 },
      { 0xf7 /* 0x05e7 */, 556 }, { 0xf8 /* 0x05e8 */, 556 }, { 0xf9 /* 0x05e9 */, 722 }, { 0xfa /* 0x05ea */, 556 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1255_TimesBoldItalic[] = { // Times-BoldItalic
      { 0xa4 /* 0x20aa */, 889 }, { 0xaa /* 0x00d7 */, 570 }, { 0xba /* 0x00f7 */, 570 }, { 0xc0 /* 0x05b0 */, 333 }, { 0xc1 /* 0x05b1 */, 500 },
      { 0xc2 /* 0x05b2 */, 500 }, { 0xc3 /* 0x05b3 */, 500 }, { 0xc4 /* 0x05b4 */, 333 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 333 }, { 0xcb /* 0x05bb */, 500 }, { 0xcc /* 0x05bc */, 333 },
      { 0xcd /* 0x05bd */, 333 }, { 0xce /* 0x05be */, 500 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 389 }, { 0xd1 /* 0x05c1 */, 333 },
      { 0xd2 /* 0x05c2 */, 333 }, { 0xd3 /* 0x05c3 */, 333 }, { 0xd4 /* 0x05f0 */, 889 }, { 0xd5 /* 0x05f1 */, 889 }, { 0xd6 /* 0x05f2 */, 889 },
      { 0xd7 /* 0x05f3 */, 333 }, { 0xd8 /* 0x05f4 */, 500 }, { 0xe0 /* 0x05d0 */, 722 }, { 0xe1 /* 0x05d1 */, 611 }, { 0xe2 /* 0x05d2 */, 500 },
      { 0xe3 /* 0x05d3 */, 611 }, { 0xe4 /* 0x05d4 */, 722 }, { 0xe5 /* 0x05d5 */, 389 }, { 0xe6 /* 0x05d6 */, 278 }, { 0xe7 /* 0x05d7 */, 722 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 611 }, { 0xeb /* 0x05db */, 722 }, { 0xec /* 0x05dc */, 500 },
      { 0xed /* 0x05dd */, 500 }, { 0xee /* 0x05de */, 556 }, { 0xef /* 0x05df */, 278 }, { 0xf0 /* 0x05e0 */, 278 }, { 0xf1 /* 0x05e1 */, 556 },
      { 0xf2 /* 0x05e2 */, 556 }, { 0xf3 /* 0x05e3 */, 500 }, { 0xf4 /* 0x05e4 */, 500 }, { 0xf5 /* 0x05e5 */, 444 }, { 0xf6 /* 0x05e6 */, 444 },
      { 0xf7 /* 0x05e7 */, 500 }, { 0xf8 /* 0x05e8 */, 500 }, { 0xf9 /* 0x05e9 */, 667 }, { 0xfa /* 0x05ea */, 556 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1255_TimesItalic[] = { // Times-Italic
      { 0xa4 /* 0x20aa */, 833 }, { 0xaa /* 0x00d7 */, 675 }, { 0xba /* 0x00f7 */, 675 }, { 0xc0 /* 0x05b0 */, 333 }, { 0xc1 /* 0x05b1 */, 556 },
      { 0xc2 /* 0x05b2 */, 556 }, { 0xc3 /* 0x05b3 */, 556 }, { 0xc4 /* 0x05b4 */, 333 }, { 0xc5 /* 0x05b5 */, 400 }, { 0xc6 /* 0x05b6 */, 400 },
      { 0xc7 /* 0x05b7 */, 400 }, { 0xc8 /* 0x05b8 */, 400 }, { 0xc9 /* 0x05b9 */, 333 }, { 0xcb /* 0x05bb */, 556 }, { 0xcc /* 0x05bc */, 333 },
      { 0xcd /* 0x05bd */, 333 }, { 0xce /* 0x05be */, 500 }, { 0xcf /* 0x05bf */, 400 }, { 0xd0 /* 0x05c0 */, 389 }, { 0xd1 /* 0x05c1 */, 333 },
      { 0xd2 /* 0x05c2 */, 333 }, { 0xd3 /* 0x05c3 */, 333 }, { 0xd4 /* 0x05f0 */, 833 }, { 0xd5 /* 0x05f1 */, 833 }, { 0xd6 /* 0x05f2 */, 833 },
      { 0xd7 /* 0x05f3 */, 333 }, { 0xd8 /* 0x05f4 */, 556 }, { 0xe0 /* 0x05d0 */, 667 }, { 0xe1 /* 0x05d1 */, 556 }, { 0xe2 /* 0x05d2 */, 444 },
      { 0xe3 /* 0x05d3 */, 556 }, { 0xe4 /* 0x05d4 */, 667 }, { 0xe5 /* 0x05d5 */, 333 }, { 0xe6 /* 0x05d6 */, 278 }, { 0xe7 /* 0x05d7 */, 667 },
      { 0xe8 /* 0x05d8 */, 722 }, { 0xe9 /* 0x05d9 */, 400 }, { 0xea /* 0x05da */, 556 }, { 0xeb /* 0x05db */, 722 }, { 0xec /* 0x05dc */, 444 },
      { 0xed /* 0x05dd */, 500 }, { 0xee /* 0x05de */, 500 }, { 0xef /* 0x05df */, 278 }, { 0xf0 /* 0x05e0 */, 278 }, { 0xf1 /* 0x05e1 */, 500 },
      { 0xf2 /* 0x05e2 */, 500 }, { 0xf3 /* 0x05e3 */, 500 }, { 0xf4 /* 0x05e4 */, 500 }, { 0xf5 /* 0x05e5 */, 444 }, { 0xf6 /* 0x05e6 */, 444 },
      { 0xf7 /* 0x05e7 */, 500 }, { 0xf8 /* 0x05e8 */, 500 }, { 0xf9 /* 0x05e9 */, 667 }, { 0xfa /* 0x05ea */, 500 }, { 0xfd /* 0x200e */, 0 },
      { 0xfe /* 0x200f */, 0 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1256_Helvetica[] = { // Helvetica
      { 0x81 /* 0x067e */, 722 }, { 0x8a /* 0x0679 */, 722 }, { 0x8d /* 0x0686 */, 500 }, { 0x8e /* 0x0698 */, 500 }, { 0x8f /* 0x0688 */, 556 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 556 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 278 }, { 0xaa /* 0x06be */, 556 }, { 0xba /* 0x061b */, 278 }, { 0xbf /* 0x061f */, 556 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 222 }, { 0xc3 /* 0x0623 */, 222 }, { 0xc4 /* 0x0624 */, 222 },
      { 0xc5 /* 0x0625 */, 222 }, { 0xc6 /* 0x0626 */, 722 }, { 0xc7 /* 0x0627 */, 500 }, { 0xc8 /* 0x0628 */, 722 }, { 0xc9 /* 0x0629 */, 222 },
      { 0xca /* 0x062a */, 722 }, { 0xcb /* 0x062b */, 722 }, { 0xcc /* 0x062c */, 500 }, { 0xcd /* 0x062d */, 500 }, { 0xce /* 0x062e */, 500 },
      { 0xcf /* 0x062f */, 222 }, { 0xd0 /* 0x0630 */, 556 }, { 0xd1 /* 0x0631 */, 833 }, { 0xd2 /* 0x0632 */, 833 }, { 0xd3 /* 0x0633 */, 722 },
      { 0xd4 /* 0x0634 */, 722 }, { 0xd5 /* 0x0635 */, 722 }, { 0xd6 /* 0x0636 */, 722 }, { 0xd8 /* 0x0637 */, 556 }, { 0xd9 /* 0x0638 */, 556 },
      { 0xda /* 0x0639 */, 556 }, { 0xdb /* 0x063a */, 556 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 722 }, { 0xde /* 0x0642 */, 556 },
      { 0xdf /* 0x0643 */, 556 }, { 0xe1 /* 0x0644 */, 500 }, { 0xe3 /* 0x0645 */, 556 }, { 0xe4 /* 0x0646 */, 556 }, { 0xe5 /* 0x0647 */, 222 },
      { 0xe6 /* 0x0648 */, 222 }, { 0xec /* 0x0649 */, 556 }, { 0xed /* 0x064a */, 556 }, { 0xf0 /* 0x064b */, 333 }, { 0xf1 /* 0x064c */, 333 },
      { 0xf2 /* 0x064d */, 584 }, { 0xf3 /* 0x064e */, 333 }, { 0xf5 /* 0x064f */, 333 }, { 0xf6 /* 0x0650 */, 584 }, { 0xf8 /* 0x0651 */, 333 },
      { 0xfa /* 0x0652 */, 333 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1256_HelveticaBold[] = { // Helvetica-Bold
      { 0x81 /* 0x067e */, 778 }, { 0x8a /* 0x0679 */, 778 }, { 0x8d /* 0x0686 */, 556 }, { 0x8e /* 0x0698 */, 556 }, { 0x8f /* 0x0688 */, 611 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 611 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 278 }, { 0xaa /* 0x06be */, 556 }, { 0xba /* 0x061b */, 333 }, { 0xbf /* 0x061f */, 611 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 278 }, { 0xc3 /* 0x0623 */, 278 }, { 0xc4 /* 0x0624 */, 278 },
      { 0xc5 /* 0x0625 */, 278 }, { 0xc6 /* 0x0626 */, 778 }, { 0xc7 /* 0x0627 */, 556 }, { 0xc8 /* 0x0628 */, 778 }, { 0xc9 /* 0x0629 */, 278 },
      { 0xca /* 0x062a */, 778 }, { 0xcb /* 0x062b */, 778 }, { 0xcc /* 0x062c */, 556 }, { 0xcd /* 0x062d */, 556 }, { 0xce /* 0x062e */, 556 },
      { 0xcf /* 0x062f */, 278 }, { 0xd0 /* 0x0630 */, 611 }, { 0xd1 /* 0x0631 */, 889 }, { 0xd2 /* 0x0632 */, 889 }, { 0xd3 /* 0x0633 */, 778 },
      { 0xd4 /* 0x0634 */, 778 }, { 0xd5 /* 0x0635 */, 778 }, { 0xd6 /* 0x0636 */, 778 }, { 0xd8 /* 0x0637 */, 611 }, { 0xd9 /* 0x0638 */, 611 },
      { 0xda /* 0x0639 */, 556 }, { 0xdb /* 0x063a */, 556 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 778 }, { 0xde /* 0x0642 */, 611 },
      { 0xdf /* 0x0643 */, 611 }, { 0xe1 /* 0x0644 */, 556 }, { 0xe3 /* 0x0645 */, 611 }, { 0xe4 /* 0x0646 */, 611 }, { 0xe5 /* 0x0647 */, 278 },
      { 0xe6 /* 0x0648 */, 278 }, { 0xec /* 0x0649 */, 611 }, { 0xed /* 0x064a */, 611 }, { 0xf0 /* 0x064b */, 500 }, { 0xf1 /* 0x064c */, 500 },
      { 0xf2 /* 0x064d */, 584 }, { 0xf3 /* 0x064e */, 500 }, { 0xf5 /* 0x064f */, 500 }, { 0xf6 /* 0x0650 */, 584 }, { 0xf8 /* 0x0651 */, 500 },
      { 0xfa /* 0x0652 */, 500 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1256_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0x81 /* 0x067e */, 778 }, { 0x8a /* 0x0679 */, 778 }, { 0x8d /* 0x0686 */, 556 }, { 0x8e /* 0x0698 */, 556 }, { 0x8f /* 0x0688 */, 611 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 611 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 278 }, { 0xaa /* 0x06be */, 556 }, { 0xba /* 0x061b */, 333 }, { 0xbf /* 0x061f */, 611 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 278 }, { 0xc3 /* 0x0623 */, 278 }, { 0xc4 /* 0x0624 */, 278 },
      { 0xc5 /* 0x0625 */, 278 }, { 0xc6 /* 0x0626 */, 778 }, { 0xc7 /* 0x0627 */, 556 }, { 0xc8 /* 0x0628 */, 778 }, { 0xc9 /* 0x0629 */, 278 },
      { 0xca /* 0x062a */, 778 }, { 0xcb /* 0x062b */, 778 }, { 0xcc /* 0x062c */, 556 }, { 0xcd /* 0x062d */, 556 }, { 0xce /* 0x062e */, 556 },
      { 0xcf /* 0x062f */, 278 }, { 0xd0 /* 0x0630 */, 611 }, { 0xd1 /* 0x0631 */, 889 }, { 0xd2 /* 0x0632 */, 889 }, { 0xd3 /* 0x0633 */, 778 },
      { 0xd4 /* 0x0634 */, 778 }, { 0xd5 /* 0x0635 */, 778 }, { 0xd6 /* 0x0636 */, 778 }, { 0xd8 /* 0x0637 */, 611 }, { 0xd9 /* 0x0638 */, 611 },
      { 0xda /* 0x0639 */, 556 }, { 0xdb /* 0x063a */, 556 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 778 }, { 0xde /* 0x0642 */, 611 },
      { 0xdf /* 0x0643 */, 611 }, { 0xe1 /* 0x0644 */, 556 }, { 0xe3 /* 0x0645 */, 611 }, { 0xe4 /* 0x0646 */, 611 }, { 0xe5 /* 0x0647 */, 278 },
      { 0xe6 /* 0x0648 */, 278 }, { 0xec /* 0x0649 */, 611 }, { 0xed /* 0x064a */, 611 }, { 0xf0 /* 0x064b */, 500 }, { 0xf1 /* 0x064c */, 500 },
      { 0xf2 /* 0x064d */, 584 }, { 0xf3 /* 0x064e */, 500 }, { 0xf5 /* 0x064f */, 500 }, { 0xf6 /* 0x0650 */, 584 }, { 0xf8 /* 0x0651 */, 500 },
      { 0xfa /* 0x0652 */, 500 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1256_HelveticaOblique[] = { // Helvetica-Oblique
      { 0x81 /* 0x067e */, 722 }, { 0x8a /* 0x0679 */, 722 }, { 0x8d /* 0x0686 */, 500 }, { 0x8e /* 0x0698 */, 500 }, { 0x8f /* 0x0688 */, 556 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 556 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 278 }, { 0xaa /* 0x06be */, 556 }, { 0xba /* 0x061b */, 278 }, { 0xbf /* 0x061f */, 556 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 222 }, { 0xc3 /* 0x0623 */, 222 }, { 0xc4 /* 0x0624 */, 222 },
      { 0xc5 /* 0x0625 */, 222 }, { 0xc6 /* 0x0626 */, 722 }, { 0xc7 /* 0x0627 */, 500 }, { 0xc8 /* 0x0628 */, 722 }, { 0xc9 /* 0x0629 */, 222 },
      { 0xca /* 0x062a */, 722 }, { 0xcb /* 0x062b */, 722 }, { 0xcc /* 0x062c */, 500 }, { 0xcd /* 0x062d */, 500 }, { 0xce /* 0x062e */, 500 },
      { 0xcf /* 0x062f */, 222 }, { 0xd0 /* 0x0630 */, 556 }, { 0xd1 /* 0x0631 */, 833 }, { 0xd2 /* 0x0632 */, 833 }, { 0xd3 /* 0x0633 */, 722 },
      { 0xd4 /* 0x0634 */, 722 }, { 0xd5 /* 0x0635 */, 722 }, { 0xd6 /* 0x0636 */, 722 }, { 0xd8 /* 0x0637 */, 556 }, { 0xd9 /* 0x0638 */, 556 },
      { 0xda /* 0x0639 */, 556 }, { 0xdb /* 0x063a */, 556 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 722 }, { 0xde /* 0x0642 */, 556 },
      { 0xdf /* 0x0643 */, 556 }, { 0xe1 /* 0x0644 */, 500 }, { 0xe3 /* 0x0645 */, 556 }, { 0xe4 /* 0x0646 */, 556 }, { 0xe5 /* 0x0647 */, 222 },
      { 0xe6 /* 0x0648 */, 222 }, { 0xec /* 0x0649 */, 556 }, { 0xed /* 0x064a */, 556 }, { 0xf0 /* 0x064b */, 333 }, { 0xf1 /* 0x064c */, 333 },
      { 0xf2 /* 0x064d */, 584 }, { 0xf3 /* 0x064e */, 333 }, { 0xf5 /* 0x064f */, 333 }, { 0xf6 /* 0x0650 */, 584 }, { 0xf8 /* 0x0651 */, 333 },
      { 0xfa /* 0x0652 */, 333 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1256_TimesRoman[] = { // Times-Roman
      { 0x81 /* 0x067e */, 722 }, { 0x8a /* 0x0679 */, 722 }, { 0x8d /* 0x0686 */, 444 }, { 0x8e /* 0x0698 */, 389 }, { 0x8f /* 0x0688 */, 444 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 444 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 250 }, { 0xaa /* 0x06be */, 500 }, { 0xba /* 0x061b */, 278 }, { 0xbf /* 0x061f */, 444 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 278 }, { 0xc3 /* 0x0623 */, 278 }, { 0xc4 /* 0x0624 */, 278 },
      { 0xc5 /* 0x0625 */, 278 }, { 0xc6 /* 0x0626 */, 722 }, { 0xc7 /* 0x0627 */, 500 }, { 0xc8 /* 0x0628 */, 722 }, { 0xc9 /* 0x0629 */, 278 },
      { 0xca /* 0x062a */, 722 }, { 0xcb /* 0x062b */, 722 }, { 0xcc /* 0x062c */, 444 }, { 0xcd /* 0x062d */, 444 }, { 0xce /* 0x062e */, 444 },
      { 0xcf /* 0x062f */, 278 }, { 0xd0 /* 0x0630 */, 444 }, { 0xd1 /* 0x0631 */, 778 }, { 0xd2 /* 0x0632 */, 778 }, { 0xd3 /* 0x0633 */, 722 },
      { 0xd4 /* 0x0634 */, 722 }, { 0xd5 /* 0x0635 */, 722 }, { 0xd6 /* 0x0636 */, 722 }, { 0xd8 /* 0x0637 */, 500 }, { 0xd9 /* 0x0638 */, 500 },
      { 0xda /* 0x0639 */, 500 }, { 0xdb /* 0x063a */, 500 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 722 }, { 0xde /* 0x0642 */, 500 },
      { 0xdf /* 0x0643 */, 500 }, { 0xe1 /* 0x0644 */, 389 }, { 0xe3 /* 0x0645 */, 500 }, { 0xe4 /* 0x0646 */, 500 }, { 0xe5 /* 0x0647 */, 278 },
      { 0xe6 /* 0x0648 */, 278 }, { 0xec /* 0x0649 */, 500 }, { 0xed /* 0x064a */, 500 }, { 0xf0 /* 0x064b */, 444 }, { 0xf1 /* 0x064c */, 444 },
      { 0xf2 /* 0x064d */, 564 }, { 0xf3 /* 0x064e */, 444 }, { 0xf5 /* 0x064f */, 444 }, { 0xf6 /* 0x0650 */, 564 }, { 0xf8 /* 0x0651 */, 444 },
      { 0xfa /* 0x0652 */, 444 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1256_TimesBold[] = { // Times-Bold
      { 0x81 /* 0x067e */, 722 }, { 0x8a /* 0x0679 */, 722 }, { 0x8d /* 0x0686 */, 444 }, { 0x8e /* 0x0698 */, 500 }, { 0x8f /* 0x0688 */, 500 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 500 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 250 }, { 0xaa /* 0x06be */, 500 }, { 0xba /* 0x061b */, 333 }, { 0xbf /* 0x061f */, 500 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 278 }, { 0xc3 /* 0x0623 */, 278 }, { 0xc4 /* 0x0624 */, 333 },
      { 0xc5 /* 0x0625 */, 278 }, { 0xc6 /* 0x0626 */, 722 }, { 0xc7 /* 0x0627 */, 500 }, { 0xc8 /* 0x0628 */, 722 }, { 0xc9 /* 0x0629 */, 278 },
      { 0xca /* 0x062a */, 722 }, { 0xcb /* 0x062b */, 722 }, { 0xcc /* 0x062c */, 444 }, { 0xcd /* 0x062d */, 444 }, { 0xce /* 0x062e */, 444 },
      { 0xcf /* 0x062f */, 278 }, { 0xd0 /* 0x0630 */, 500 }, { 0xd1 /* 0x0631 */, 833 }, { 0xd2 /* 0x0632 */, 833 }, { 0xd3 /* 0x0633 */, 722 },
      { 0xd4 /* 0x0634 */, 722 }, { 0xd5 /* 0x0635 */, 722 }, { 0xd6 /* 0x0636 */, 722 }, { 0xd8 /* 0x0637 */, 556 }, { 0xd9 /* 0x0638 */, 556 },
      { 0xda /* 0x0639 */, 500 }, { 0xdb /* 0x063a */, 500 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 722 }, { 0xde /* 0x0642 */, 556 },
      { 0xdf /* 0x0643 */, 556 }, { 0xe1 /* 0x0644 */, 500 }, { 0xe3 /* 0x0645 */, 556 }, { 0xe4 /* 0x0646 */, 556 }, { 0xe5 /* 0x0647 */, 278 },
      { 0xe6 /* 0x0648 */, 333 }, { 0xec /* 0x0649 */, 500 }, { 0xed /* 0x064a */, 500 }, { 0xf0 /* 0x064b */, 500 }, { 0xf1 /* 0x064c */, 500 },
      { 0xf2 /* 0x064d */, 570 }, { 0xf3 /* 0x064e */, 500 }, { 0xf5 /* 0x064f */, 500 }, { 0xf6 /* 0x0650 */, 570 }, { 0xf8 /* 0x0651 */, 500 },
      { 0xfa /* 0x0652 */, 500 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1256_TimesBoldItalic[] = { // Times-BoldItalic
      { 0x81 /* 0x067e */, 667 }, { 0x8a /* 0x0679 */, 667 }, { 0x8d /* 0x0686 */, 444 }, { 0x8e /* 0x0698 */, 500 }, { 0x8f /* 0x0688 */, 500 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 500 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 250 }, { 0xaa /* 0x06be */, 500 }, { 0xba /* 0x061b */, 333 }, { 0xbf /* 0x061f */, 500 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 278 }, { 0xc3 /* 0x0623 */, 278 }, { 0xc4 /* 0x0624 */, 278 },
      { 0xc5 /* 0x0625 */, 278 }, { 0xc6 /* 0x0626 */, 667 }, { 0xc7 /* 0x0627 */, 500 }, { 0xc8 /* 0x0628 */, 667 }, { 0xc9 /* 0x0629 */, 278 },
      { 0xca /* 0x062a */, 667 }, { 0xcb /* 0x062b */, 667 }, { 0xcc /* 0x062c */, 444 }, { 0xcd /* 0x062d */, 444 }, { 0xce /* 0x062e */, 444 },
      { 0xcf /* 0x062f */, 278 }, { 0xd0 /* 0x0630 */, 500 }, { 0xd1 /* 0x0631 */, 778 }, { 0xd2 /* 0x0632 */, 778 }, { 0xd3 /* 0x0633 */, 667 },
      { 0xd4 /* 0x0634 */, 667 }, { 0xd5 /* 0x0635 */, 667 }, { 0xd6 /* 0x0636 */, 667 }, { 0xd8 /* 0x0637 */, 500 }, { 0xd9 /* 0x0638 */, 500 },
      { 0xda /* 0x0639 */, 500 }, { 0xdb /* 0x063a */, 500 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 667 }, { 0xde /* 0x0642 */, 556 },
      { 0xdf /* 0x0643 */, 556 }, { 0xe1 /* 0x0644 */, 500 }, { 0xe3 /* 0x0645 */, 500 }, { 0xe4 /* 0x0646 */, 556 }, { 0xe5 /* 0x0647 */, 278 },
      { 0xe6 /* 0x0648 */, 278 }, { 0xec /* 0x0649 */, 500 }, { 0xed /* 0x064a */, 500 }, { 0xf0 /* 0x064b */, 500 }, { 0xf1 /* 0x064c */, 500 },
      { 0xf2 /* 0x064d */, 570 }, { 0xf3 /* 0x064e */, 500 }, { 0xf5 /* 0x064f */, 500 }, { 0xf6 /* 0x0650 */, 570 }, { 0xf8 /* 0x0651 */, 500 },
      { 0xfa /* 0x0652 */, 500 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1256_TimesItalic[] = { // Times-Italic
      { 0x81 /* 0x067e */, 667 }, { 0x8a /* 0x0679 */, 667 }, { 0x8d /* 0x0686 */, 444 }, { 0x8e /* 0x0698 */, 444 }, { 0x8f /* 0x0688 */, 500 },
      { 0x90 /* 0x06af */, 722 }, { 0x98 /* 0x06a9 */, 722 }, { 0x9a /* 0x0691 */, 500 }, { 0x9d /* 0x200c */, 0 }, { 0x9e /* 0x200d */, 0 },
      { 0x9f /* 0x06ba */, 722 }, { 0xa1 /* 0x060c */, 250 }, { 0xaa /* 0x06be */, 500 }, { 0xba /* 0x061b */, 333 }, { 0xbf /* 0x061f */, 500 },
      { 0xc0 /* 0x06c1 */, 333 }, { 0xc1 /* 0x0621 */, 400 }, { 0xc2 /* 0x0622 */, 278 }, { 0xc3 /* 0x0623 */, 278 }, { 0xc4 /* 0x0624 */, 278 },
      { 0xc5 /* 0x0625 */, 278 }, { 0xc6 /* 0x0626 */, 667 }, { 0xc7 /* 0x0627 */, 444 }, { 0xc8 /* 0x0628 */, 667 }, { 0xc9 /* 0x0629 */, 278 },
      { 0xca /* 0x062a */, 667 }, { 0xcb /* 0x062b */, 667 }, { 0xcc /* 0x062c */, 444 }, { 0xcd /* 0x062d */, 444 }, { 0xce /* 0x062e */, 444 },
      { 0xcf /* 0x062f */, 278 }, { 0xd0 /* 0x0630 */, 500 }, { 0xd1 /* 0x0631 */, 722 }, { 0xd2 /* 0x0632 */, 722 }, { 0xd3 /* 0x0633 */, 667 },
      { 0xd4 /* 0x0634 */, 667 }, { 0xd5 /* 0x0635 */, 667 }, { 0xd6 /* 0x0636 */, 667 }, { 0xd8 /* 0x0637 */, 500 }, { 0xd9 /* 0x0638 */, 500 },
      { 0xda /* 0x0639 */, 500 }, { 0xdb /* 0x063a */, 500 }, { 0xdc /* 0x0640 */, 333 }, { 0xdd /* 0x0641 */, 667 }, { 0xde /* 0x0642 */, 500 },
      { 0xdf /* 0x0643 */, 500 }, { 0xe1 /* 0x0644 */, 444 }, { 0xe3 /* 0x0645 */, 500 }, { 0xe4 /* 0x0646 */, 500 }, { 0xe5 /* 0x0647 */, 278 },
      { 0xe6 /* 0x0648 */, 278 }, { 0xec /* 0x0649 */, 500 }, { 0xed /* 0x064a */, 500 }, { 0xf0 /* 0x064b */, 556 }, { 0xf1 /* 0x064c */, 556 },
      { 0xf2 /* 0x064d */, 675 }, { 0xf3 /* 0x064e */, 556 }, { 0xf5 /* 0x064f */, 556 }, { 0xf6 /* 0x0650 */, 675 }, { 0xf8 /* 0x0651 */, 556 },
      { 0xfa /* 0x0652 */, 556 }, { 0xfd /* 0x200e */, 0 }, { 0xfe /* 0x200f */, 0 }, { 0xff /* 0x06d2 */, 333 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1257_Helvetica[] = { // Helvetica
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 778 }, { 0xaa /* 0x0156 */, 722 }, { 0xaf /* 0x00c6 */, 1000 }, { 0xb8 /* 0x00f8 */, 611 }, { 0xba /* 0x0157 */, 333 },
      { 0xbf /* 0x00e6 */, 889 }, { 0xc0 /* 0x0104 */, 667 }, { 0xc1 /* 0x012e */, 278 }, { 0xc2 /* 0x0100 */, 667 }, { 0xc3 /* 0x0106 */, 722 },
      { 0xc6 /* 0x0118 */, 667 }, { 0xc7 /* 0x0112 */, 667 }, { 0xc8 /* 0x010c */, 722 }, { 0xca /* 0x0179 */, 611 }, { 0xcb /* 0x0116 */, 667 },
      { 0xcc /* 0x0122 */, 778 }, { 0xcd /* 0x0136 */, 667 }, { 0xce /* 0x012a */, 278 }, { 0xcf /* 0x013b */, 556 }, { 0xd0 /* 0x0160 */, 667 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 778 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 556 },
      { 0xda /* 0x015a */, 667 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 611 }, { 0xde /* 0x017d */, 611 }, { 0xe0 /* 0x0105 */, 556 },
      { 0xe1 /* 0x012f */, 222 }, { 0xe2 /* 0x0101 */, 556 }, { 0xe3 /* 0x0107 */, 500 }, { 0xe6 /* 0x0119 */, 556 }, { 0xe7 /* 0x0113 */, 556 },
      { 0xe8 /* 0x010d */, 500 }, { 0xea /* 0x017a */, 500 }, { 0xeb /* 0x0117 */, 556 }, { 0xec /* 0x0123 */, 556 }, { 0xed /* 0x0137 */, 500 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 222 }, { 0xf0 /* 0x0161 */, 500 }, { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0146 */, 556 },
      { 0xf4 /* 0x014d */, 556 }, { 0xf8 /* 0x0173 */, 556 }, { 0xf9 /* 0x0142 */, 222 }, { 0xfa /* 0x015b */, 500 }, { 0xfb /* 0x016b */, 556 },
      { 0xfd /* 0x017c */, 500 }, { 0xfe /* 0x017e */, 500 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1257_HelveticaBold[] = { // Helvetica-Bold
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 778 }, { 0xaa /* 0x0156 */, 722 }, { 0xaf /* 0x00c6 */, 1000 }, { 0xb8 /* 0x00f8 */, 611 }, { 0xba /* 0x0157 */, 389 },
      { 0xbf /* 0x00e6 */, 889 }, { 0xc0 /* 0x0104 */, 722 }, { 0xc1 /* 0x012e */, 278 }, { 0xc2 /* 0x0100 */, 722 }, { 0xc3 /* 0x0106 */, 722 },
      { 0xc6 /* 0x0118 */, 667 }, { 0xc7 /* 0x0112 */, 667 }, { 0xc8 /* 0x010c */, 722 }, { 0xca /* 0x0179 */, 611 }, { 0xcb /* 0x0116 */, 667 },
      { 0xcc /* 0x0122 */, 778 }, { 0xcd /* 0x0136 */, 722 }, { 0xce /* 0x012a */, 278 }, { 0xcf /* 0x013b */, 611 }, { 0xd0 /* 0x0160 */, 667 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 778 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 611 },
      { 0xda /* 0x015a */, 667 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 611 }, { 0xde /* 0x017d */, 611 }, { 0xe0 /* 0x0105 */, 556 },
      { 0xe1 /* 0x012f */, 278 }, { 0xe2 /* 0x0101 */, 556 }, { 0xe3 /* 0x0107 */, 556 }, { 0xe6 /* 0x0119 */, 556 }, { 0xe7 /* 0x0113 */, 556 },
      { 0xe8 /* 0x010d */, 556 }, { 0xea /* 0x017a */, 500 }, { 0xeb /* 0x0117 */, 556 }, { 0xec /* 0x0123 */, 611 }, { 0xed /* 0x0137 */, 556 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 278 }, { 0xf0 /* 0x0161 */, 556 }, { 0xf1 /* 0x0144 */, 611 }, { 0xf2 /* 0x0146 */, 611 },
      { 0xf4 /* 0x014d */, 611 }, { 0xf8 /* 0x0173 */, 611 }, { 0xf9 /* 0x0142 */, 278 }, { 0xfa /* 0x015b */, 556 }, { 0xfb /* 0x016b */, 611 },
      { 0xfd /* 0x017c */, 500 }, { 0xfe /* 0x017e */, 500 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1257_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 778 }, { 0xaa /* 0x0156 */, 722 }, { 0xaf /* 0x00c6 */, 1000 }, { 0xb8 /* 0x00f8 */, 611 }, { 0xba /* 0x0157 */, 389 },
      { 0xbf /* 0x00e6 */, 889 }, { 0xc0 /* 0x0104 */, 722 }, { 0xc1 /* 0x012e */, 278 }, { 0xc2 /* 0x0100 */, 722 }, { 0xc3 /* 0x0106 */, 722 },
      { 0xc6 /* 0x0118 */, 667 }, { 0xc7 /* 0x0112 */, 667 }, { 0xc8 /* 0x010c */, 722 }, { 0xca /* 0x0179 */, 611 }, { 0xcb /* 0x0116 */, 667 },
      { 0xcc /* 0x0122 */, 778 }, { 0xcd /* 0x0136 */, 722 }, { 0xce /* 0x012a */, 278 }, { 0xcf /* 0x013b */, 611 }, { 0xd0 /* 0x0160 */, 667 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 778 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 611 },
      { 0xda /* 0x015a */, 667 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 611 }, { 0xde /* 0x017d */, 611 }, { 0xe0 /* 0x0105 */, 556 },
      { 0xe1 /* 0x012f */, 278 }, { 0xe2 /* 0x0101 */, 556 }, { 0xe3 /* 0x0107 */, 556 }, { 0xe6 /* 0x0119 */, 556 }, { 0xe7 /* 0x0113 */, 556 },
      { 0xe8 /* 0x010d */, 556 }, { 0xea /* 0x017a */, 500 }, { 0xeb /* 0x0117 */, 556 }, { 0xec /* 0x0123 */, 611 }, { 0xed /* 0x0137 */, 556 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 278 }, { 0xf0 /* 0x0161 */, 556 }, { 0xf1 /* 0x0144 */, 611 }, { 0xf2 /* 0x0146 */, 611 },
      { 0xf4 /* 0x014d */, 611 }, { 0xf8 /* 0x0173 */, 611 }, { 0xf9 /* 0x0142 */, 278 }, { 0xfa /* 0x015b */, 556 }, { 0xfb /* 0x016b */, 611 },
      { 0xfd /* 0x017c */, 500 }, { 0xfe /* 0x017e */, 500 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1257_HelveticaOblique[] = { // Helvetica-Oblique
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 778 }, { 0xaa /* 0x0156 */, 722 }, { 0xaf /* 0x00c6 */, 1000 }, { 0xb8 /* 0x00f8 */, 611 }, { 0xba /* 0x0157 */, 333 },
      { 0xbf /* 0x00e6 */, 889 }, { 0xc0 /* 0x0104 */, 667 }, { 0xc1 /* 0x012e */, 278 }, { 0xc2 /* 0x0100 */, 667 }, { 0xc3 /* 0x0106 */, 722 },
      { 0xc6 /* 0x0118 */, 667 }, { 0xc7 /* 0x0112 */, 667 }, { 0xc8 /* 0x010c */, 722 }, { 0xca /* 0x0179 */, 611 }, { 0xcb /* 0x0116 */, 667 },
      { 0xcc /* 0x0122 */, 778 }, { 0xcd /* 0x0136 */, 667 }, { 0xce /* 0x012a */, 278 }, { 0xcf /* 0x013b */, 556 }, { 0xd0 /* 0x0160 */, 667 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 778 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 556 },
      { 0xda /* 0x015a */, 667 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 611 }, { 0xde /* 0x017d */, 611 }, { 0xe0 /* 0x0105 */, 556 },
      { 0xe1 /* 0x012f */, 222 }, { 0xe2 /* 0x0101 */, 556 }, { 0xe3 /* 0x0107 */, 500 }, { 0xe6 /* 0x0119 */, 556 }, { 0xe7 /* 0x0113 */, 556 },
      { 0xe8 /* 0x010d */, 500 }, { 0xea /* 0x017a */, 500 }, { 0xeb /* 0x0117 */, 556 }, { 0xec /* 0x0123 */, 556 }, { 0xed /* 0x0137 */, 500 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 222 }, { 0xf0 /* 0x0161 */, 500 }, { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0146 */, 556 },
      { 0xf4 /* 0x014d */, 556 }, { 0xf8 /* 0x0173 */, 556 }, { 0xf9 /* 0x0142 */, 222 }, { 0xfa /* 0x015b */, 500 }, { 0xfb /* 0x016b */, 556 },
      { 0xfd /* 0x017c */, 500 }, { 0xfe /* 0x017e */, 500 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1257_TimesRoman[] = { // Times-Roman
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 722 }, { 0xaa /* 0x0156 */, 667 }, { 0xaf /* 0x00c6 */, 889 }, { 0xb8 /* 0x00f8 */, 500 }, { 0xba /* 0x0157 */, 333 },
      { 0xbf /* 0x00e6 */, 667 }, { 0xc0 /* 0x0104 */, 722 }, { 0xc1 /* 0x012e */, 333 }, { 0xc2 /* 0x0100 */, 722 }, { 0xc3 /* 0x0106 */, 667 },
      { 0xc6 /* 0x0118 */, 611 }, { 0xc7 /* 0x0112 */, 611 }, { 0xc8 /* 0x010c */, 667 }, { 0xca /* 0x0179 */, 611 }, { 0xcb /* 0x0116 */, 611 },
      { 0xcc /* 0x0122 */, 722 }, { 0xcd /* 0x0136 */, 722 }, { 0xce /* 0x012a */, 333 }, { 0xcf /* 0x013b */, 611 }, { 0xd0 /* 0x0160 */, 556 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 722 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 611 },
      { 0xda /* 0x015a */, 556 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 611 }, { 0xde /* 0x017d */, 611 }, { 0xe0 /* 0x0105 */, 444 },
      { 0xe1 /* 0x012f */, 278 }, { 0xe2 /* 0x0101 */, 444 }, { 0xe3 /* 0x0107 */, 444 }, { 0xe6 /* 0x0119 */, 444 }, { 0xe7 /* 0x0113 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x017a */, 444 }, { 0xeb /* 0x0117 */, 444 }, { 0xec /* 0x0123 */, 500 }, { 0xed /* 0x0137 */, 500 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 278 }, { 0xf0 /* 0x0161 */, 389 }, { 0xf1 /* 0x0144 */, 500 }, { 0xf2 /* 0x0146 */, 500 },
      { 0xf4 /* 0x014d */, 500 }, { 0xf8 /* 0x0173 */, 500 }, { 0xf9 /* 0x0142 */, 278 }, { 0xfa /* 0x015b */, 389 }, { 0xfb /* 0x016b */, 500 },
      { 0xfd /* 0x017c */, 444 }, { 0xfe /* 0x017e */, 444 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1257_TimesBold[] = { // Times-Bold
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 778 }, { 0xaa /* 0x0156 */, 722 }, { 0xaf /* 0x00c6 */, 1000 }, { 0xb8 /* 0x00f8 */, 500 }, { 0xba /* 0x0157 */, 444 },
      { 0xbf /* 0x00e6 */, 722 }, { 0xc0 /* 0x0104 */, 722 }, { 0xc1 /* 0x012e */, 389 }, { 0xc2 /* 0x0100 */, 722 }, { 0xc3 /* 0x0106 */, 722 },
      { 0xc6 /* 0x0118 */, 667 }, { 0xc7 /* 0x0112 */, 667 }, { 0xc8 /* 0x010c */, 722 }, { 0xca /* 0x0179 */, 667 }, { 0xcb /* 0x0116 */, 667 },
      { 0xcc /* 0x0122 */, 778 }, { 0xcd /* 0x0136 */, 778 }, { 0xce /* 0x012a */, 389 }, { 0xcf /* 0x013b */, 667 }, { 0xd0 /* 0x0160 */, 556 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 778 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 667 },
      { 0xda /* 0x015a */, 556 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 667 }, { 0xde /* 0x017d */, 667 }, { 0xe0 /* 0x0105 */, 500 },
      { 0xe1 /* 0x012f */, 278 }, { 0xe2 /* 0x0101 */, 500 }, { 0xe3 /* 0x0107 */, 444 }, { 0xe6 /* 0x0119 */, 444 }, { 0xe7 /* 0x0113 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x017a */, 444 }, { 0xeb /* 0x0117 */, 444 }, { 0xec /* 0x0123 */, 500 }, { 0xed /* 0x0137 */, 556 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 278 }, { 0xf0 /* 0x0161 */, 389 }, { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0146 */, 556 },
      { 0xf4 /* 0x014d */, 500 }, { 0xf8 /* 0x0173 */, 556 }, { 0xf9 /* 0x0142 */, 278 }, { 0xfa /* 0x015b */, 389 }, { 0xfb /* 0x016b */, 556 },
      { 0xfd /* 0x017c */, 444 }, { 0xfe /* 0x017e */, 444 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1257_TimesBoldItalic[] = { // Times-BoldItalic
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 722 }, { 0xaa /* 0x0156 */, 667 }, { 0xaf /* 0x00c6 */, 944 }, { 0xb8 /* 0x00f8 */, 500 }, { 0xba /* 0x0157 */, 389 },
      { 0xbf /* 0x00e6 */, 722 }, { 0xc0 /* 0x0104 */, 667 }, { 0xc1 /* 0x012e */, 389 }, { 0xc2 /* 0x0100 */, 667 }, { 0xc3 /* 0x0106 */, 667 },
      { 0xc6 /* 0x0118 */, 667 }, { 0xc7 /* 0x0112 */, 667 }, { 0xc8 /* 0x010c */, 667 }, { 0xca /* 0x0179 */, 611 }, { 0xcb /* 0x0116 */, 667 },
      { 0xcc /* 0x0122 */, 722 }, { 0xcd /* 0x0136 */, 667 }, { 0xce /* 0x012a */, 389 }, { 0xcf /* 0x013b */, 611 }, { 0xd0 /* 0x0160 */, 556 },
      { 0xd1 /* 0x0143 */, 722 }, { 0xd2 /* 0x0145 */, 722 }, { 0xd4 /* 0x014c */, 722 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 611 },
      { 0xda /* 0x015a */, 556 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 611 }, { 0xde /* 0x017d */, 611 }, { 0xe0 /* 0x0105 */, 500 },
      { 0xe1 /* 0x012f */, 278 }, { 0xe2 /* 0x0101 */, 500 }, { 0xe3 /* 0x0107 */, 444 }, { 0xe6 /* 0x0119 */, 444 }, { 0xe7 /* 0x0113 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x017a */, 389 }, { 0xeb /* 0x0117 */, 444 }, { 0xec /* 0x0123 */, 500 }, { 0xed /* 0x0137 */, 500 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 278 }, { 0xf0 /* 0x0161 */, 389 }, { 0xf1 /* 0x0144 */, 556 }, { 0xf2 /* 0x0146 */, 556 },
      { 0xf4 /* 0x014d */, 500 }, { 0xf8 /* 0x0173 */, 556 }, { 0xf9 /* 0x0142 */, 278 }, { 0xfa /* 0x015b */, 389 }, { 0xfb /* 0x016b */, 556 },
      { 0xfd /* 0x017c */, 389 }, { 0xfe /* 0x017e */, 389 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1257_TimesItalic[] = { // Times-Italic
      { 0x8d /* 0x00a8 */, 333 }, { 0x8e /* 0x02c7 */, 333 }, { 0x8f /* 0x00b8 */, 333 }, { 0x9d /* 0x00af */, 333 }, { 0x9e /* 0x02db */, 333 },
      { 0xa8 /* 0x00d8 */, 722 }, { 0xaa /* 0x0156 */, 611 }, { 0xaf /* 0x00c6 */, 889 }, { 0xb8 /* 0x00f8 */, 500 }, { 0xba /* 0x0157 */, 389 },
      { 0xbf /* 0x00e6 */, 667 }, { 0xc0 /* 0x0104 */, 611 }, { 0xc1 /* 0x012e */, 333 }, { 0xc2 /* 0x0100 */, 611 }, { 0xc3 /* 0x0106 */, 667 },
      { 0xc6 /* 0x0118 */, 611 }, { 0xc7 /* 0x0112 */, 611 }, { 0xc8 /* 0x010c */, 667 }, { 0xca /* 0x0179 */, 556 }, { 0xcb /* 0x0116 */, 611 },
      { 0xcc /* 0x0122 */, 722 }, { 0xcd /* 0x0136 */, 667 }, { 0xce /* 0x012a */, 333 }, { 0xcf /* 0x013b */, 556 }, { 0xd0 /* 0x0160 */, 500 },
      { 0xd1 /* 0x0143 */, 667 }, { 0xd2 /* 0x0145 */, 667 }, { 0xd4 /* 0x014c */, 722 }, { 0xd8 /* 0x0172 */, 722 }, { 0xd9 /* 0x0141 */, 556 },
      { 0xda /* 0x015a */, 500 }, { 0xdb /* 0x016a */, 722 }, { 0xdd /* 0x017b */, 556 }, { 0xde /* 0x017d */, 556 }, { 0xe0 /* 0x0105 */, 500 },
      { 0xe1 /* 0x012f */, 278 }, { 0xe2 /* 0x0101 */, 500 }, { 0xe3 /* 0x0107 */, 444 }, { 0xe6 /* 0x0119 */, 444 }, { 0xe7 /* 0x0113 */, 444 },
      { 0xe8 /* 0x010d */, 444 }, { 0xea /* 0x017a */, 389 }, { 0xeb /* 0x0117 */, 444 }, { 0xec /* 0x0123 */, 500 }, { 0xed /* 0x0137 */, 444 },
      { 0xee /* 0x012b */, 278 }, { 0xef /* 0x013c */, 278 }, { 0xf0 /* 0x0161 */, 389 }, { 0xf1 /* 0x0144 */, 500 }, { 0xf2 /* 0x0146 */, 500 },
      { 0xf4 /* 0x014d */, 500 }, { 0xf8 /* 0x0173 */, 500 }, { 0xf9 /* 0x0142 */, 278 }, { 0xfa /* 0x015b */, 389 }, { 0xfb /* 0x016b */, 500 },
      { 0xfd /* 0x017c */, 389 }, { 0xfe /* 0x017e */, 389 }, { 0xff /* 0x02d9 */, 333 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp1258_Helvetica[] = { // Helvetica
      { 0xc3 /* 0x0102 */, 667 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 778 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 355 }, { 0xe3 /* 0x0103 */, 556 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 556 },
      { 0xf2 /* 0x0323 */, 278 }, { 0xf5 /* 0x01a1 */, 556 }, { 0xfd /* 0x01b0 */, 556 }, { 0xfe /* 0x20ab */, 333 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp1258_HelveticaBold[] = { // Helvetica-Bold
      { 0xc3 /* 0x0102 */, 722 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 778 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 474 }, { 0xe3 /* 0x0103 */, 556 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 611 },
      { 0xf2 /* 0x0323 */, 278 }, { 0xf5 /* 0x01a1 */, 611 }, { 0xfd /* 0x01b0 */, 611 }, { 0xfe /* 0x20ab */, 389 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp1258_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0xc3 /* 0x0102 */, 722 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 778 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 474 }, { 0xe3 /* 0x0103 */, 556 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 611 },
      { 0xf2 /* 0x0323 */, 278 }, { 0xf5 /* 0x01a1 */, 611 }, { 0xfd /* 0x01b0 */, 611 }, { 0xfe /* 0x20ab */, 389 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp1258_HelveticaOblique[] = { // Helvetica-Oblique
      { 0xc3 /* 0x0102 */, 667 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 778 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 355 }, { 0xe3 /* 0x0103 */, 556 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 556 },
      { 0xf2 /* 0x0323 */, 278 }, { 0xf5 /* 0x01a1 */, 556 }, { 0xfd /* 0x01b0 */, 556 }, { 0xfe /* 0x20ab */, 333 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp1258_TimesRoman[] = { // Times-Roman
      { 0xc3 /* 0x0102 */, 722 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 722 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 408 }, { 0xe3 /* 0x0103 */, 444 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 500 },
      { 0xf2 /* 0x0323 */, 250 }, { 0xf5 /* 0x01a1 */, 500 }, { 0xfd /* 0x01b0 */, 500 }, { 0xfe /* 0x20ab */, 333 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp1258_TimesBold[] = { // Times-Bold
      { 0xc3 /* 0x0102 */, 722 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 778 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 555 }, { 0xe3 /* 0x0103 */, 500 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 556 },
      { 0xf2 /* 0x0323 */, 250 }, { 0xf5 /* 0x01a1 */, 500 }, { 0xfd /* 0x01b0 */, 556 }, { 0xfe /* 0x20ab */, 444 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp1258_TimesBoldItalic[] = { // Times-BoldItalic
      { 0xc3 /* 0x0102 */, 667 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 722 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 555 }, { 0xe3 /* 0x0103 */, 500 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 500 },
      { 0xf2 /* 0x0323 */, 250 }, { 0xf5 /* 0x01a1 */, 500 }, { 0xfd /* 0x01b0 */, 556 }, { 0xfe /* 0x20ab */, 389 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp1258_TimesItalic[] = { // Times-Italic
      { 0xc3 /* 0x0102 */, 611 }, { 0xcc /* 0x0300 */, 333 }, { 0xd0 /* 0x0110 */, 722 }, { 0xd2 /* 0x0309 */, 333 }, { 0xd5 /* 0x01a0 */, 722 },
      { 0xdd /* 0x01af */, 722 }, { 0xde /* 0x0303 */, 420 }, { 0xe3 /* 0x0103 */, 500 }, { 0xec /* 0x0301 */, 333 }, { 0xf0 /* 0x0111 */, 500 },
      { 0xf2 /* 0x0323 */, 250 }, { 0xf5 /* 0x01a1 */, 500 }, { 0xfd /* 0x01b0 */, 500 }, { 0xfe /* 0x20ab */, 389 },
      {0, 0}
   }, // Times-Italic

   substituteWidths_cp874_Helvetica[] = { // Helvetica
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 500 }, { 0xa8 /* 0x0e08 */, 500 }, { 0xa9 /* 0x0e09 */, 500 }, { 0xaa /* 0x0e0a */, 556 },
      { 0xab /* 0x0e0b */, 556 }, { 0xac /* 0x0e0c */, 944 }, { 0xad /* 0x0e0d */, 944 }, { 0xae /* 0x0e0e */, 778 }, { 0xaf /* 0x0e0f */, 778 },
      { 0xb0 /* 0x0e10 */, 778 }, { 0xb1 /* 0x0e11 */, 944 }, { 0xb2 /* 0x0e12 */, 944 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 722 }, { 0xbc /* 0x0e1c */, 722 }, { 0xbd /* 0x0e1d */, 722 }, { 0xbe /* 0x0e1e */, 722 },
      { 0xbf /* 0x0e1f */, 722 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 556 }, { 0xc2 /* 0x0e22 */, 556 }, { 0xc3 /* 0x0e23 */, 556 },
      { 0xc4 /* 0x0e24 */, 556 }, { 0xc5 /* 0x0e25 */, 556 }, { 0xc6 /* 0x0e26 */, 556 }, { 0xc7 /* 0x0e27 */, 556 }, { 0xc8 /* 0x0e28 */, 556 },
      { 0xc9 /* 0x0e29 */, 556 }, { 0xca /* 0x0e2a */, 556 }, { 0xcb /* 0x0e2b */, 556 }, { 0xcc /* 0x0e2c */, 722 }, { 0xcd /* 0x0e2d */, 556 },
      { 0xce /* 0x0e2e */, 556 }, { 0xcf /* 0x0e2f */, 556 }, { 0xd0 /* 0x0e30 */, 584 }, { 0xd1 /* 0x0e31 */, 584 }, { 0xd2 /* 0x0e32 */, 500 },
      { 0xd3 /* 0x0e33 */, 556 }, { 0xd4 /* 0x0e34 */, 833 }, { 0xd5 /* 0x0e35 */, 833 }, { 0xd6 /* 0x0e36 */, 833 }, { 0xd7 /* 0x0e37 */, 833 },
      { 0xd8 /* 0x0e38 */, 833 }, { 0xd9 /* 0x0e39 */, 833 }, { 0xda /* 0x0e3a */, 833 }, { 0xdf /* 0x0e3f */, 667 }, { 0xe0 /* 0x0e40 */, 278 },
      { 0xe1 /* 0x0e41 */, 556 }, { 0xe2 /* 0x0e42 */, 278 }, { 0xe3 /* 0x0e43 */, 278 }, { 0xe4 /* 0x0e44 */, 278 }, { 0xe5 /* 0x0e45 */, 222 },
      { 0xe6 /* 0x0e46 */, 222 }, { 0xe7 /* 0x0e47 */, 584 }, { 0xe8 /* 0x0e48 */, 584 }, { 0xe9 /* 0x0e49 */, 584 }, { 0xea /* 0x0e4a */, 584 },
      { 0xeb /* 0x0e4b */, 222 }, { 0xec /* 0x0e4c */, 222 }, { 0xed /* 0x0e4d */, 222 }, { 0xee /* 0x0e4e */, 222 }, { 0xef /* 0x0e4f */, 556 },
      { 0xf0 /* 0x0e50 */, 556 }, { 0xf1 /* 0x0e51 */, 556 }, { 0xf2 /* 0x0e52 */, 556 }, { 0xf3 /* 0x0e53 */, 722 }, { 0xf4 /* 0x0e54 */, 722 },
      { 0xf5 /* 0x0e55 */, 722 }, { 0xf6 /* 0x0e56 */, 556 }, { 0xf7 /* 0x0e57 */, 722 }, { 0xf8 /* 0x0e58 */, 722 }, { 0xf9 /* 0x0e59 */, 556 },
      { 0xfa /* 0x0e5a */, 222 }, { 0xfb /* 0x0e5b */, 722 },
      {0, 0}
   }, // Helvetica

   substituteWidths_cp874_HelveticaBold[] = { // Helvetica-Bold
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 556 }, { 0xa8 /* 0x0e08 */, 556 }, { 0xa9 /* 0x0e09 */, 556 }, { 0xaa /* 0x0e0a */, 611 },
      { 0xab /* 0x0e0b */, 611 }, { 0xac /* 0x0e0c */, 944 }, { 0xad /* 0x0e0d */, 944 }, { 0xae /* 0x0e0e */, 778 }, { 0xaf /* 0x0e0f */, 778 },
      { 0xb0 /* 0x0e10 */, 778 }, { 0xb1 /* 0x0e11 */, 944 }, { 0xb2 /* 0x0e12 */, 944 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 778 }, { 0xbc /* 0x0e1c */, 778 }, { 0xbd /* 0x0e1d */, 778 }, { 0xbe /* 0x0e1e */, 778 },
      { 0xbf /* 0x0e1f */, 778 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 611 }, { 0xc2 /* 0x0e22 */, 611 }, { 0xc3 /* 0x0e23 */, 611 },
      { 0xc4 /* 0x0e24 */, 611 }, { 0xc5 /* 0x0e25 */, 611 }, { 0xc6 /* 0x0e26 */, 611 }, { 0xc7 /* 0x0e27 */, 611 }, { 0xc8 /* 0x0e28 */, 611 },
      { 0xc9 /* 0x0e29 */, 611 }, { 0xca /* 0x0e2a */, 611 }, { 0xcb /* 0x0e2b */, 611 }, { 0xcc /* 0x0e2c */, 778 }, { 0xcd /* 0x0e2d */, 611 },
      { 0xce /* 0x0e2e */, 611 }, { 0xcf /* 0x0e2f */, 611 }, { 0xd0 /* 0x0e30 */, 584 }, { 0xd1 /* 0x0e31 */, 584 }, { 0xd2 /* 0x0e32 */, 556 },
      { 0xd3 /* 0x0e33 */, 611 }, { 0xd4 /* 0x0e34 */, 889 }, { 0xd5 /* 0x0e35 */, 889 }, { 0xd6 /* 0x0e36 */, 889 }, { 0xd7 /* 0x0e37 */, 889 },
      { 0xd8 /* 0x0e38 */, 889 }, { 0xd9 /* 0x0e39 */, 889 }, { 0xda /* 0x0e3a */, 889 }, { 0xdf /* 0x0e3f */, 722 }, { 0xe0 /* 0x0e40 */, 278 },
      { 0xe1 /* 0x0e41 */, 611 }, { 0xe2 /* 0x0e42 */, 278 }, { 0xe3 /* 0x0e43 */, 278 }, { 0xe4 /* 0x0e44 */, 278 }, { 0xe5 /* 0x0e45 */, 278 },
      { 0xe6 /* 0x0e46 */, 278 }, { 0xe7 /* 0x0e47 */, 584 }, { 0xe8 /* 0x0e48 */, 584 }, { 0xe9 /* 0x0e49 */, 584 }, { 0xea /* 0x0e4a */, 584 },
      { 0xeb /* 0x0e4b */, 278 }, { 0xec /* 0x0e4c */, 278 }, { 0xed /* 0x0e4d */, 278 }, { 0xee /* 0x0e4e */, 278 }, { 0xef /* 0x0e4f */, 611 },
      { 0xf0 /* 0x0e50 */, 611 }, { 0xf1 /* 0x0e51 */, 611 }, { 0xf2 /* 0x0e52 */, 611 }, { 0xf3 /* 0x0e53 */, 778 }, { 0xf4 /* 0x0e54 */, 778 },
      { 0xf5 /* 0x0e55 */, 778 }, { 0xf6 /* 0x0e56 */, 611 }, { 0xf7 /* 0x0e57 */, 778 }, { 0xf8 /* 0x0e58 */, 778 }, { 0xf9 /* 0x0e59 */, 611 },
      { 0xfa /* 0x0e5a */, 278 }, { 0xfb /* 0x0e5b */, 778 },
      {0, 0}
   }, // Helvetica-Bold

   substituteWidths_cp874_HelveticaBoldOblique[] = { // Helvetica-BoldOblique
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 556 }, { 0xa8 /* 0x0e08 */, 556 }, { 0xa9 /* 0x0e09 */, 556 }, { 0xaa /* 0x0e0a */, 611 },
      { 0xab /* 0x0e0b */, 611 }, { 0xac /* 0x0e0c */, 944 }, { 0xad /* 0x0e0d */, 944 }, { 0xae /* 0x0e0e */, 778 }, { 0xaf /* 0x0e0f */, 778 },
      { 0xb0 /* 0x0e10 */, 778 }, { 0xb1 /* 0x0e11 */, 944 }, { 0xb2 /* 0x0e12 */, 944 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 778 }, { 0xbc /* 0x0e1c */, 778 }, { 0xbd /* 0x0e1d */, 778 }, { 0xbe /* 0x0e1e */, 778 },
      { 0xbf /* 0x0e1f */, 778 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 611 }, { 0xc2 /* 0x0e22 */, 611 }, { 0xc3 /* 0x0e23 */, 611 },
      { 0xc4 /* 0x0e24 */, 611 }, { 0xc5 /* 0x0e25 */, 611 }, { 0xc6 /* 0x0e26 */, 611 }, { 0xc7 /* 0x0e27 */, 611 }, { 0xc8 /* 0x0e28 */, 611 },
      { 0xc9 /* 0x0e29 */, 611 }, { 0xca /* 0x0e2a */, 611 }, { 0xcb /* 0x0e2b */, 611 }, { 0xcc /* 0x0e2c */, 778 }, { 0xcd /* 0x0e2d */, 611 },
      { 0xce /* 0x0e2e */, 611 }, { 0xcf /* 0x0e2f */, 611 }, { 0xd0 /* 0x0e30 */, 584 }, { 0xd1 /* 0x0e31 */, 584 }, { 0xd2 /* 0x0e32 */, 556 },
      { 0xd3 /* 0x0e33 */, 611 }, { 0xd4 /* 0x0e34 */, 889 }, { 0xd5 /* 0x0e35 */, 889 }, { 0xd6 /* 0x0e36 */, 889 }, { 0xd7 /* 0x0e37 */, 889 },
      { 0xd8 /* 0x0e38 */, 889 }, { 0xd9 /* 0x0e39 */, 889 }, { 0xda /* 0x0e3a */, 889 }, { 0xdf /* 0x0e3f */, 722 }, { 0xe0 /* 0x0e40 */, 278 },
      { 0xe1 /* 0x0e41 */, 611 }, { 0xe2 /* 0x0e42 */, 278 }, { 0xe3 /* 0x0e43 */, 278 }, { 0xe4 /* 0x0e44 */, 278 }, { 0xe5 /* 0x0e45 */, 278 },
      { 0xe6 /* 0x0e46 */, 278 }, { 0xe7 /* 0x0e47 */, 584 }, { 0xe8 /* 0x0e48 */, 584 }, { 0xe9 /* 0x0e49 */, 584 }, { 0xea /* 0x0e4a */, 584 },
      { 0xeb /* 0x0e4b */, 278 }, { 0xec /* 0x0e4c */, 278 }, { 0xed /* 0x0e4d */, 278 }, { 0xee /* 0x0e4e */, 278 }, { 0xef /* 0x0e4f */, 611 },
      { 0xf0 /* 0x0e50 */, 611 }, { 0xf1 /* 0x0e51 */, 611 }, { 0xf2 /* 0x0e52 */, 611 }, { 0xf3 /* 0x0e53 */, 778 }, { 0xf4 /* 0x0e54 */, 778 },
      { 0xf5 /* 0x0e55 */, 778 }, { 0xf6 /* 0x0e56 */, 611 }, { 0xf7 /* 0x0e57 */, 778 }, { 0xf8 /* 0x0e58 */, 778 }, { 0xf9 /* 0x0e59 */, 611 },
      { 0xfa /* 0x0e5a */, 278 }, { 0xfb /* 0x0e5b */, 778 },
      {0, 0}
   }, // Helvetica-BoldOblique

   substituteWidths_cp874_HelveticaOblique[] = { // Helvetica-Oblique
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 500 }, { 0xa8 /* 0x0e08 */, 500 }, { 0xa9 /* 0x0e09 */, 500 }, { 0xaa /* 0x0e0a */, 556 },
      { 0xab /* 0x0e0b */, 556 }, { 0xac /* 0x0e0c */, 944 }, { 0xad /* 0x0e0d */, 944 }, { 0xae /* 0x0e0e */, 778 }, { 0xaf /* 0x0e0f */, 778 },
      { 0xb0 /* 0x0e10 */, 778 }, { 0xb1 /* 0x0e11 */, 944 }, { 0xb2 /* 0x0e12 */, 944 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 722 }, { 0xbc /* 0x0e1c */, 722 }, { 0xbd /* 0x0e1d */, 722 }, { 0xbe /* 0x0e1e */, 722 },
      { 0xbf /* 0x0e1f */, 722 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 556 }, { 0xc2 /* 0x0e22 */, 556 }, { 0xc3 /* 0x0e23 */, 556 },
      { 0xc4 /* 0x0e24 */, 556 }, { 0xc5 /* 0x0e25 */, 556 }, { 0xc6 /* 0x0e26 */, 556 }, { 0xc7 /* 0x0e27 */, 556 }, { 0xc8 /* 0x0e28 */, 556 },
      { 0xc9 /* 0x0e29 */, 556 }, { 0xca /* 0x0e2a */, 556 }, { 0xcb /* 0x0e2b */, 556 }, { 0xcc /* 0x0e2c */, 722 }, { 0xcd /* 0x0e2d */, 556 },
      { 0xce /* 0x0e2e */, 556 }, { 0xcf /* 0x0e2f */, 556 }, { 0xd0 /* 0x0e30 */, 584 }, { 0xd1 /* 0x0e31 */, 584 }, { 0xd2 /* 0x0e32 */, 500 },
      { 0xd3 /* 0x0e33 */, 556 }, { 0xd4 /* 0x0e34 */, 833 }, { 0xd5 /* 0x0e35 */, 833 }, { 0xd6 /* 0x0e36 */, 833 }, { 0xd7 /* 0x0e37 */, 833 },
      { 0xd8 /* 0x0e38 */, 833 }, { 0xd9 /* 0x0e39 */, 833 }, { 0xda /* 0x0e3a */, 833 }, { 0xdf /* 0x0e3f */, 667 }, { 0xe0 /* 0x0e40 */, 278 },
      { 0xe1 /* 0x0e41 */, 556 }, { 0xe2 /* 0x0e42 */, 278 }, { 0xe3 /* 0x0e43 */, 278 }, { 0xe4 /* 0x0e44 */, 278 }, { 0xe5 /* 0x0e45 */, 222 },
      { 0xe6 /* 0x0e46 */, 222 }, { 0xe7 /* 0x0e47 */, 584 }, { 0xe8 /* 0x0e48 */, 584 }, { 0xe9 /* 0x0e49 */, 584 }, { 0xea /* 0x0e4a */, 584 },
      { 0xeb /* 0x0e4b */, 222 }, { 0xec /* 0x0e4c */, 222 }, { 0xed /* 0x0e4d */, 222 }, { 0xee /* 0x0e4e */, 222 }, { 0xef /* 0x0e4f */, 556 },
      { 0xf0 /* 0x0e50 */, 556 }, { 0xf1 /* 0x0e51 */, 556 }, { 0xf2 /* 0x0e52 */, 556 }, { 0xf3 /* 0x0e53 */, 722 }, { 0xf4 /* 0x0e54 */, 722 },
      { 0xf5 /* 0x0e55 */, 722 }, { 0xf6 /* 0x0e56 */, 556 }, { 0xf7 /* 0x0e57 */, 722 }, { 0xf8 /* 0x0e58 */, 722 }, { 0xf9 /* 0x0e59 */, 556 },
      { 0xfa /* 0x0e5a */, 222 }, { 0xfb /* 0x0e5b */, 722 },
      {0, 0}
   }, // Helvetica-Oblique

   substituteWidths_cp874_TimesRoman[] = { // Times-Roman
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 389 }, { 0xa8 /* 0x0e08 */, 389 }, { 0xa9 /* 0x0e09 */, 389 }, { 0xaa /* 0x0e0a */, 500 },
      { 0xab /* 0x0e0b */, 500 }, { 0xac /* 0x0e0c */, 944 }, { 0xad /* 0x0e0d */, 944 }, { 0xae /* 0x0e0e */, 722 }, { 0xaf /* 0x0e0f */, 722 },
      { 0xb0 /* 0x0e10 */, 722 }, { 0xb1 /* 0x0e11 */, 944 }, { 0xb2 /* 0x0e12 */, 944 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 722 }, { 0xbc /* 0x0e1c */, 722 }, { 0xbd /* 0x0e1d */, 722 }, { 0xbe /* 0x0e1e */, 722 },
      { 0xbf /* 0x0e1f */, 722 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 500 }, { 0xc2 /* 0x0e22 */, 500 }, { 0xc3 /* 0x0e23 */, 500 },
      { 0xc4 /* 0x0e24 */, 500 }, { 0xc5 /* 0x0e25 */, 500 }, { 0xc6 /* 0x0e26 */, 500 }, { 0xc7 /* 0x0e27 */, 500 }, { 0xc8 /* 0x0e28 */, 500 },
      { 0xc9 /* 0x0e29 */, 500 }, { 0xca /* 0x0e2a */, 500 }, { 0xcb /* 0x0e2b */, 500 }, { 0xcc /* 0x0e2c */, 722 }, { 0xcd /* 0x0e2d */, 500 },
      { 0xce /* 0x0e2e */, 500 }, { 0xcf /* 0x0e2f */, 500 }, { 0xd0 /* 0x0e30 */, 541 }, { 0xd1 /* 0x0e31 */, 541 }, { 0xd2 /* 0x0e32 */, 500 },
      { 0xd3 /* 0x0e33 */, 500 }, { 0xd4 /* 0x0e34 */, 778 }, { 0xd5 /* 0x0e35 */, 778 }, { 0xd6 /* 0x0e36 */, 778 }, { 0xd7 /* 0x0e37 */, 778 },
      { 0xd8 /* 0x0e38 */, 778 }, { 0xd9 /* 0x0e39 */, 778 }, { 0xda /* 0x0e3a */, 778 }, { 0xdf /* 0x0e3f */, 667 }, { 0xe0 /* 0x0e40 */, 333 },
      { 0xe1 /* 0x0e41 */, 500 }, { 0xe2 /* 0x0e42 */, 333 }, { 0xe3 /* 0x0e43 */, 333 }, { 0xe4 /* 0x0e44 */, 333 }, { 0xe5 /* 0x0e45 */, 278 },
      { 0xe6 /* 0x0e46 */, 278 }, { 0xe7 /* 0x0e47 */, 541 }, { 0xe8 /* 0x0e48 */, 541 }, { 0xe9 /* 0x0e49 */, 541 }, { 0xea /* 0x0e4a */, 541 },
      { 0xeb /* 0x0e4b */, 278 }, { 0xec /* 0x0e4c */, 278 }, { 0xed /* 0x0e4d */, 278 }, { 0xee /* 0x0e4e */, 278 }, { 0xef /* 0x0e4f */, 500 },
      { 0xf0 /* 0x0e50 */, 500 }, { 0xf1 /* 0x0e51 */, 500 }, { 0xf2 /* 0x0e52 */, 500 }, { 0xf3 /* 0x0e53 */, 722 }, { 0xf4 /* 0x0e54 */, 722 },
      { 0xf5 /* 0x0e55 */, 722 }, { 0xf6 /* 0x0e56 */, 500 }, { 0xf7 /* 0x0e57 */, 722 }, { 0xf8 /* 0x0e58 */, 722 }, { 0xf9 /* 0x0e59 */, 500 },
      { 0xfa /* 0x0e5a */, 278 }, { 0xfb /* 0x0e5b */, 722 },
      {0, 0}
   }, // Times-Roman

   substituteWidths_cp874_TimesBold[] = { // Times-Bold
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 500 }, { 0xa8 /* 0x0e08 */, 500 }, { 0xa9 /* 0x0e09 */, 500 }, { 0xaa /* 0x0e0a */, 556 },
      { 0xab /* 0x0e0b */, 556 }, { 0xac /* 0x0e0c */, 1000 }, { 0xad /* 0x0e0d */, 1000 }, { 0xae /* 0x0e0e */, 778 }, { 0xaf /* 0x0e0f */, 778 },
      { 0xb0 /* 0x0e10 */, 778 }, { 0xb1 /* 0x0e11 */, 1000 }, { 0xb2 /* 0x0e12 */, 1000 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 722 }, { 0xbc /* 0x0e1c */, 722 }, { 0xbd /* 0x0e1d */, 722 }, { 0xbe /* 0x0e1e */, 722 },
      { 0xbf /* 0x0e1f */, 722 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 556 }, { 0xc2 /* 0x0e22 */, 556 }, { 0xc3 /* 0x0e23 */, 556 },
      { 0xc4 /* 0x0e24 */, 556 }, { 0xc5 /* 0x0e25 */, 556 }, { 0xc6 /* 0x0e26 */, 556 }, { 0xc7 /* 0x0e27 */, 556 }, { 0xc8 /* 0x0e28 */, 556 },
      { 0xc9 /* 0x0e29 */, 556 }, { 0xca /* 0x0e2a */, 556 }, { 0xcb /* 0x0e2b */, 556 }, { 0xcc /* 0x0e2c */, 722 }, { 0xcd /* 0x0e2d */, 556 },
      { 0xce /* 0x0e2e */, 556 }, { 0xcf /* 0x0e2f */, 556 }, { 0xd0 /* 0x0e30 */, 520 }, { 0xd1 /* 0x0e31 */, 520 }, { 0xd2 /* 0x0e32 */, 556 },
      { 0xd3 /* 0x0e33 */, 556 }, { 0xd4 /* 0x0e34 */, 833 }, { 0xd5 /* 0x0e35 */, 833 }, { 0xd6 /* 0x0e36 */, 833 }, { 0xd7 /* 0x0e37 */, 833 },
      { 0xd8 /* 0x0e38 */, 833 }, { 0xd9 /* 0x0e39 */, 833 }, { 0xda /* 0x0e3a */, 833 }, { 0xdf /* 0x0e3f */, 667 }, { 0xe0 /* 0x0e40 */, 389 },
      { 0xe1 /* 0x0e41 */, 556 }, { 0xe2 /* 0x0e42 */, 389 }, { 0xe3 /* 0x0e43 */, 389 }, { 0xe4 /* 0x0e44 */, 389 }, { 0xe5 /* 0x0e45 */, 333 },
      { 0xe6 /* 0x0e46 */, 333 }, { 0xe7 /* 0x0e47 */, 520 }, { 0xe8 /* 0x0e48 */, 520 }, { 0xe9 /* 0x0e49 */, 520 }, { 0xea /* 0x0e4a */, 520 },
      { 0xeb /* 0x0e4b */, 278 }, { 0xec /* 0x0e4c */, 278 }, { 0xed /* 0x0e4d */, 278 }, { 0xee /* 0x0e4e */, 278 }, { 0xef /* 0x0e4f */, 500 },
      { 0xf0 /* 0x0e50 */, 500 }, { 0xf1 /* 0x0e51 */, 500 }, { 0xf2 /* 0x0e52 */, 556 }, { 0xf3 /* 0x0e53 */, 722 }, { 0xf4 /* 0x0e54 */, 722 },
      { 0xf5 /* 0x0e55 */, 722 }, { 0xf6 /* 0x0e56 */, 556 }, { 0xf7 /* 0x0e57 */, 722 }, { 0xf8 /* 0x0e58 */, 722 }, { 0xf9 /* 0x0e59 */, 556 },
      { 0xfa /* 0x0e5a */, 333 }, { 0xfb /* 0x0e5b */, 722 },
      {0, 0}
   }, // Times-Bold

   substituteWidths_cp874_TimesBoldItalic[] = { // Times-BoldItalic
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 722 }, { 0xa7 /* 0x0e07 */, 500 }, { 0xa8 /* 0x0e08 */, 500 }, { 0xa9 /* 0x0e09 */, 500 }, { 0xaa /* 0x0e0a */, 556 },
      { 0xab /* 0x0e0b */, 556 }, { 0xac /* 0x0e0c */, 889 }, { 0xad /* 0x0e0d */, 889 }, { 0xae /* 0x0e0e */, 722 }, { 0xaf /* 0x0e0f */, 722 },
      { 0xb0 /* 0x0e10 */, 722 }, { 0xb1 /* 0x0e11 */, 889 }, { 0xb2 /* 0x0e12 */, 889 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 667 }, { 0xbc /* 0x0e1c */, 667 }, { 0xbd /* 0x0e1d */, 667 }, { 0xbe /* 0x0e1e */, 667 },
      { 0xbf /* 0x0e1f */, 667 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 556 }, { 0xc2 /* 0x0e22 */, 556 }, { 0xc3 /* 0x0e23 */, 556 },
      { 0xc4 /* 0x0e24 */, 556 }, { 0xc5 /* 0x0e25 */, 556 }, { 0xc6 /* 0x0e26 */, 556 }, { 0xc7 /* 0x0e27 */, 556 }, { 0xc8 /* 0x0e28 */, 556 },
      { 0xc9 /* 0x0e29 */, 556 }, { 0xca /* 0x0e2a */, 556 }, { 0xcb /* 0x0e2b */, 556 }, { 0xcc /* 0x0e2c */, 667 }, { 0xcd /* 0x0e2d */, 556 },
      { 0xce /* 0x0e2e */, 556 }, { 0xcf /* 0x0e2f */, 556 }, { 0xd0 /* 0x0e30 */, 570 }, { 0xd1 /* 0x0e31 */, 570 }, { 0xd2 /* 0x0e32 */, 500 },
      { 0xd3 /* 0x0e33 */, 556 }, { 0xd4 /* 0x0e34 */, 778 }, { 0xd5 /* 0x0e35 */, 778 }, { 0xd6 /* 0x0e36 */, 778 }, { 0xd7 /* 0x0e37 */, 778 },
      { 0xd8 /* 0x0e38 */, 778 }, { 0xd9 /* 0x0e39 */, 778 }, { 0xda /* 0x0e3a */, 778 }, { 0xdf /* 0x0e3f */, 667 }, { 0xe0 /* 0x0e40 */, 389 },
      { 0xe1 /* 0x0e41 */, 556 }, { 0xe2 /* 0x0e42 */, 389 }, { 0xe3 /* 0x0e43 */, 389 }, { 0xe4 /* 0x0e44 */, 389 }, { 0xe5 /* 0x0e45 */, 278 },
      { 0xe6 /* 0x0e46 */, 278 }, { 0xe7 /* 0x0e47 */, 570 }, { 0xe8 /* 0x0e48 */, 570 }, { 0xe9 /* 0x0e49 */, 570 }, { 0xea /* 0x0e4a */, 570 },
      { 0xeb /* 0x0e4b */, 278 }, { 0xec /* 0x0e4c */, 278 }, { 0xed /* 0x0e4d */, 278 }, { 0xee /* 0x0e4e */, 278 }, { 0xef /* 0x0e4f */, 500 },
      { 0xf0 /* 0x0e50 */, 500 }, { 0xf1 /* 0x0e51 */, 500 }, { 0xf2 /* 0x0e52 */, 556 }, { 0xf3 /* 0x0e53 */, 667 }, { 0xf4 /* 0x0e54 */, 667 },
      { 0xf5 /* 0x0e55 */, 667 }, { 0xf6 /* 0x0e56 */, 556 }, { 0xf7 /* 0x0e57 */, 667 }, { 0xf8 /* 0x0e58 */, 667 }, { 0xf9 /* 0x0e59 */, 500 },
      { 0xfa /* 0x0e5a */, 278 }, { 0xfb /* 0x0e5b */, 667 },
      {0, 0}
   }, // Times-BoldItalic

   substituteWidths_cp874_TimesItalic[] = { // Times-Italic
      { 0xa1 /* 0x0e01 */, 722 }, { 0xa2 /* 0x0e02 */, 722 }, { 0xa3 /* 0x0e03 */, 722 }, { 0xa4 /* 0x0e04 */, 722 }, { 0xa5 /* 0x0e05 */, 722 },
      { 0xa6 /* 0x0e06 */, 667 }, { 0xa7 /* 0x0e07 */, 444 }, { 0xa8 /* 0x0e08 */, 444 }, { 0xa9 /* 0x0e09 */, 444 }, { 0xaa /* 0x0e0a */, 500 },
      { 0xab /* 0x0e0b */, 500 }, { 0xac /* 0x0e0c */, 833 }, { 0xad /* 0x0e0d */, 833 }, { 0xae /* 0x0e0e */, 722 }, { 0xaf /* 0x0e0f */, 722 },
      { 0xb0 /* 0x0e10 */, 722 }, { 0xb1 /* 0x0e11 */, 833 }, { 0xb2 /* 0x0e12 */, 833 }, { 0xb3 /* 0x0e13 */, 722 }, { 0xb4 /* 0x0e14 */, 722 },
      { 0xb5 /* 0x0e15 */, 722 }, { 0xb6 /* 0x0e16 */, 722 }, { 0xb7 /* 0x0e17 */, 722 }, { 0xb8 /* 0x0e18 */, 722 }, { 0xb9 /* 0x0e19 */, 722 },
      { 0xba /* 0x0e1a */, 722 }, { 0xbb /* 0x0e1b */, 667 }, { 0xbc /* 0x0e1c */, 667 }, { 0xbd /* 0x0e1d */, 667 }, { 0xbe /* 0x0e1e */, 667 },
      { 0xbf /* 0x0e1f */, 667 }, { 0xc0 /* 0x0e20 */, 722 }, { 0xc1 /* 0x0e21 */, 500 }, { 0xc2 /* 0x0e22 */, 500 }, { 0xc3 /* 0x0e23 */, 500 },
      { 0xc4 /* 0x0e24 */, 500 }, { 0xc5 /* 0x0e25 */, 500 }, { 0xc6 /* 0x0e26 */, 500 }, { 0xc7 /* 0x0e27 */, 500 }, { 0xc8 /* 0x0e28 */, 500 },
      { 0xc9 /* 0x0e29 */, 500 }, { 0xca /* 0x0e2a */, 500 }, { 0xcb /* 0x0e2b */, 500 }, { 0xcc /* 0x0e2c */, 667 }, { 0xcd /* 0x0e2d */, 500 },
      { 0xce /* 0x0e2e */, 500 }, { 0xcf /* 0x0e2f */, 500 }, { 0xd0 /* 0x0e30 */, 541 }, { 0xd1 /* 0x0e31 */, 541 }, { 0xd2 /* 0x0e32 */, 444 },
      { 0xd3 /* 0x0e33 */, 500 }, { 0xd4 /* 0x0e34 */, 722 }, { 0xd5 /* 0x0e35 */, 722 }, { 0xd6 /* 0x0e36 */, 722 }, { 0xd7 /* 0x0e37 */, 722 },
      { 0xd8 /* 0x0e38 */, 722 }, { 0xd9 /* 0x0e39 */, 722 }, { 0xda /* 0x0e3a */, 722 }, { 0xdf /* 0x0e3f */, 611 }, { 0xe0 /* 0x0e40 */, 333 },
      { 0xe1 /* 0x0e41 */, 500 }, { 0xe2 /* 0x0e42 */, 333 }, { 0xe3 /* 0x0e43 */, 333 }, { 0xe4 /* 0x0e44 */, 333 }, { 0xe5 /* 0x0e45 */, 278 },
      { 0xe6 /* 0x0e46 */, 278 }, { 0xe7 /* 0x0e47 */, 541 }, { 0xe8 /* 0x0e48 */, 541 }, { 0xe9 /* 0x0e49 */, 541 }, { 0xea /* 0x0e4a */, 541 },
      { 0xeb /* 0x0e4b */, 278 }, { 0xec /* 0x0e4c */, 278 }, { 0xed /* 0x0e4d */, 278 }, { 0xee /* 0x0e4e */, 278 }, { 0xef /* 0x0e4f */, 500 },
      { 0xf0 /* 0x0e50 */, 500 }, { 0xf1 /* 0x0e51 */, 500 }, { 0xf2 /* 0x0e52 */, 500 }, { 0xf3 /* 0x0e53 */, 667 }, { 0xf4 /* 0x0e54 */, 667 },
      { 0xf5 /* 0x0e55 */, 667 }, { 0xf6 /* 0x0e56 */, 500 }, { 0xf7 /* 0x0e57 */, 667 }, { 0xf8 /* 0x0e58 */, 667 }, { 0xf9 /* 0x0e59 */, 500 },
      { 0xfa /* 0x0e5a */, 278 }, { 0xfb /* 0x0e5b */, 667 },
      {0, 0}
   }; // Times-Italic

enum {
   substituteWidthHelvetica = 1,
   substituteWidthHelveticaBold,
   substituteWidthHelveticaBoldOblique,
   substituteWidthHelveticaOblique,
   substituteWidthTimesRoman,
   substituteWidthTimesBold,
   substituteWidthTimesBoldItalic,
   substituteWidthTimesItalic,

   substituteWidth_Count = substituteWidthTimesItalic
};

typedef struct _MSubstituteWidths
{
   const MSubstituteWidthsArray *substWidths[substituteWidth_Count];
} MSubstituteWidths;

static const MSubstituteWidths
   substituteWidths_cp1250 = {
      substituteWidths_cp1250_Helvetica,
      substituteWidths_cp1250_HelveticaBold,
      substituteWidths_cp1250_HelveticaBoldOblique,
      substituteWidths_cp1250_HelveticaOblique,
      substituteWidths_cp1250_TimesRoman,
      substituteWidths_cp1250_TimesBold,
      substituteWidths_cp1250_TimesBoldItalic,
      substituteWidths_cp1250_TimesItalic
   },

   substituteWidths_cp1251 = {
      substituteWidths_cp1251_Helvetica,
      substituteWidths_cp1251_HelveticaBold,
      substituteWidths_cp1251_HelveticaBoldOblique,
      substituteWidths_cp1251_HelveticaOblique,
      substituteWidths_cp1251_TimesRoman,
      substituteWidths_cp1251_TimesBold,
      substituteWidths_cp1251_TimesBoldItalic,
      substituteWidths_cp1251_TimesItalic
   },

   substituteWidths_cp1253 = {
      substituteWidths_cp1253_Helvetica,
      substituteWidths_cp1253_HelveticaBold,
      substituteWidths_cp1253_HelveticaBoldOblique,
      substituteWidths_cp1253_HelveticaOblique,
      substituteWidths_cp1253_TimesRoman,
      substituteWidths_cp1253_TimesBold,
      substituteWidths_cp1253_TimesBoldItalic,
      substituteWidths_cp1253_TimesItalic
   },

   substituteWidths_cp1254 = {
      substituteWidths_cp1254_Helvetica,
      substituteWidths_cp1254_HelveticaBold,
      substituteWidths_cp1254_HelveticaBoldOblique,
      substituteWidths_cp1254_HelveticaOblique,
      substituteWidths_cp1254_TimesRoman,
      substituteWidths_cp1254_TimesBold,
      substituteWidths_cp1254_TimesBoldItalic,
      substituteWidths_cp1254_TimesItalic
   },

   substituteWidths_cp1255 = {
      substituteWidths_cp1255_Helvetica,
      substituteWidths_cp1255_HelveticaBold,
      substituteWidths_cp1255_HelveticaBoldOblique,
      substituteWidths_cp1255_HelveticaOblique,
      substituteWidths_cp1255_TimesRoman,
      substituteWidths_cp1255_TimesBold,
      substituteWidths_cp1255_TimesBoldItalic,
      substituteWidths_cp1255_TimesItalic
   },

   substituteWidths_cp1256 = {
      substituteWidths_cp1256_Helvetica,
      substituteWidths_cp1256_HelveticaBold,
      substituteWidths_cp1256_HelveticaBoldOblique,
      substituteWidths_cp1256_HelveticaOblique,
      substituteWidths_cp1256_TimesRoman,
      substituteWidths_cp1256_TimesBold,
      substituteWidths_cp1256_TimesBoldItalic,
      substituteWidths_cp1256_TimesItalic
   },

   substituteWidths_cp1257 = {
      substituteWidths_cp1257_Helvetica,
      substituteWidths_cp1257_HelveticaBold,
      substituteWidths_cp1257_HelveticaBoldOblique,
      substituteWidths_cp1257_HelveticaOblique,
      substituteWidths_cp1257_TimesRoman,
      substituteWidths_cp1257_TimesBold,
      substituteWidths_cp1257_TimesBoldItalic,
      substituteWidths_cp1257_TimesItalic
   },

   substituteWidths_cp1258 = {
      substituteWidths_cp1258_Helvetica,
      substituteWidths_cp1258_HelveticaBold,
      substituteWidths_cp1258_HelveticaBoldOblique,
      substituteWidths_cp1258_HelveticaOblique,
      substituteWidths_cp1258_TimesRoman,
      substituteWidths_cp1258_TimesBold,
      substituteWidths_cp1258_TimesBoldItalic,
      substituteWidths_cp1258_TimesItalic
   },

   substituteWidths_cp874 = {
      substituteWidths_cp874_Helvetica,
      substituteWidths_cp874_HelveticaBold,
      substituteWidths_cp874_HelveticaBoldOblique,
      substituteWidths_cp874_HelveticaOblique,
      substituteWidths_cp874_TimesRoman,
      substituteWidths_cp874_TimesBold,
      substituteWidths_cp874_TimesBoldItalic,
      substituteWidths_cp874_TimesItalic
   };

typedef struct _MSubstitueBaseWidths
{
   const unsigned short *baseWidths;
} MSubstitueBaseWidths;

static const MSubstitueBaseWidths
   substituteBaseWidths[substituteWidth_Count] = {
      baseHelveticaWidths,
      baseHelveticaBoldWidths,
      baseHelveticaBoldObliqueWidths,
      baseHelveticaObliqueWidths,
      baseTimesRomanWidths,
      baseTimesBoldWidths,
      baseTimesBoldItalicWidths,
      baseTimesItalicWidths
   };

static bool populateEncodingDifference(BYTE character_set, PdfEncodingDifference &difference)
/* returns newly allocated difference for the given Windows character set (LOGFONT::lfCharSet),
   returns NULL is does not have any changes for it.
   The difference is constructed against WinAnsiEncoding. */

{
   const pdf_utf16be *unicode_chars = NULL;

   switch(character_set) {
   case ANSI_CHARSET:
      break;
   case DEFAULT_CHARSET:
      break;
   case BALTIC_CHARSET:
      unicode_chars = unicode_cp1257;
      break;
   case CHINESEBIG5_CHARSET:
      break;
   case EASTEUROPE_CHARSET:
      unicode_chars = unicode_cp1250;
      break;
   case GB2312_CHARSET:
      break;
   case GREEK_CHARSET:
      unicode_chars = unicode_cp1253;
      break;
   case HANGUL_CHARSET:
      break;
   case MAC_CHARSET:
      break;
   case OEM_CHARSET:
      break;
   case RUSSIAN_CHARSET:
      unicode_chars = unicode_cp1251;
      break;
   case SHIFTJIS_CHARSET:
      break;
   case SYMBOL_CHARSET:
      break;
   case TURKISH_CHARSET:
      unicode_chars = unicode_cp1254;
      break;
   case JOHAB_CHARSET:
      break;
   case HEBREW_CHARSET:
      unicode_chars = unicode_cp1255;
      break;
   case ARABIC_CHARSET:
      unicode_chars = unicode_cp1256;
      break;
   case THAI_CHARSET:
      unicode_chars = unicode_cp874;
      break;
   }

   if (!unicode_chars) {
      return false;
   }

   int ii;
   for (ii = 0; ii < 256; ii++) {
      if (unicode_cp1252[ii] != unicode_chars[ii]) {
         pdf_utf16be unicodeValue = unicode_chars[ii];

         difference.AddDifference(ii, unicodeValue);
      }
   }

   return true;
}
//---------------------------------------------------------------------------

MEncodingsCache::MEncodingsCache(PdfDocument *pDocument)
{
   document = pDocument;
}
//---------------------------------------------------------------------------

MEncodingsCache::~MEncodingsCache()
{
   clear();
}
//---------------------------------------------------------------------------

const PdfEncoding *MEncodingsCache::getEncodingForCharSet(BYTE lfCharSet, PdfDocument *overrideDocument)
{
   if (lfCharSet == ANSI_CHARSET ||
       lfCharSet == DEFAULT_CHARSET ||
       lfCharSet == OEM_CHARSET) {
      LOGFONTA lf;
      HGDIOBJ obj = NULL;

      if (lfCharSet == ANSI_CHARSET)
         obj = GetStockObject(ANSI_VAR_FONT);
      else if (lfCharSet == DEFAULT_CHARSET)
         obj = GetStockObject(DEFAULT_GUI_FONT);
      else if (lfCharSet == OEM_CHARSET)
         obj = GetStockObject(OEM_FIXED_FONT);

      if (obj && GetObjectA(obj, sizeof(lf), &lf)) {
         if (lfCharSet == lf.lfCharSet) {
            lfCharSet = DEFAULT_CHARSET;
         } else {
            lfCharSet = lf.lfCharSet;
         }
      } else {
         lfCharSet = DEFAULT_CHARSET;
      }
   }

   if (lfCharSet == DEFAULT_CHARSET) {
      return PdfEncodingFactory::GlobalWinAnsiEncodingInstance();
   }

   if (lfCharSet == SYMBOL_CHARSET) {
      return PdfEncodingFactory::GlobalZapfDingbatsEncodingInstance();
   }

   if (lfCharSet == MAC_CHARSET) {
      return PdfEncodingFactory::GlobalMacRomanEncodingInstance();
   }

   std::map<BYTE, std::pair<bool, PdfEncoding *> >::const_iterator it = encodings.find(lfCharSet);
   if (it != encodings.end()) {
      return it->second.second;
   }

   PdfEncodingDifference difference;
   if (!populateEncodingDifference (lfCharSet, difference)) {
      return NULL;
   }

   PdfEncoding *encoding = new PdfDifferenceEncoding(difference, PdfDifferenceEncoding::eBaseEncoding_WinAnsi, overrideDocument ? overrideDocument : document, false);
   encodings[lfCharSet] = std::pair<bool, PdfEncoding *>(true, encoding);

   return encoding;
}
//---------------------------------------------------------------------------

void MEncodingsCache::populateBase14FontWidths(PdfFont *base14Font)
{
   if (!base14Font || base14Font->GetObject()->GetDictionary().GetKey("Widths")) {
      return;
   }

   const PdfEncoding *encoding = base14Font->GetEncoding();
   std::map<BYTE, std::pair<bool /* can delete */, PdfEncoding *> >::const_iterator it, end = encodings.end();
   for (it = encodings.begin(); it != end; it++) {
      if (it->second.second == encoding) {
         break;
      }
   }

   if (it == end) {
      return;
   }

   const PdfFontMetricsBase14 *base14Metrics = dynamic_cast<const PdfFontMetricsBase14 *>(base14Font->GetFontMetrics());
   if (!base14Metrics) {
      return;
   }

   const char *fontName = base14Metrics->GetFontname();
   if (!fontName) {
      return;
   }

   const char *fontNames[] = {
      PODOFO_HPDF_FONT_HELVETICA,
      PODOFO_HPDF_FONT_HELVETICA_BOLD,
      PODOFO_HPDF_FONT_HELVETICA_BOLD_OBLIQUE,
      PODOFO_HPDF_FONT_HELVETICA_OBLIQUE,
      PODOFO_HPDF_FONT_TIMES_ROMAN,
      PODOFO_HPDF_FONT_TIMES_BOLD,
      PODOFO_HPDF_FONT_TIMES_BOLD_ITALIC,
      PODOFO_HPDF_FONT_TIMES_ITALIC,
      PODOFO_HPDF_FONT_COURIER,
      PODOFO_HPDF_FONT_COURIER_BOLD,
      PODOFO_HPDF_FONT_COURIER_BOLD_OBLIQUE,
      PODOFO_HPDF_FONT_COURIER_OBLIQUE,
      NULL
   };
   int fontIndex;
   for (fontIndex = 0; fontNames[fontIndex]; fontIndex++) {
      if (stricmp(fontName, fontNames[fontIndex]) == 0) {
         break;
      }
   }

   if (!fontNames[fontIndex]) {
      return;
   }

   const MSubstituteWidths *substituteWidths = NULL;

   switch(it->first) {
   case ANSI_CHARSET:
      break;
   case DEFAULT_CHARSET:
      break;
   case BALTIC_CHARSET:
      substituteWidths = &substituteWidths_cp1257;
      break;
   case CHINESEBIG5_CHARSET:
      break;
   case EASTEUROPE_CHARSET:
      substituteWidths = &substituteWidths_cp1250;
      break;
   case GB2312_CHARSET:
      break;
   case GREEK_CHARSET:
      substituteWidths = &substituteWidths_cp1253;
      break;
   case HANGUL_CHARSET:
      break;
   case MAC_CHARSET:
      break;
   case OEM_CHARSET:
      break;
   case RUSSIAN_CHARSET:
      substituteWidths = &substituteWidths_cp1251;
      break;
   case SHIFTJIS_CHARSET:
      break;
   case SYMBOL_CHARSET:
      break;
   case TURKISH_CHARSET:
      substituteWidths = &substituteWidths_cp1254;
      break;
   case JOHAB_CHARSET:
      break;
   case HEBREW_CHARSET:
      substituteWidths = &substituteWidths_cp1255;
      break;
   case ARABIC_CHARSET:
      substituteWidths = &substituteWidths_cp1256;
      break;
   case THAI_CHARSET:
      substituteWidths = &substituteWidths_cp874;
      break;
   }

   if (!substituteWidths) {
      return;
   }

   PdfObject *pWidth;
   PdfArray items;

   pWidth = base14Font->GetObject()->GetOwner()->CreateObject();
   if( !pWidth ) {
      PODOFO_RAISE_ERROR( ePdfError_InvalidHandle );
   }

   int ii;
   pdf_int64 array[256 - 32];

   // Courier fonts
   if (fontIndex >= substituteWidth_Count) {
      for (ii = 0; ii < 256 - 32; ii++) {
         array[ii] = baseCourierWidths[ii];
      }

      for (ii = 0; substituteWidths->substWidths[0][ii].index != 0; ii++) {
         int index = substituteWidths->substWidths[0][ii].index;
         array[index - 32] = 600;
      }
   } else {
      for (ii = 0; ii < 256 - 32; ii++) {
         array[ii] = substituteBaseWidths[fontIndex].baseWidths[ii];
      }

      for (ii = 0; substituteWidths->substWidths[fontIndex][ii].index != 0; ii++) {
         int index = substituteWidths->substWidths[fontIndex][ii].index;
         array[index - 32] = substituteWidths->substWidths[fontIndex][ii].width;
      }
   }

   for (ii = 0; ii < 256 - 32; ii++) {
      items.push_back(PdfVariant(array[ii]));
   }

   PdfVariant &var = *pWidth;
   var = PdfVariant(items);

   base14Font->GetObject()->GetDictionary().AddKey("FirstChar", PdfVariant( static_cast<pdf_int64>(32) ) );
   base14Font->GetObject()->GetDictionary().AddKey("LastChar", PdfVariant( static_cast<pdf_int64>(255) ) );
   base14Font->GetObject()->GetDictionary().AddKey("Widths", pWidth->Reference() );
}
//---------------------------------------------------------------------------

void MEncodingsCache::put_encodingReplacement(BYTE lfCharSet, const PdfEncoding *encoding)
{
   if (!encoding || encodings.find(lfCharSet) != encodings.end()) {
      return;
   }

   encodings[lfCharSet] = std::pair<bool, PdfEncoding *>(false, (PdfEncoding *) encoding);
}
//---------------------------------------------------------------------------

void MEncodingsCache::clear(void)
{
   std::map<BYTE, std::pair<bool, PdfEncoding *> >::iterator it, end = encodings.end();
   for (it = encodings.begin(); it != end; it++) {
      PdfEncoding *enc = it->second.second;

      if (it->second.first && enc) {
         delete enc;
      }
   }

   encodings.clear();
}
//---------------------------------------------------------------------------

const wchar_t *MEncodingsCache::maybeFixSymbolCharsetString(PdfFont *font, const wchar_t *origString, DWORD nChars, wchar_t **newString)
{
   if (!font || !origString || !nChars || !newString ||
       !font->GetFontMetrics() || !font->GetFontMetrics()->IsSymbol()) {
      return origString;
   }

   char *ansiStr = (char *) malloc(sizeof(char) * (1 + nChars));
   if (!ansiStr) {
      PODOFO_RAISE_ERROR(ePdfError_OutOfMemory);
      return origString;
   }

   BOOL usedDefaultChar = FALSE;
   int count = WideCharToMultiByte(CP_ACP, 0, origString, nChars, ansiStr, nChars + 1, NULL, &usedDefaultChar);
   if (usedDefaultChar || !count) {
      count = WideCharToMultiByte(CP_SYMBOL, 0, origString, nChars, ansiStr, nChars + 1, NULL, NULL);
      if (!count) {
         count = WideCharToMultiByte(CP_ACP, 0, origString, nChars, ansiStr, nChars + 1, NULL, &usedDefaultChar);
      }
   }
   if (!count || count != nChars) {
      free(ansiStr);
      return origString;
   }

   *newString = (wchar_t *) malloc(sizeof(wchar_t) * (1 + nChars));
   if (!*newString) {
      free(ansiStr);
      PODOFO_RAISE_ERROR(ePdfError_OutOfMemory);
      return origString;
   }

   DWORD ii;

   for (ii = 0; ii < nChars; ii++) {
      unsigned char uchr = (unsigned char) ansiStr[ii];
     (*newString)[ii] = 0xF000 | uchr;
   }

   free(ansiStr);

   return *newString;
}
//---------------------------------------------------------------------------

}; // namespace litePDF
